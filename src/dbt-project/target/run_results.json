{"logs": [], "results": [{"node": {"raw_sql": "/* \n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find top 100 customers with the most number of orders\n*/\n\n{{ config(materialized='table') }}\n\nselect c_custkey, c_nationkey, count(*) total_order\nfrom customer c left join orders o on c.c_custkey = o.o_custkey\ngroup by c_custkey, c_nationkey\norder by total_order desc\nlimit 100", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "top_customers"], "unique_id": "model.my_new_project.top_customers", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/top_customers.sql", "original_file_path": "models/example/top_customers.sql", "name": "top_customers", "resource_type": "model", "alias": "top_customers", "checksum": {"name": "sha256", "checksum": "64da18165bfe64bd46a8ed8c2039596201317bb47b825756a0bfdc606e0f1045"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.drop_relation_if_exists"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/top_customers.sql", "deferred": false, "compiled_sql": "/* \n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find top 100 customers with the most number of orders\n*/\n\n\n\nselect c_custkey, c_nationkey, count(*) total_order\nfrom customer c left join orders o on c.c_custkey = o.o_custkey\ngroup by c_custkey, c_nationkey\norder by total_order desc\nlimit 100", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/* \n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find top 100 customers with the most number of orders\n*/\n\n\n\nselect c_custkey, c_nationkey, count(*) total_order\nfrom customer c left join orders o on c.c_custkey = o.o_custkey\ngroup by c_custkey, c_nationkey\norder by total_order desc\nlimit 100"}, "error": null, "status": "SELECT", "execution_time": 17.334161043167114, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-01-08T14:09:27.920635Z", "completed_at": "2021-01-08T14:09:27.974321Z"}, {"name": "execute", "started_at": "2021-01-08T14:09:27.974659Z", "completed_at": "2021-01-08T14:09:45.185051Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE wns_nm_DD_TT_UCID_REFTABLE AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "wns_nm_DD_TT_UCID_REFTABLE"], "unique_id": "model.my_new_project.wns_nm_DD_TT_UCID_REFTABLE", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/wns_nm_DD_TT_UCID_REFTABLE.sql", "original_file_path": "models/example/wns_nm_DD_TT_UCID_REFTABLE.sql", "name": "wns_nm_DD_TT_UCID_REFTABLE", "resource_type": "model", "alias": "wns_nm_DD_TT_UCID_REFTABLE", "checksum": {"name": "sha256", "checksum": "5f33fc42d79c7e1517d982850642adcd7b61d74c5191db3d1862b8f0cca40e28"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/wns_nm_DD_TT_UCID_REFTABLE.sql", "deferred": false, "compiled_sql": "CREATE TABLE wns_nm_DD_TT_UCID_REFTABLE AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE wns_nm_DD_TT_UCID_REFTABLE AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;"}, "error": "Database Error in model wns_nm_DD_TT_UCID_REFTABLE (models/example/wns_nm_DD_TT_UCID_REFTABLE.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE wns_nm_DD_TT_UCID_REFTABLE AS (\n              ^\n  compiled SQL at target/run/my_new_project/models/example/wns_nm_DD_TT_UCID_REFTABLE.sql", "status": "ERROR", "execution_time": 1.397895336151123, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "DROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO;\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1);\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS wns_nm_DD_TT_UCID_REFTABLE;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_INFO;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP3;", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "WNS_NM_SD_DIM_CUSTOMER_DEMO"], "unique_id": "model.my_new_project.WNS_NM_SD_DIM_CUSTOMER_DEMO", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/WNS_NM_SD_DIM_CUSTOMER_DEMO.sql", "original_file_path": "models/example/WNS_NM_SD_DIM_CUSTOMER_DEMO.sql", "name": "WNS_NM_SD_DIM_CUSTOMER_DEMO", "resource_type": "model", "alias": "WNS_NM_SD_DIM_CUSTOMER_DEMO", "checksum": {"name": "sha256", "checksum": "c88414810fa8bbf6d60e7ec952fbe5afb0b227f09f048b53596f9e87aa649f75"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/WNS_NM_SD_DIM_CUSTOMER_DEMO.sql", "deferred": false, "compiled_sql": "DROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO;\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1);\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS wns_nm_DD_TT_UCID_REFTABLE;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_INFO;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP3;", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "DROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO;\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1);\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS wns_nm_DD_TT_UCID_REFTABLE;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_INFO;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP3;"}, "error": "Database Error in model WNS_NM_SD_DIM_CUSTOMER_DEMO (models/example/WNS_NM_SD_DIM_CUSTOMER_DEMO.sql)\n  syntax error at or near \"DROP\"\n  LINE 5:     DROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_...\n              ^\n  compiled SQL at target/run/my_new_project/models/example/WNS_NM_SD_DIM_CUSTOMER_DEMO.sql", "status": "ERROR", "execution_time": 1.4560902118682861, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\r\nDEMO_TABLE = DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n#TT_TABLE = DEVELOPMENT.WNS_AS_DD_TENDER_TYPE_MAPPING_02FEB\r\nBASKET_MAPPING = DEVELOPMENT.CUST_BASKET_MAPPING\r\nlast_updated_date = '2015-01-01' = {0} \r\nFinYearFinWeek = {1} \r\nFinYearFinWeek - 1 = {3}\r\ncust_basket_item_table_name ={4}\r\nlimit = {5}\r\ncomment = {6}\r\n*/\r\n\r\n/*0} last_updated_date '2021-01-04' , max last date updated\r\n{1} DEVELOPMENT.CUST_BASKET_ITEM_{1}, DEVELOPMENT.CUST_BASKET_ITEM_Thursday\r\n{2} fin year month and day, if run today, TEMP_CONS_CUST_BASKET_ITEM_202127_Thursday\r\n{4} cust_basket_item  --is name of table\r\n{5} limit\r\n{6} some comment */\r\n\r\n--WbVarDef -variable=vlast_updated_date    -query= \"select max(last_updated_date) from analytics.fnd_cust_basket\";   --{0}\r\nWbVarDef vlast_updated_date  = '2020-01-01' ;   --{0}\r\nWbVarDef -variable=vDayName              -query= \"select to_char(current_date-1,'Day')\";                          --{1}\r\nWbVarDef -variable=vFinYearWeekNoDay     -query= \"Select fin_year_no||fin_week_no from analytics.fnd_calendar where calendar_date = current_date-1\";   --{2}\r\nWbVarDef vCBI                  = 'cust_basket_item';                                                                                     --{4]\r\nWbVarDef vLimit                = '';   --{5}\r\nWbVarDef vComment              = '';   --{6}\r\n\r\n/*current_date_$[vlast_updated_date];\r\nselect $[vDayName];\r\nselect $[vFinYearWeekNoDay];\r\nselect $[vCBI];\r\nselect $[vLimit];\r\nselect $[vComment];*/\r\n\r\n/*\r\n-- ANALYTICS.FND_CUSTOMER\r\n-- ANALYTICS.FND_CUSTOMER_MASTER\r\n-- ANALYTICS.FND_CUST_BASKET\r\n-- ANALYTICS.FND_CUST_FV_VOUCHER\r\n-- ANALYTICS.FND_CUSTOMER_PORTFOLIO\r\n-- ANALYTICS.FND_CUST_BASKET_TENDER\r\n-- ANALYTICS.FND_CALENDAR\r\n-- ANALYTICS.FND_LOCATION\r\n-- ANALYTICS.FND_WOD_TIER_MTH_DETAIL\r\n-- ANALYTICS.FND_CUST_BASKET_ITEM\r\n-- ANALYTICS.FND_ITEM\r\n-- ANALYTICS.FND_CUST_BASKET_AUX\r\n-- DEVELOPMENT.WNS_AS_DD_TENDER_TYPE_MAPPING_02FEB (fixed, needs t\r\n-- DEVELOPMENT.CUST_BASKET_MAPPING\r\n-- DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n-- DEVELOPMENT.FND_LST_EA_CODES\r\n-- DEVELOPMENT.FND_ROG_SOC_LOCATION\r\n-- analytics.FND_CUSTOMER_CARD\r\n-- DEVELOPMENT.FND_CUST_DERIVED_RACE_REF\r\n*/\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - Collating Demographic Details ***********************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- CREATE A NEW REFTABLE FOR THE SEP END RUN\r\nCREATE TABLE #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName] AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;\r\n-- Execution time: 8.44s\r\n\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_INFO_$[vDayName] AS (\r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName]\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE)$[vLimit];\r\n-- Execution time: 16.48s\r\n\r\n--ADDING ALL THE REQUIRED INFORMATION IN ONE TABLE(HHI+DEMOGRAPHICS)\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_INFO_$[vDayName] A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY)$[vLimit];\r\n-- Execution time: 35.36s\r\n\r\n--CREATING TABLE TO DERIVE AGE AND GENDER FROM ID INFORMATION\r\nCREATE TABLE #wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))))$[vLimit];\r\n-- Execution time: 8.34s\r\n\r\n---AGE FROM ID INFORMATION\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO)$[vLimit];\r\n-- Execution time: 21.33s\r\n\r\n--------REMOVING DUPLICATES AT UCID, SUBSCRIBER_KEY LEVEL\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 47.39s\r\n\r\n--------REMOVING DUPLICATES AT UCID\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 15.12s\r\n\r\n--FINAL TABLE -- CONSIDERING THE UCID WITH LATEST MODIFIED INFORMATION\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName]\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1)$[vLimit];\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName];\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_INFO_$[vDayName];\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS #wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP3;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT B - Creating base table from CUST_BASKET data using loyalty, promotional, voucher & calendar details ****************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- Snapshot of the CUST_BASKET table\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE, TRAN_TIME, TRAN_TYPE, TRAN_SELLING, DISCOUNT_SELLING, WASTE_IND,\r\n\t\t\t\tLOYALTY_WW_SWIPE_NO, LOYALTY_EXT_SWIPE_NO, CUSTOMER_NO,VMP_IND,\r\n\t\t\t\tROW_NUMBER() OVER(PARTITION BY TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO ORDER BY LAST_UPDATED_DATE DESC) AS LATEST_FLAG\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]') $[vLimit];\r\n-- Execution time: 1m 22s\r\n\r\n-- REMOVING OLDER ROWS OF A TRANSACTION\r\nDELETE FROM #wns_nm_DD_FND_CUST_BASKET_TEMP WHERE LATEST_FLAG>1;\r\n-- 0 rows affected\r\n-- Execution time: 0.18s\r\n\r\ndrop table if exists development.wns_adj_new_pos_logic_$[vDayName] ;\r\ncreate table development.wns_adj_new_pos_logic_$[vDayName]\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect  a.LOCATION_NO, a.TILL_NO, a.TRAN_NO, a.TRAN_DATE, a.TRAN_TIME,  TRAN_SELLING, DISCOUNT_SELLING, WASTE_IND,\r\n                LOYALTY_WW_SWIPE_NO, LOYALTY_EXT_SWIPE_NO, CUSTOMER_NO,VMP_IND,\r\n--case when item_tran_type  in ('R','V','Q','S') then item_tran_type else tran_type end as tran_type_new,\r\nnvl(item_tran_type,tran_type) as tran_type\r\nfrom #wns_nm_DD_FND_CUST_BASKET_TEMP A\r\nleft join (select TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO,\r\n\t\t\t\tcase when item_TRAN_TYPE in ('R','Q','V') then item_TRAN_TYPE else null end as item_TRAN_TYPE\r\n\t\t\tfrom(\r\n\t\t\t\tselect TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO,\r\n\t\t\t\tcount(distinct TRAN_TYPE) as item_TRAN_TYPE_count,\r\n\t\t\t\tmax( TRAN_TYPE) as item_TRAN_TYPE\r\n\t\t\t\tfrom analytics.fnd_cust_basket_item\r\n\t\t\t\tgroup by 1,2,3,4\r\n                ) where item_TRAN_TYPE_count=1\r\n           ) B\r\n           ON A.TRAN_DATE=B.TRAN_DATE\r\n           AND A.LOCATION_NO=B.LOCATION_NO\r\n           AND A.TILL_NO=B.TILL_NO\r\n           AND A.TRAN_NO=B.TRAN_NO;\r\n\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID\r\n    DISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n        SELECT A.LOCATION_NO ,\r\n                A.TILL_NO ,\r\n                A.TRAN_NO ,\r\n                A.TRAN_DATE ,\r\n                A.TRAN_TIME ,\r\n                A.TRAN_TYPE ,\r\n                A.WASTE_IND ,\r\n                A.TRAN_SELLING ,\r\n                A.DISCOUNT_SELLING ,\r\n                A.LOYALTY_WW_SWIPE_NO ,A.LOYALTY_EXT_SWIPE_NO ,\r\n                A.CUSTOMER_NO ,A.VMP_IND,\r\n               (CASE WHEN A.TRAN_TYPE='S' THEN 1 WHEN A.TRAN_TYPE='V' THEN -1 ELSE 0 END) AS TRAN_IND,\r\n                B.UCID\r\n        FROM development.wns_adj_new_pos_logic_$[vDayName] A\r\n        LEFT JOIN (SELECT TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO, MAX(PERM_UCID_HASHED) as UCID FROM DEVELOPMENT.CUST_BASKET_MAPPING\r\n                    GROUP BY 1,2,3,4) B\r\n        ON A.TRAN_DATE=B.TRAN_DATE\r\n           AND A.LOCATION_NO=B.LOCATION_NO\r\n           AND A.TILL_NO=B.TILL_NO\r\n           AND A.TRAN_NO=B.TRAN_NO)$[vLimit];\r\n-- Execution time: 52.55s\r\ndrop table if exists development.wns_adj_new_pos_logic_$[vDayName] ;\r\n\r\n\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP DISTSTYLE ALL AS (\r\n\tSELECT perm_ucid_hashed as UCID,UCID_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 18.34s\r\n\r\n-- ATTACH UCID_TYPE TO THE DATA\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID_TYPE\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TRAN_TIME, A.TRAN_TYPE, A.WASTE_IND,\r\n\t\t\t\tA.LOYALTY_WW_SWIPE_NO, A.LOYALTY_EXT_SWIPE_NO, A.CUSTOMER_NO,A.VMP_IND, A.TRAN_IND, A.UCID, A.TRAN_SELLING,\r\n\t\t\t\tA.DISCOUNT_SELLING, C.AGE_YEARS AS AGE, C.DERIVED_RACE AS RACE, C.GENDER AS GENDER,\r\n\t\t\t\tC.HOUSEHOLD_INCOME_SUBRANGE AS HOUSEHOLD_INCOME, B.UCID_TYPE\r\n\t\tFROM #wns_nm_DD_CUST_BASKET_UCID A\r\n\t\tLEFT JOIN #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP B\r\n\t\tON A.UCID=B.UCID\r\n\t\tLEFT JOIN DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] C\r\n\t    ON A.UCID=C.UCID)$[vLimit];\r\n-- Execution time: 58.12s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_FV_VOUCHER_TEMP\r\n\tDISTKEY(REDEEMED_DATE) COMPOUND SORTKEY(REDEEMED_DATE, REDEEMED_STORE, REDEEMED_TILL_NO, REDEEMED_TRAN_NO) AS (\r\n\t\tSELECT REDEEMED_DATE, REDEEMED_STORE, REDEEMED_TILL_NO, REDEEMED_TRAN_NO,\r\n\t\t\t\tCOUNT(DISTINCT VOUCHER_NO) AS VOUCHER_COUNT,\r\n\t\t\t\tSUM(REDEEMED_AMOUNT) AS VOUCHER_DISCOUNT\r\n\t\tFROM ANALYTICS.FND_CUST_FV_VOUCHER\r\n\t\tWHERE REDEEMED_DATE IS NOT NULL\r\n\t\t\tAND last_updated_date = '$[vlast_updated_date]'\r\n\t\tGROUP BY 1,2,3,4 )$[vLimit];\r\n-- Execution time: 13.51s\r\n\r\n-- ATTACH VOUCHER INFORMATION\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tCASE WHEN B.REDEEMED_DATE IS NULL THEN 0 ELSE 1 END AS VOUCHER_FLAG,\r\n\t\t\t\tVOUCHER_COUNT, VOUCHER_DISCOUNT\r\n\t\tFROM #wns_nm_DD_CUST_BASKET_UCID_TYPE A\r\n\t\tLEFT JOIN #wns_nm_DD_FND_FV_VOUCHER_TEMP B\r\n\t\t\t\tON A.TRAN_DATE=B.REDEEMED_DATE\r\n\t\t\t\tAND A.LOCATION_NO=B.REDEEMED_STORE\r\n\t\t\t\tAND A.TILL_NO=B.REDEEMED_TILL_NO\r\n\t\t\t\tAND A.TRAN_NO=B.REDEEMED_TRAN_NO)$[vLimit];\r\n-- Execution time: 52.41s\r\n\r\nCREATE TABLE #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT UCID, MIN(PORTFOLIO_CREATE_DATE) AS ACQUISITION_DATE\r\n\t\tFROM (SELECT B.UCID, B.CUSTOMER_NO, C.PORTFOLIO_CREATE_DATE\r\n\t\t\t\tFROM (SELECT perm_ucid_hashed as UCID, CUSTOMER_NO\r\n\t\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING GROUP BY 1,2) B -- CHANGE HERE TO DEVELOPMENT.AJL_DIM_CUSTOMER_CARD_MAPPING_NO_CUTOFF_202013_V2 [NM]\r\n\t\t\t\tLEFT JOIN (SELECT CUSTOMER_NO, PORTFOLIO_CREATE_DATE, PRODUCT_CODE_NO\r\n\t\t\t\t\t\t\tFROM ANALYTICS.FND_CUSTOMER_PORTFOLIO\r\n\t\t\t\t\t\t\tWHERE PRODUCT_CODE_NO IN ('0','1','2','3','4','5','6','7','8','9','10','11','15','16','19','20','21','28') ) C --TO BE CHANGED [NM]\r\n\t\t\t\tON B.CUSTOMER_NO=C.CUSTOMER_NO) D\r\n\t\tGROUP BY 1)$[vLimit];\r\n-- Execution time: 15.71s\r\n\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TRAN_TIME, A.TRAN_TYPE, A.TRAN_SELLING, A.DISCOUNT_SELLING, A.WASTE_IND,\r\n\t\t\t\tA.LOYALTY_WW_SWIPE_NO, A.LOYALTY_EXT_SWIPE_NO, A.CUSTOMER_NO, A.VMP_IND,A.TRAN_IND, A.UCID, A.UCID_TYPE, A.AGE, A.RACE, A.GENDER,\r\n\t\t\t\tA.HOUSEHOLD_INCOME, A.VOUCHER_FLAG, A.VOUCHER_COUNT, A.VOUCHER_DISCOUNT,\r\n\t\t\t\tCASE WHEN ACQUISITION_DATE IS NULL THEN '1999-01-01'\r\n\t\t\t\t\tWHEN ACQUISITION_DATE<'1999-01-01' THEN '1999-01-01' -- THE FIRST DATE IN CUST_BASKET IS 1999-06-04\r\n\t\t\t\t\tWHEN ACQUISITION_DATE>=(CURRENT_DATE+1) THEN CURRENT_DATE\r\n\t\t\t\t\t\tELSE ACQUISITION_DATE END AS ACQUISITION_DATE\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG A\r\n\t\tLEFT JOIN #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ B\r\n\t\t\t\tON A.UCID=B.UCID)$[vLimit];\r\n-- Execution time: 57.6s\r\n\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT CARD_NO, CUSTOMER_NO\r\n\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 1m 0s\r\n\r\n-- ATTACH CUSTOMER NO BASED ON LOYALTY_WW_SWIPE_NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2_1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*, B.CUSTOMER_NO AS C2_CUSTOMER_NO_1\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ A\r\n\t\tLEFT JOIN #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB B\r\n\t\t\t\tON A.LOYALTY_WW_SWIPE_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 54.67s\r\n\r\n-- ATTACH CUSTOMER NO BASED ON LOYALTY_EXT_SWIPE_NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2_2\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,B.CUSTOMER_NO AS C2_CUSTOMER_NO_2\r\n\t\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ A\r\n\t\t\tLEFT JOIN #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB B\r\n\t\t\tON A.LOYALTY_EXT_SWIPE_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 49.84s\r\n\r\n-- PICKING THE AVAILABLE CUSTOMER NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tCASE WHEN A.C2_CUSTOMER_NO_1 IS NULL THEN B.C2_CUSTOMER_NO_2 ELSE A.C2_CUSTOMER_NO_1 END AS C2_CUSTOMER_NO,\r\n\t\t\t\tCASE WHEN A.LOYALTY_WW_SWIPE_NO IS NULL THEN 0 ELSE 1 END AS WREWARDS_SWIPE_IND,\r\n\t\t\t\tCASE WHEN A.LOYALTY_EXT_SWIPE_NO IS NULL THEN 0 ELSE 1 END AS MYSCHOOL_SWIPE_IND\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_C2_1 A\r\n\t\tLEFT JOIN #wns_nm_DD_CA_TRAN_LEVEL_C2_2 B\r\n\t\t\t\tON A.TRAN_DATE=B.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO=B.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO=B.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO=B.TRAN_NO)$[vLimit];\r\n-- Execution time: 1m 1s\r\n\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN LOYALTY_WW_SWIPE_NO;\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN LOYALTY_EXT_SWIPE_NO;\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN C2_CUSTOMER_NO_1;\r\n-- Total script execution time: 0.06s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE,\r\n\t\t\t\tCASE WHEN TENDER_TYPE_DETAIL_CODE IS NULL THEN 'NULL_VALUE' ELSE TENDER_TYPE_DETAIL_CODE END AS TENDER_TYPE_DETAIL_CODE1,\r\n\t\t\t\tTENDER_NO, TENDER_SELLING, CHANGE_SELLING\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_TENDER\r\n\t\tGROUP BY 1,2,3,4,5,6,7,8)$[vLimit];\r\n-- Execution time: 1m 12s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUSTOMER_CARD_TEMP DISTSTYLE ALL AS (\r\n\tSELECT CARD_NO,\r\n\t\t\tCASE WHEN PRODUCT_CODE_NO IN ('1','2','3','4','5','6','7','21' ) THEN 'SC'\r\n\t\t\t\t\tWHEN PRODUCT_CODE_NO ='20' THEN 'CC' END AS STORE_CC_FLAG\r\n\tFROM analytics.FND_CUSTOMER_CARD)$[vLimit];\r\n-- Execution time: 59.26s\r\n\r\ndelete from #wns_nm_DD_FND_CUSTOMER_CARD_TEMP where STORE_CC_FLAG is null;\r\n-- 8,924,491 rows affected\r\n-- Execution time: 4.76s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE,\r\n\t\t\t\tTENDER_TYPE_DETAIL_CODE1 AS TENDER_TYPE_DETAIL_CODE,\r\n\t\t\t\tTENDER_NO, TENDER_SELLING, CHANGE_SELLING, STORE_CC_FLAG\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP A\r\n\t\tLEFT JOIN #wns_nm_DD_FND_CUSTOMER_CARD_TEMP B\r\n\t\t\t\tON A.TENDER_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 31.72s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TENDER_TYPE_DETAIL_CODE, A.TENDER_NO, A.TENDER_SELLING, A.CHANGE_SELLING, A.STORE_CC_FLAG,\r\n\t\t\t\tB.TENDER_TYPE_FOR_BASE_TABLE,\r\n\t\t\t\tCASE WHEN STORE_CC_FLAG IS NULL\r\n\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\tCASE WHEN TENDER_TYPE_FOR_BASE_TABLE='WW VISA CARD' THEN 'CC'\r\n\t\t\t\t\t\t\t WHEN TENDER_TYPE_FOR_BASE_TABLE='WW STORE CARD' THEN 'SC'\r\n\t\t\t\t\t\t\t ELSE TENDER_TYPE_FOR_BASE_TABLE\r\n\t\t\t\t\t\tEND\r\n\t\t\t\t\t\tELSE STORE_CC_FLAG\r\n\t\t\t\t\tEND AS TENDER_TYPE_FOR_BASE_TABLE1\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG A\r\n\t\tLEFT JOIN (SELECT CASE WHEN TENDER_TYPE_DETAIL_CODE IS NULL THEN 'NULL_VALUE' ELSE TENDER_TYPE_DETAIL_CODE END AS TENDER_TYPE_DETAIL_CODE1,\r\n\t\t\t\t\t\t\tTENDER_TYPE_FOR_BASE_TABLE FROM DEVELOPMENT.SD_TENDER_TYPE_MAPPING_06APR) B\r\n\t\t\t\tON A.TENDER_TYPE_DETAIL_CODE=B.TENDER_TYPE_DETAIL_CODE1)$[vLimit];\r\n-- Execution time: 32.8s\r\n\r\nCREATE TABLE #wns_nm_WNS_SD_TEMP1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT TRAN_NO, LOCATION_NO, TILL_NO , TRAN_DATE,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1='SC' THEN TENDER_NO END) AS STORE_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='SC' THEN TENDER_SELLING END) AS STORE_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Gift Card' THEN TENDER_NO END) AS GIFT_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Gift Card' THEN TENDER_SELLING END) AS GIFT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Voucher' THEN TENDER_NO END) AS VOUCHER_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Voucher' THEN TENDER_SELLING END) AS VOUCHER_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Alien Bank Card' THEN TENDER_NO END) AS ALIEN_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Alien Bank Card' THEN TENDER_SELLING END) AS ALIEN_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='CC' THEN TENDER_NO END) AS CREDIT_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='CC' THEN TENDER_SELLING END) AS CREDIT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Cash' THEN 1 ELSE 0 END) AS CASH_TENDER_IND,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Cash' THEN TENDER_SELLING-CHANGE_SELLING END) AS CASH_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Other' THEN TENDER_NO END) AS OTHER_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Other' THEN TENDER_SELLING END) AS OTHER_TRAN_TENDER_SELLING\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE\r\n\t\tGROUP BY 1,2,3,4)$[vLimit];\r\n-- Execution time: 2m 57s\r\n\r\nCREATE TABLE #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,FIN_YEAR_NO, FIN_HALF_NO, FIN_QUARTER_NO, FIN_MONTH_NO, FIN_WEEK_NO, FIN_DAY_NO, SEASON_NO\r\n\t\t        ,CASE WHEN DAY_NAME IN ('SATURDAY','SUNDAY') THEN 2   --added the weekday_weekend_code - new column\r\n\t\t\t\t ELSE 1 END AS WEEKDAY_WEEKEND_CODE,\r\n\t\t\t\tC.GIFT_CARD_TENDER_COUNT, C.GIFT_CARD_TRAN_TENDER_SELLING, C.VOUCHER_TENDER_COUNT, C.VOUCHER_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.ALIEN_CARD_TENDER_COUNT, C.ALIEN_CARD_TRAN_TENDER_SELLING, C.CASH_TENDER_IND, C.CASH_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.STORE_CARD_TENDER_COUNT, C.STORE_CARD_TRAN_TENDER_SELLING, C.CREDIT_CARD_TENDER_COUNT, C.CREDIT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.OTHER_TENDER_COUNT, C.OTHER_TRAN_TENDER_SELLING\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_C2 A\r\n\t\tLEFT JOIN ANALYTICS.FND_CALENDAR B\r\n\t\t\t\tON A.TRAN_DATE=B.CALENDAR_DATE\r\n\t\tLEFT JOIN #wns_nm_WNS_SD_TEMP1 C\r\n\t\t\t\tON A.TRAN_DATE=C.TRAN_DATE\r\n\t\t\t\tAND A.LOCATION_NO=C.LOCATION_NO\r\n\t\t\t\tAND A.TILL_NO=C.TILL_NO\r\n\t\t\t\tAND A.TRAN_NO=C.TRAN_NO)$[vLimit];\r\n-- Execution time: 1m 23s\r\n-- 60GB\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName];\r\ncreate table DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName]\r\ndiststyle all as\r\n(select * from #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ) $[vLimit];\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID_TYPE;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_FV_VOUCHER_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2_1;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2_2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUSTOMER_CARD_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE;\r\nDROP TABLE IF EXISTS #wns_nm_WNS_SD_TEMP1;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT B - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************\r\n--TIER START\r\n*******************************************************************/\r\n---======================================================  START tier ====================================================\r\n-- year ,half_year,fin_qy,fin_month_no based tier calculation and creating a single table\r\n--  ''development.wns_adj_tier_wise$[vDayName]''\r\n\r\nDROP TABLE IF EXISTS development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName];\r\n\r\nCREATE TABLE development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] AS\r\n  SELECT * FROM (\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+01 AS FIN_MONTH, MONTH_01_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+02 AS FIN_MONTH, MONTH_02_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+03 AS FIN_MONTH, MONTH_03_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+04 AS FIN_MONTH, MONTH_04_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+05 AS FIN_MONTH, MONTH_05_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+06 AS FIN_MONTH, MONTH_06_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+07 AS FIN_MONTH, MONTH_07_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+08 AS FIN_MONTH, MONTH_08_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+09 AS FIN_MONTH, MONTH_09_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+10 AS FIN_MONTH, MONTH_10_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+11 AS FIN_MONTH, MONTH_11_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+12 AS FIN_MONTH, MONTH_12_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL) $[vLimit];\r\n\r\n\r\nDROP TABLE if exists development.wns_kr_tier_year_wise_$[vDayName];\r\n\r\nCreate Table development.wns_kr_tier_year_wise_$[vDayName] diststyle all as\r\n(select *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as numeric(5,0)) as fin_year_no,nvl(tier,0) as tier_, b.perm_ucid_hashed as UCID\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no ORDER BY tier_ DESC) AS MAX_TIER_RANK\r\n      from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b\r\n      on a.customer_no = b.customer_no\r\n      where mod(FIN_MONTH,100) = 12\r\n      )\r\nwhere MAX_TIER_RANK = 1\r\n);\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_fh_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fh_wise_UCID_$[vDayName] as\r\nselect *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fh, b.perm_ucid_hashed as UCID\r\n            ,case when mod(fin_month,100)/2 = 1 then 1\r\n                  when mod(fin_month,100)/2 = 2 then 2\r\n             else '0'\r\n             end as half_year\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,half_year ORDER BY tier_fh DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n      where half_year in (1,2)\r\n      )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null\r\n;\r\n\r\n\r\nDrop table IF Exists development.wns_adj_tier_fq_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fq_wise_UCID_$[vDayName] as\r\nselect *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fq, b.perm_ucid_hashed as UCID\r\n            ,case when mod(fin_month,100)/3 = 1 then 1\r\n                  when mod(fin_month,100)/3 = 2 then 2\r\n                  when mod(fin_month,100)/3 = 3 then 3\r\n                  when mod(fin_month,100)/3 = 4 then 4\r\n             else '0'\r\n             end as quarter\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,quarter ORDER BY tier_fq DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n      where quarter in (1,2,3,4)\r\n      )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null\r\n;\r\n\r\n\r\n\r\nDrop table IF Exists development.wns_adj_tier_fm_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fm_wise_UCID_$[vDayName]\r\ndiststyle all as\r\nselect UCID,fin_year_no,fin_month_no,tier_fm\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fm, b.perm_ucid_hashed as UCID\r\n           ,mod(FIN_MONTH,100) as fin_month_no\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,fin_month_no ORDER BY tier_fm DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n        )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null ;\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_wise$[vDayName];\r\nCREATE TABLE IF NOT EXISTS development.wns_adj_tier_wise$[vDayName]\r\n(\r\n                ucid VARCHAR(100)   ENCODE lzo\r\n                ,fin_year_no smallint   ENCODE az64\r\n                ,fin_month_no smallint   ENCODE az64\r\n                ,tier_fm smallint   ENCODE az64\r\n                ,tier_fq smallint   ENCODE az64\r\n                ,tier_fh smallint   ENCODE az64\r\n                ,tier_fy smallint   ENCODE az64\r\n)\r\nDISTSTYLE ALL\r\n;\r\n\r\n\r\ngrant select on table development.wns_adj_tier_wise$[vDayName] to public;\r\n\r\n\r\ninsert into development.wns_adj_tier_wise$[vDayName] (\r\nselect\r\n   A.ucid,A.fin_year_no,A.fin_month_no,A.tier_fm\r\n   ,  b.tier_fq,\r\n   C.tier_fh,\r\n   D.tier_ as tier_fy\r\nfrom\r\n   (\r\n      select\r\n         ucid,\r\n         fin_year_no,\r\n         fin_month_no,\r\n         tier_fm,\r\n         case\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '1',\r\n                  '2',\r\n                  '3'\r\n               )\r\n            then\r\n               1\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '4', '5', '6'\r\n               )\r\n            then\r\n               2\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '7', '8', '9'\r\n               )\r\n            then\r\n               3\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '10', '11', '12'\r\n               )\r\n            then\r\n               4\r\n         end\r\n         as fin_qy,\r\n         case\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '1', '2', '3', '4', '5', '6'\r\n               )\r\n            then\r\n               1\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '7', '8', '9', '10', '11', '12'\r\n               )\r\n            then\r\n               2\r\n         end\r\n         as fin_hy\r\n      from\r\n         development.wns_adj_tier_fm_wise_UCID_$[vDayName]\r\n   )\r\n   A\r\n   left join\r\n      development.wns_adj_tier_fq_wise_UCID_$[vDayName] B\r\n      on A.fin_year_no = B.fin_year_no\r\n      and A.fin_qy = B.quarter\r\n      and A.ucid = b.ucid\r\n   LEFT JOIN\r\n      development.wns_adj_tier_fh_wise_UCID_$[vDayName] C\r\n      on A.fin_year_no = C.fin_year_no\r\n      and A.fin_hy = C.half_year\r\n      and A.ucid = C.ucid\r\n   LEFT JOIN\r\n      development.wns_kr_tier_year_wise_$[vDayName] D\r\n      on A.fin_year_no = D.fin_year_no\r\n      and A.ucid = D.ucid  where A.fin_year_no >='2018');\r\n\r\n\r\ndrop table if exists development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fm_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fq_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fh_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_kr_tier_year_wise_$[vDayName];\r\n\r\n---=============================================================  END tier ====================================================\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT C - Preparing Tier Details *******************************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- EXTRACT RAW DATA FROM THE TIER TABLE AND PIVOT THE MONTHLY TIER COLUMNS IN TO A SINGLE COLUMN\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_LAST_TIER_RAW AS\r\n  SELECT * FROM (\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+01 AS FIN_MONTH, MONTH_01_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+02 AS FIN_MONTH, MONTH_02_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+03 AS FIN_MONTH, MONTH_03_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+04 AS FIN_MONTH, MONTH_04_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+05 AS FIN_MONTH, MONTH_05_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+06 AS FIN_MONTH, MONTH_06_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+07 AS FIN_MONTH, MONTH_07_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+08 AS FIN_MONTH, MONTH_08_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+09 AS FIN_MONTH, MONTH_09_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+10 AS FIN_MONTH, MONTH_10_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+11 AS FIN_MONTH, MONTH_11_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+12 AS FIN_MONTH, MONTH_12_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL)$[vLimit];\r\n-- Execution time: 20.28s\r\n\r\n-- GENERATE PREVIOUS MONTH TIER AT A MONTH LEVEL FOR EVERY CUSTOMER\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_LAST_TIER_LAG AS (\r\n\tSELECT CUSTOMER_NO, FIN_MONTH, TIER,\r\n\t\t   LAG(TIER) OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH) AS PREV_MNTH_TIER\r\n\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_RAW)$[vLimit];\r\n-- Execution time: 19.82s\r\n\r\n--TAKE ALL CUSTOMERS CURRENT TIER ONLY\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER AS (\r\n\tSELECT CUSTOMER_NO, CUSTOMER_CURRENT_TIER_CODE\r\n\tFROM (SELECT CUSTOMER_NO, FIN_MONTH, TIER AS CUSTOMER_CURRENT_TIER_CODE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH DESC) AS LATEST_TIER_RANK\r\n\t\t\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_LAG)\r\n\tWHERE LATEST_TIER_RANK = 1\r\n\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 19.82s\r\n\r\n--TAKE ALL CUSTOMERS ALONG WITH THEIR PREVIOUS TIER AND THE MONTH IN WHICH THE TIER CHANGE OCCURRED\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_CHNG_MNTH AS (\r\n\tSELECT CUSTOMER_NO, FIN_MONTH AS LAST_TIER_CHANGE_MONTH, PREV_MNTH_TIER AS LAST_TIER, TIER AS CUSTOMER_CURRENT_TIER_CODE\r\n\tFROM (\r\n\t\tSELECT CUSTOMER_NO, FIN_MONTH, TIER, PREV_MNTH_TIER,\r\n\t\t\t   ROW_NUMBER() OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH DESC) AS LAST_CHNG_MNTH_RANK\r\n\t\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_LAG\r\n\t\tWHERE PREV_MNTH_TIER-TIER<>0)\r\n\tWHERE LAST_CHNG_MNTH_RANK=1\r\n\tGROUP BY 1,2,3,4)$[vLimit];\r\n-- Execution time: 15.26s\r\n\r\n--ADD LAST TIER AND TIER CHANGE MONTH INFORMATION TO THE TABLE WITH CURRENT TIER\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS AS\r\n\tSELECT A.CUSTOMER_NO, A.CUSTOMER_CURRENT_TIER_CODE, LAST_TIER, LAST_TIER_CHANGE_MONTH\r\n\tFROM #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER A\r\n\tLEFT JOIN #wns_nm_DD_SHK_TIER_CHNG_MNTH B\r\n\tON A.CUSTOMER_NO = B.CUSTOMER_NO$[vLimit];\r\n-- Execution time: 7.58s\r\n\r\n-- PREPARE LIST OF ALL UCIDS FROM TENDER TRIANGULATION OUTPUT DATA\r\nCREATE TABLE #wns_nm_DD_CA_UCID_LIST AS (\r\n\tSELECT perm_ucid_hashed as UCID, CUSTOMER_NO\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tWHERE CUSTOMER_NO IS NOT NULL AND UCID_TYPE = 'KNOWN'\r\n\tGROUP BY 1,2 )$[vLimit];\r\n-- Execution time: 4.43s\r\n\r\n-- ATTACH THE ABOVE CREATED TIER INFORMATION TO THE UCID LIST OF ALL CUSTOMERS\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName]\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT UCID, LAST_TIER_CHANGE_MONTH, LAST_TIER, CUSTOMER_CURRENT_TIER_CODE\r\n\t\tFROM (\r\n\t\t\tSELECT CAST(A.UCID AS CHARACTER VARYING(30)), A.CUSTOMER_NO, B.LAST_TIER_CHANGE_MONTH, B.LAST_TIER, B.CUSTOMER_CURRENT_TIER_CODE,\r\n\t\t\t\t   ROW_NUMBER() OVER(PARTITION BY A.UCID ORDER BY B.CUSTOMER_CURRENT_TIER_CODE DESC, B.LAST_TIER_CHANGE_MONTH DESC, B.LAST_TIER DESC) AS TIER_RANK\r\n\t\t\tFROM #wns_nm_DD_CA_UCID_LIST A\r\n\t\t\tINNER JOIN #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS B\r\n\t\t\t\tON A.CUSTOMER_NO=B.CUSTOMER_NO)\r\n\t\tWHERE TIER_RANK=1)$[vLimit];\r\n-- Execution time: 13.89s\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName]\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tB.LOCATION_NAME, B.AREA_NO,\tB.AREA_NAME, B.REGION_NO, B.REGION_NAME, B.CHAIN_NO,\r\n\t\t\t\tD.ST_S4S_SHAPE_OF_CHAIN_DESC AS SHAPE_OF_CHAIN_DESC,\r\n\t\t\t\tC.LAST_TIER_CHANGE_MONTH, C.LAST_TIER, C.CUSTOMER_CURRENT_TIER_CODE,H.tier_fy\r\n\t\t\t\t,H.tier_fq,H.tier_fh,H.tier_fm\r\n\t\tFROM #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN A\r\n\t\tLEFT JOIN DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName] C\r\n\t\t\t\tON A.UCID = C.UCID\r\n\t\tLEFT JOIN ANALYTICS.FND_LOCATION B\r\n\t\t\t\tON A.LOCATION_NO = B.LOCATION_NO\r\n\t\tLEFT JOIN DEVELOPMENT.FND_ROG_SOC_LOCATION D\r\n\t\t\t\tON A.LOCATION_NO = D.LOCATION_NO\r\n\t/*\tLEFT JOIN #wns_kr_tier_year_wise E\r\n\t\t\t\tON A.fin_year_no = E.fin_year_no\r\n\t\t\t\t\tand A.UCID = E.UCID\r\n\t\tLEFT JOIN #wns_adj_tier_fq_wise_UCID F\r\n\t\t        ON A.fin_year_no = F.fin_year_no\r\n\t\t        and A.fin_quarter_no = F.quarter\r\n\t\t\t\t\tand A.UCID = F.UCID\r\n        LEFT JOIN #wns_adj_tier_fh_wise_UCID G\r\n\t\t        ON A.fin_year_no = G.fin_year_no\r\n\t\t        and A.fin_half_no = G.half_year\r\n\t\t\t\t\tand A.UCID = G.UCID*/\r\n        LEFT JOIN (select * from development.wns_adj_tier_wise$[vDayName] where fin_year_no>=2021 and fin_month_no>=3) H\r\n\t\t        ON A.fin_year_no = H.fin_year_no\r\n\t\t        and A.fin_month_no = H.fin_month_no\r\n\t\t\t\t\tand A.UCID = H.UCID\r\n\r\n\t)$[vLimit];\r\n-- Execution time: 1m 42s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_LAST_TIER_RAW;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_LAST_TIER_LAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_CHNG_MNTH;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_UCID_LIST;\r\nDROP TABLE IF EXISTS #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT C - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT D - Creating base table from $[vCBI] data with product & category details **********************************************/\r\n/******************************************************************************************************************************************/\r\n\r\nCREATE TABLE #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT\r\n\t\tlocation_no\r\n\t\t,till_no\r\n\t\t,tran_no\r\n\t\t,tran_date\r\n\t\t,tran_time\r\n\t\t,item_seq_no\r\n\t\t,item_no\r\n\t\t,tran_type\r\n\t\t,item_tran_selling\r\n\t\t,case when vat_rate_perc is null then 0 else vat_rate_perc end as vat_rate_perc1\r\n\t\t,item_tran_qty\r\n\t\t,discount_selling\r\n\t\t,customer_no\r\n\t\t,waste_discount_selling\r\n\t\t,ROW_NUMBER() OVER(PARTITION BY TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO, ITEM_NO ORDER BY LAST_UPDATED_DATE DESC) AS LATEST_FLAG\r\n\t    ,vitality_uda_value\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_ITEM\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]')$[vLimit];\r\n-- Execution time: 15m 26s\r\n\r\n--deleting redundant rows\r\nDELETE FROM #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1 WHERE LATEST_FLAG>1;\r\n\r\n--+++++++++++++++++++++++++++++++++++++++++Start of Addition Of Markdown_seq_no++++++++++++++++++++++++++++++----\r\n-- TEMPORARY table for rtl_clearance for zone =1 filter and nxt_active_date logic\r\ndrop table if exists #wns_adj_rtl_lag_temp;\r\ncreate table #wns_adj_rtl_lag_temp as\r\nselect * from (\r\n                select item_no,markdown_seq_no,active_date,reset_date,ruling_rsp,\r\n                lag(active_date-1) over (partition by item_no order by active_date desc) as nxt_active_date\r\n                from analytics.fnd_rtl_clearance where zone_no=1\r\n)$[vLimit];\r\n-- joining both above table and making a decision of last next_active_date data which is null.\r\ndrop table if exists #wns_adj_cbi_rtl_join;\r\ncreate table #wns_adj_cbi_rtl_join\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,item_seq_no,item_no) as\r\nselect location_no,till_no,tran_no,tran_date,item_seq_no,A.item_no ,markdown_seq_no,active_date ,reset_date,ruling_rsp,\r\ncase when ruling_rsp>.01 then nvl(nxt_active_date ,reset_date-1) end as nxt_active_date\r\nfrom (\r\n      #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1 a\r\n      left join\r\n      #wns_adj_rtl_lag_temp b\r\n      on a.item_no=b.item_no\r\n      )$[vLimit];\r\n\r\ndrop table if exists #wns_adj_rtl_lag_temp;\r\n-- Main logic of Markdown\r\ndrop table if exists #wns_adj_markdown_seq;\r\ncreate table #wns_adj_markdown_seq\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,item_seq_no,item_no) as\r\nselect location_no,till_no,tran_no,tran_date,item_seq_no,item_no  ,nvl(markdown_seq_no,0) as markdown_seq_no from (\r\n                select location_no,till_no,tran_no,tran_date,item_seq_no,item_no  ,max(markdown_seq_no) as markdown_seq_no\r\n                from(\r\n                    select location_no,till_no,tran_no,tran_date,item_seq_no,item_no ,\r\n                    case when reset_date <= nxt_active_date\r\n                              and tran_date between active_date and reset_date-1\r\n                              and ruling_rsp>0.01\r\n                              then markdown_seq_no else\r\n                    case when reset_date > nxt_active_date\r\n                              and tran_date between active_date and nxt_active_date\r\n                              and ruling_rsp>0.01\r\n                              then markdown_seq_no  end\r\n                    end as markdown_seq_no\r\n                    from #wns_adj_cbi_rtl_join\r\n                    )\r\n                group by location_no,till_no,tran_no,tran_date,item_seq_no,item_no\r\n                )$[vLimit];\r\n\r\n\r\ndrop table if exists #wns_adj_cbi_rtl_join;\r\n--+++++++++++++++++++++++++++++++++++++++++End of Addition Of Markdown_seq_no++++++++++++++++++++++++++++++----\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\ncreate table #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect A.*,B.tran_qty\r\nfrom(\r\n(select * from #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1) A\r\nleft join\r\n(select * from(\r\nselect location_no,till_no,tran_no,tran_date,sum(item_tran_qty) as tran_qty from #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1\r\ngroup by location_no,till_no,tran_no,tran_date\r\n)\r\n) B\r\nON A.TRAN_DATE = B.TRAN_DATE\r\nAND A.LOCATION_NO = B.LOCATION_NO\r\nAND A.TILL_NO = B.TILL_NO\r\nAND A.TRAN_NO = B.TRAN_NO\r\n)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS  #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1;\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item;\r\n--DROP TABLE IF EXISTS #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\n\r\n-- Total script execution time: 0.02s\r\n-- changed the code for phase2 promotion_no addition\r\nCREATE TABLE #wns_nm_DD_SHK_CA_AUX_SUBSET\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT LOCATION_NO, TRAN_DATE, TRAN_NO, TILL_NO, ITEM_NO, ITEM_SEQ_NO,\r\n\t\t\t\t1 AS PROMOTION_FLAG,\r\n\t\t\t\tTRAN_TYPE_CODE, sum(PROMOTION_DISCOUNT_AMOUNT) as PROMOTION_DISCOUNT_AMOUNT1\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_AUX\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]'\r\n\t\t\t\tAND PROMOTION_NO IS NOT NULL\r\n\t\t\t\tAND PROMOTION_NO <>''\r\n\t\t\t\tAND PROMOTION_DISCOUNT_AMOUNT > 0\r\n\t\t\t\t--AND TRAN_TYPE_CODE IN ('LOYALTY', 'WFS', 'RMS', 'ATG', 'ATGLOY', 'STAFF', 'EOL', 'FRANCHISE')\r\n\t\tGROUP BY 1,2,3,4,5,6,7,8)$[vLimit];\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1 ;\r\nCREATE TABLE #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT LOCATION_NO, TRAN_DATE, TRAN_NO, TILL_NO, ITEM_NO, ITEM_SEQ_NO,\r\n\t\t\t\tMAX(PROMOTION_FLAG) AS PROMOTION_FLAG,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'LOYALTY' THEN 1 ELSE 0 END) AS LOYALTY_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'LOYALTY' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS LOYALTY_DISCOUNT_SELLING,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'WFS' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS WFS_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'RMS' THEN 1 ELSE 0 END) AS RMS_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'RMS' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS RMS_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'ATG' THEN 1 ELSE 0 END) AS ATG_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'ATG' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS ATG_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'ATGLOY' THEN 1 ELSE 0 END) AS ATGLOY_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'ATGLOY' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS ATG_LOYALTY_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'STAFF' THEN 1 ELSE 0 END) AS STAFF_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'STAFF' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS STAFF_DISCOUNT_SELLING,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'CTV' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS VOUCHER_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'EOL' THEN 1 ELSE 0 END) AS EOL_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'EOL' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS EOL_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'FRANCHISE' THEN 1 ELSE 0 END) AS FRANCHISE_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE NOT IN ('ATG', 'LOYALTY', 'ATGLOY', 'STAFF', 'WFS', 'EOL', 'RMS') THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS OTHER_DISCOUNT_SELLING,\r\n\t\t\t\tCASE WHEN (STAFF_DISCOUNT_SELLING = 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING = 0) THEN 0\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING > 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING > 0) THEN 1\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING > 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING = 0) THEN 2\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING = 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING > 0) THEN 3 END AS DISCOUNT_CODE\r\n\t\tFROM #wns_nm_DD_SHK_CA_AUX_SUBSET\r\n\t\tGROUP BY 1,2,3,4,5,6)$[vLimit];\r\n-- Execution time: 2m 54s\r\n\r\n\r\ndrop table if exists #WNS_ADJ_PROMOTION_NO ;\r\ncreate table #WNS_ADJ_PROMOTION_NO\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,ITEM_SEQ_NO,ITEM_NO) AS (\r\nselect location_no,till_no,tran_no,tran_date,item_no,item_seq_no,\r\n\t\tmax(case when tran_type_code='RMS'  then promotion_no else\r\n\t\t\t\tcase when tran_type_code='LOYALTY'\r\n\t\t\t\t-- check if any loyalty promotion_no is without prefixes also\r\n\t\t\t\t then trim(SUBSTRING(promotion_no ,4,len(promotion_no)))  else\r\n\t\t\t\t\t\tcase when tran_type_code='WFS' \tand trim(SUBSTRING(promotion_no ,0,4)) in ('WFS','888')\r\n\t\t\t\t\t\t\tthen trim(SUBSTRING(promotion_no ,4,len(promotion_no)))  else\r\n\t\t\t\t\t\tcase when tran_type_code='FRANCHISE'  then promotion_no\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t\t\t\tend end) as RMS_PROMOTION_NO,\r\n\t\tmax(case when tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,8))='bppromo' then trim(SUBSTRING(promotion_no ,8,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='cq' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='sp' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)\t))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='bp' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '  then promotion_no\r\n\t\t\t\tend) as ATG_PROMOTION_NO ,\r\n\t -- ATGLOY does not have any promotion_no with out \"promo' prefix.\r\n\t\tmax(case when tran_type_code='ATGLOY '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no))) else\r\n\t\t\t\t\tcase when tran_type_code='WFS '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no))) end\r\n\t\t\t\t\tend) as ATG_LOYALTY_PROMOTION_NO  ,\r\n\t\tmax(case when tran_type_code='EOL '  then promotion_no\r\n\t\tend) as EOL_PROMOTION_NO\r\nfrom (select * from\r\n\t\t(select location_no,till_no,tran_no,tran_date,item_no,item_seq_no,tran_type_code,aux_seq_no,promotion_no,\r\n          -- adding windowing function for find ing the min and then giving the flag for it.\r\n          row_number() over (partition by location_no,till_no,tran_no,tran_date,item_no,item_seq_no,tran_type_code order by aux_seq_no asc) as aux_seq_no_rank\r\n\t\t\tfrom  ANALYTICS.FND_CUST_BASKET_AUX\r\n      -- where location_no='1047' and till_no='11' and tran_no='43' and tran_date='2018-04-16'\r\n\t\t\tWHERE last_updated_date = '$[vlast_updated_date]'\r\n\t\t\t\tAND PROMOTION_NO IS NOT NULL\r\n\t\t\t\tAND PROMOTION_NO <>''\r\n\t\t\t\tAND PROMOTION_DISCOUNT_AMOUNT > 0\r\n\t\t\t\tAND TRAN_TYPE_CODE IN ('LOYALTY', 'WFS', 'RMS', 'ATG', 'ATGLOY', 'STAFF', 'EOL', 'FRANCHISE'))\r\n       where  aux_seq_no_rank=1\r\n\t   )\r\ngroup by location_no,till_no,tran_no,tran_date,item_no,item_seq_no)$[vLimit];\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED;\r\ncreate table #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,ITEM_SEQ_NO,ITEM_NO) as\r\n\tselect A.*,RMS_PROMOTION_NO,ATG_PROMOTION_NO,ATG_LOYALTY_PROMOTION_NO,EOL_PROMOTION_NO from (\r\n\t#wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1 A\r\n\tleft join\r\n\t#WNS_ADJ_PROMOTION_NO B\r\n\tON A.TRAN_DATE=B.TRAN_DATE\r\n\tAND A.LOCATION_NO=B.LOCATION_NO\r\n\tAND A.TILL_NO=B.TILL_NO\r\n\tAND A.TRAN_NO=B.TRAN_NO\r\n\tAND A.item_seq_no=B.item_seq_no\r\n\tAND A.item_no=B.item_no)$[vLimit];\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CA_AUX_SUBSET;\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName]\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT A.*, LOYALTY_PROMO_FLAG, LOYALTY_DISCOUNT_SELLING, WFS_DISCOUNT_SELLING, RMS_PROMO_FLAG, RMS_DISCOUNT_SELLING, ATG_PROMO_FLAG,\r\n\t\t\t\tATG_DISCOUNT_SELLING, ATGLOY_PROMO_FLAG, ATG_LOYALTY_DISCOUNT_SELLING, STAFF_PROMO_FLAG, STAFF_DISCOUNT_SELLING,VOUCHER_DISCOUNT_SELLING, EOL_PROMO_FLAG,\r\n\t\t\t\tEOL_DISCOUNT_SELLING, FRANCHISE_PROMO_FLAG, OTHER_DISCOUNT_SELLING,\r\n\t\t\t\tCASE WHEN PROMOTION_FLAG = 1 THEN 1 ELSE 0 END AS PROMO_FLAG,\r\n\t\t\t\tB.DISCOUNT_CODE,RMS_PROMOTION_NO,ATG_PROMOTION_NO,ATG_LOYALTY_PROMOTION_NO,EOL_PROMOTION_NO,markdown_seq_no\r\n\t\tFROM #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP A\r\n\t\tLEFT JOIN #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED B\r\n\t\tON A.TRAN_DATE = B.TRAN_DATE\r\n\t\t\tAND A.LOCATION_NO = B.LOCATION_NO\r\n\t\t\tAND A.TILL_NO = B.TILL_NO\r\n\t\t\tAND A.TRAN_NO = B.TRAN_NO\r\n\t\t\tAND  A.ITEM_SEQ_NO = B.ITEM_SEQ_NO\r\n\t\t\tAND  A.ITEM_NO = B.ITEM_NO\r\n\t\tLEFT JOIN #wns_adj_markdown_seq C\r\n\t\tON A.TRAN_DATE = C.TRAN_DATE\r\n\t\t\tAND A.LOCATION_NO = C.LOCATION_NO\r\n\t\t\tAND A.TILL_NO = C.TILL_NO\r\n\t\t\tAND A.TRAN_NO = C.TRAN_NO\r\n\t\t\tAND A.ITEM_SEQ_NO = C.ITEM_SEQ_NO\r\n\t\t\tAND A.ITEM_NO = C.ITEM_NO)$[vLimit];\r\n-- Execution time: 19m 22s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT D - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT 0 - Removing previous week's Base Table *****************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- Moving previous week's Base Table to S3 Development External\r\n-- unload ('select * from development.wns_cust_basket_item') --this part will change for the next wednesday\r\n-- to 's3://woolworths-its-automation/marketing-automation/data/ttci/development/cust_basket_item_{3}'\r\n-- iam_role 'arn:aws:iam::102116558525:role/etl_sulaco'\r\n-- allowoverwrite\r\n-- parallel on\r\n-- partition by(tran_date)\r\n-- parquet;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT 0 - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT E - Final inner join of CUST_BASKET & $[vCBI] **************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\nCREATE TABLE #WNS_CUST_BASKET_ITEM_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS\r\n\t (\r\n\t\tSELECT a.location_no, a.till_no, a.tran_no, a.tran_date,\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no, a.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\ta.location_name, a.area_no, a.area_name, a.region_no, a.region_name, a.shape_of_chain_desc as alternate_location_hierarchy1,\r\n\t\t\t\t-1 as alternate_location_hierarchy2, -1 as alternate_location_hierarchy3 , -1 as alternate_location_hierarchy4,\r\n\t\t\t\t-1 as alternate_location_hierarchy5 , -1 as alternate_location_hierarchy6,\r\n\t\t\t\ta.tran_time,\r\n\t\t\t\ta.tran_type, a.tran_ind,\r\n\t\t\t\ta.tran_selling,\r\n\t\t\t\ta.tran_selling/(1+(vat_rate_perc1/100)) as tran_selling_vat_excl,--p2\r\n\t\t\t\ta.discount_selling,\r\n\t\t\t\ta.discount_selling/(1+(vat_rate_perc1/100)) as DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.store_card_tender_count, a.store_card_tran_tender_selling,\r\n\t\t\t\ta.credit_card_tender_count, a.credit_card_tran_tender_selling,\r\n\t\t\t\ta.gift_card_tender_count, a.gift_card_tran_tender_selling,\r\n\t\t\t\ta.voucher_tender_count, a.voucher_tran_tender_selling,\r\n\t\t\t\ta.alien_card_tender_count, a.alien_card_tran_tender_selling,\r\n\t\t\t\ta.cash_tender_ind, a.cash_tran_tender_selling,\r\n\t\t\t\ta.other_tender_count, a.other_tran_tender_selling,\r\n\t\t\t\ta.wrewards_swipe_ind, a.myschool_swipe_ind,a.VMP_IND,\r\n\t\t\t\ta.ucid,\r\n\t\t\t\t/*case when a.ucid_type in ('KNOWN') AND a.customer_current_tier_code IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\twhen a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\tWHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\tWHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\t\telse 'CASH'\r\n\t\t\t\t\tEND AS CUSTOMER_COHORT,*/\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fy IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FY,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fh IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FH,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fq IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FQ,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fm IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FM,\r\n\t\t\t\ta.acquisition_date,\r\n\t\t\t\t-1 as foods_life_cycle_code, -1 as fbh_life_cycle_code, -1 as ww_life_cycle_code,\r\n\t\t---1 as LAST_UPDATED_DATE,\r\n\t\t\t\ta.age,\r\n\t\t\t\tcase when a.AGE between 18 and 24 then '18-24'\r\n\t\t\t\t\t when a.AGE between 25 and 34 then '25-34'\r\n\t\t\t\t\t when a.AGE between 35 and 44 then '35-44'\r\n\t\t\t\t\t when a.AGE between 45 and 54 then '45-54'\r\n\t\t\t\t\t when a.AGE>55 then '55+' else 'No Value' end as AGE_BAND,\r\n\t\t\t\ta.race as derived_race, a.gender,\r\n\t\t\t\t-1 as HOUSEHOLD_INCOME_BAND_FY,\r\n\t\t\t\t-1 as MACRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as MICRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as EMPLOYEE_STATUS_CODE,-- @adj sep\r\n\t\t\t\tb.item_seq_no, b.item_no,\r\n\t\t\t\tb.tran_type as item_tran_type,\r\n\t\t\t\tb.item_tran_selling,\r\n\t\t\t\tb.discount_selling as item_discount_selling,\r\n\t\t\t\tb.waste_discount_selling as WASTE_DISCOUNT_PERC,\r\n\t\t\t\tb.item_tran_selling/(1+(vat_rate_perc1/100)) as ITEM_TRAN_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.discount_selling/(1+(vat_rate_perc1/100)) as ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.vat_rate_perc1 as vat_rate_perc,\r\n\t\t\t\tb.vitality_uda_value as VITALITY_UDA_VALUE_NO,\r\n\t\t\t\tb.tran_qty,\r\n\t\t\t\tb.item_tran_qty,\r\n\t\t\t\tb.discount_code,\r\n\t\t\t\tb.RMS_PROMOTION_NO,b.ATG_PROMOTION_NO,b.ATG_LOYALTY_PROMOTION_NO,b.EOL_PROMOTION_NO,\r\n\t\t\t\tb.loyalty_discount_selling,\r\n\t\t\t\tb.rms_discount_selling,\r\n\t\t\t\tb.atg_discount_selling,\r\n\t\t\t\tb.atg_loyalty_discount_selling,\r\n\t\t\t\tb.staff_discount_selling,b.VOUCHER_DISCOUNT_SELLING,\r\n\t\t\t\tb.eol_discount_selling,\r\n\t\t\t\tb.wfs_discount_selling,\r\n\t\t\t\tb.other_discount_selling,\r\n\t\t\t\tb.loyalty_discount_selling/(1+(vat_rate_perc1/100)) as LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.rms_discount_selling/(1+(vat_rate_perc1/100)) as RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.atg_discount_selling/(1+(vat_rate_perc1/100)) as ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.atg_loyalty_discount_selling/(1+(vat_rate_perc1/100)) as ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.VOUCHER_DISCOUNT_SELLING/(1+(vat_rate_perc1/100)) as VOUCHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.staff_discount_selling/(1+(vat_rate_perc1/100)) as STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.eol_discount_selling/(1+(vat_rate_perc1/100)) as EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.wfs_discount_selling/(1+(vat_rate_perc1/100)) as WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.other_discount_selling/(1+(vat_rate_perc1/100)) as OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.MARKDOWN_SEQ_NO\r\n\t\t\t\t\tFROM DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName] a\r\n\t\tINNER JOIN DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName] b\r\n\t\t\t\tON A.TRAN_DATE = B.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = B.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = B.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = B.TRAN_NO\r\n\t\tWHERE a.chain_no<>30\r\n\t\t\t\tAND a.tran_type in ('S','V','R','Q'))$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName];\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_kr_Tran_discount_selling_vat_exc;\r\nCreate Table #wns_kr_Tran_discount_selling_vat_exc\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect location_no,till_no,tran_no,tran_date , sum(ITEM_TRAN_SELLING_VAT_EXCL) as TRAN_SELLING_VAT_EXCL,\r\n\t\tsum(ITEM_DISCOUNT_SELLING_VAT_EXCL) as DISCOUNT_SELLING_VAT_EXCL\r\nfrom #WNS_CUST_BASKET_ITEM_TEMP\r\ngroup by 1,2,3,4\r\n$[vLimit];\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item ;\r\ncreate table #wns_nm_fnd_item diststyle all as (\r\n\tselect item_no, B.BUSINESS_UNIT_LONG_DESC,B.BUSINESS_UNIT_NO,B.GROUP_NO,B.SUBGROUP_NO,B.DEPARTMENT_NO\r\n\t\t\t,B.CLASS_NO,B.SUBCLASS_NO,B.BUSINESS_UNIT_NAME,B.GROUP_NAME,B.SUBGROUP_NAME,B.DEPARTMENT_NAME,B.CLASS_NAME\r\n\t\t\t,B.SUBCLASS_NAME,B.ITEM_LEVEL1_NO,upper(b.ITEM_SHORT_DESC) AS ITEM_SHORT_DESC\r\n\t\t\t,B.GROUP_LONG_DESC,B.SUBGROUP_LONG_DESC,B.DEPARTMENT_LONG_DESC\r\n\tfrom ANALYTICS.FND_ITEM b\r\n\tgroup by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS #wns_kr_uda_info ;\r\nCreate Table #wns_kr_uda_info\r\n\tdiststyle all as\r\n(\r\n\tselect item_no,\r\n\t\t UDA_104_VALUE_DESC\r\n\t\t,UDA_104_VALUE_NO\r\n\t\t,UDA_300_VALUE_DESC\r\n\t\t,UDA_300_VALUE_NO\r\n\t\t,UDA_306_VALUE_DESC\r\n\t\t,UDA_306_VALUE_NO\r\n\t\t,UDA_310_VALUE_DESC\r\n\t\t,UDA_310_VALUE_NO\r\n\t\t,UDA_316_VALUE_DESC\r\n\t\t,UDA_316_VALUE_NO\r\n\t\t,UDA_320_VALUE_DESC\r\n\t\t,UDA_320_VALUE_NO\r\n\t\t,UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t,UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t,UDA_2301_VALUE_DESC\r\n\t\t,UDA_2301_VALUE_NO\r\n\t\t,UDA_7702_VALUE_DESC\r\n\t\t,UDA_7702_VALUE_NO\r\n\t\t,UDA_7704_VALUE_DESC\r\n\t\t,UDA_7704_VALUE_NO\r\n\tfrom development.wns_hs_uda_value_and_desc\r\n)\r\n$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName](\r\nTRAN_DATE\tdate\tencode zstd\t,\r\nLOCATION_NO\tsmallint\tencode zstd\t,\r\nTILL_NO\tsmallint\tencode zstd\t,\r\nTRAN_NO\tinteger\tencode zstd\t,\r\nTRAN_TIME\tvarchar(8)\t\t,\r\nTRAN_IND\tsmallint\t\t,\r\nTRAN_TYPE\tvarchar(4)\t\t,\r\nTRAN_QTY\tinteger\t\t,\r\nTRAN_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nTRAN_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nDISCOUNT_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nDISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nFIN_YEAR_NO\tsmallint\t\t,\r\nFIN_HALF_NO\tsmallint\t\t,\r\nFIN_QUARTER_NO\tsmallint,\r\nFIN_MONTH_NO\tsmallint\t\t,\r\nFIN_WEEK_NO\tsmallint\t\t,\r\nFIN_DAY_NO\tsmallint\t\t,\r\nSEASON_NO\tsmallint\t\t,\r\nWEEKDAY_WEEKEND_CODE\tsmallint\t\t,\r\nTIME_OF_DAY_CODE\tsmallint\t\t,\r\nITEM_SEQ_NO\tsmallint\tencode zstd\t,\r\nITEM_NO\tnumeric(18)\tencode zstd\t,\r\nITEM_LEVEL1_NO\tbigint\tencode zstd\t,\r\nITEM_SHORT_DESC\tvarchar(60)\tencode zstd\t,\r\nITEM_TRAN_TYPE\tvarchar(4)\t\t,\r\nITEM_TRAN_QTY\tinteger\t\t,\r\nITEM_TRAN_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nITEM_TRAN_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nITEM_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nITEM_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nWASTE_DISCOUNT_PERC\tnumeric(14,2)\t\t,\r\nVAT_RATE_PERC\tnumeric(4,2)\t\t,\r\nCOLOUR_FAMILY\tvarchar(50)\t\t,\r\nBUSINESS_UNIT_NO\tsmallint\t\t,\r\nBUSINESS_UNIT_NAME\tvarchar(40)\t\t,\r\nGROUP_NO\tsmallint\t\t,\r\nGROUP_NAME\tvarchar(40)\tencode zstd\t,\r\nSUBGROUP_NO\tsmallint\t\t,\r\nSUBGROUP_NAME\tvarchar(40)\tencode zstd\t,\r\nDEPARTMENT_NO\tsmallint\t\t,\r\nDEPARTMENT_NAME\tvarchar(40)\tencode zstd\t,\r\nCLASS_NO\tsmallint\tencode zstd\t,\r\nCLASS_NAME\tvarchar(40)\tencode zstd\t,\r\nSUBCLASS_NO\tsmallint\tencode zstd\t,\r\nSUBCLASS_NAME\tvarchar(40)\tencode zstd\t,\r\nALTERNATE_PRODUCT_HIERARCHY1\tvarchar(15)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY2\tvarchar(9)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY3\tvarchar(31)\tencode zstd\t,\r\nALTERNATE_PRODUCT_HIERARCHY4\tvarchar(35)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY5\tvarchar(6)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY6\tvarchar(36)\t\t,\r\nSALES_CHANNEL_CODE\tsmallint\t\t,\r\nAREA_NO\tsmallint\t\t,\r\nAREA_NAME\tvarchar(40)\t\t,\r\nREGION_NO\tsmallint\t\t,\r\nREGION_NAME\tvarchar(40)\t\t,\r\nLOCATION_NAME\tvarchar(40)\t\t,\r\nALTERNATE_LOCATION_HIERARCHY1\tvarchar(40)\t\t,\r\nALTERNATE_LOCATION_HIERARCHY2\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY3\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY4\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY5\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY6\tsmallint\t\t,\r\nDISCOUNT_CODE\tsmallint\t\t,\r\nRMS_PROMOTION_NO\tvarchar(25)\t\t,\r\nATG_PROMOTION_NO\tvarchar(25)\t\t,\r\nATG_LOYALTY_PROMOTION_NO\tvarchar(25)\t\t,\r\nEOL_PROMOTION_NO\tvarchar(25)\t\t,\r\nRMS_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nRMS_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nLOYALTY_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nLOYALTY_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nATG_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nATG_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nATG_LOYALTY_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nEOL_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nEOL_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nWFS_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nWFS_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nSTAFF_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nSTAFF_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nVOUCHER_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nVOUCHER_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nOTHER_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nOTHER_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nMARKDOWN_SEQ_NO\tsmallint\t\t,\r\nSTORE_CARD_TENDER_COUNT\tsmallint\t\t,\r\nSTORE_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nCREDIT_CARD_TENDER_COUNT\tsmallint\t\t,\r\nCREDIT_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nGIFT_CARD_TENDER_COUNT\tsmallint\t\t,\r\nGIFT_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nALIEN_CARD_TENDER_COUNT\tsmallint\t\t,\r\nALIEN_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nCASH_TENDER_IND\tinteger\t\t,\r\nCASH_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nOTHER_TENDER_COUNT\tsmallint\t\t,\r\nOTHER_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\n--VOUCHER_NO\tinteger\t,\r\nVOUCHER_TENDER_COUNT\tsmallint\t\t,\r\nVOUCHER_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nUCID\tvarchar(100)\tencode zstd\t,\r\nCUSTOMER_COHORT_FY\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FH\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FQ\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FM\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FW\tvarchar(19)\t\t,\r\nAGE\tsmallint\t\t,\r\nAGE_BAND_FY\tvarchar(8)\t\t,\r\nAGE_BAND_FH\tvarchar(8)\t\t,\r\nAGE_BAND_FQ\tvarchar(8)\t\t,\r\nAGE_BAND_FM\tvarchar(8)\t\t,\r\nAGE_BAND_FW\tvarchar(8)\t\t,\r\nGENDER\tvarchar(8)\t\t,\r\nDERIVED_RACE\tvarchar(30)\t\t,\r\nACQUISITION_DATE\tdate\tencode zstd\t,\r\nHOUSEHOLD_INCOME_BAND_FY\tsmallint\t\t,\r\nMACRO_SEGMENT_FY \tsmallint\t\t,\r\nMICRO_SEGMENT_FY \tsmallint\t\t,\r\nEMPLOYEE_STATUS_CODE\tsmallint\t\t,\r\nSTORE_CARD_COUNT\tsmallint\t\t,\r\nWREWARDS_CARD_COUNT\tsmallint\t\t,\r\nMYSCHOOL_CARD_COUNT\tsmallint\t\t,\r\nCREDIT_CARD_COUNT\tsmallint\t\t,\r\nLITTLEWORLD_MEMBERSHIP_COUNT\tsmallint\t\t,\r\nVITALITY_MEMBERSHIP_COUNT\tsmallint\t\t,\r\nNON_REWARDS_CARD_COUNT\tsmallint\t\t,\r\nUDA_104_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_104_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_300_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_300_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_306_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_306_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_310_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_310_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_316_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_316_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_320_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_320_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_327_7703_7707_7708_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_327_7703_7707_7708_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_2301_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_2301_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_7702_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_7702_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_7704_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_7704_VALUE_DESC\tvarchar(100)\t\t,\r\nVITALITY_UDA_VALUE_NO\tsmallint\t\t,\r\nWREWARDS_SWIPE_IND\tboolean\t\t,\r\nMYSCHOOL_SWIPE_IND\tboolean\t\t,\r\nVMP_IND\t\t\tsmallint,\r\nBASKET_ID\tvarchar(118)\t\t,\r\nLAST_UPDATED_DATE\tdate\r\n\r\n)\r\nDISTSTYLE KEY\r\nDISTKEY (tran_date)\r\nSORTKEY (tran_date, location_no, till_no, tran_no, item_seq_no, item_no)  ;\r\n-- end of schema\r\nINSERT INTO DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName]\r\n (\r\n\t\tSELECT a.tran_date, a.location_no, a.till_no, a.tran_no,\r\n\t\t\t\ta.tran_time,a.tran_ind,a.tran_type,nvl(a.tran_qty,0) as TRAN_QTY,\r\n\t\t\t\tnvl(a.tran_selling,0) as tran_selling ,nvl(e.tran_selling_vat_excl,0) as tran_selling_vat_excl ,--p2\r\n\t\t\t\tnvl(a.discount_selling,0) as discount_selling,nvl(e.DISCOUNT_SELLING_VAT_EXCL,0) as DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no,\r\n\t\t\t\ta.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\tcase when TRAN_TIME between '07:00:00' and '08:59:59' then 1\r\n\t\t\t\t\t when TRAN_TIME between '09:00:00' and '11:59:59' then 2\r\n\t\t\t\t\t when TRAN_TIME between '12:00:00' and '14:59:59' then 3\r\n\t\t\t\t\t when TRAN_TIME between '15:00:00' and '17:59:59' then 4\r\n\t\t\t\t\t when TRAN_TIME between '18:00:00' and '20:59:59' then 5\r\n\t\t\t\t\t when TRAN_TIME between '21:00:00' and '23:59:59' then 6\r\n\t\t\t\t\t when TRAN_TIME between '00:00:00' and '06:59:59' then 6\r\n\t\t\t\t\telse -1 --[KR]:else condition as 'No Value'\r\n\t\t\t\tend as TIME_OF_DAY_CODE,a.item_seq_no,\r\n\t\t\t\tnvl(a.item_no,0) as item_no, nvl(b.item_level1_no,0) as item_level1_no,\r\n\t\t\t\tnvl(b.ITEM_SHORT_DESC,'NO VALUE') as ITEM_SHORT_DESC,\r\n\t\t\t\ta.item_tran_type,nvl(a.item_tran_qty,0) as item_tran_qty,\r\n\t\t\t\tnvl(a.item_tran_selling,0) as item_tran_selling,nvl(a.ITEM_TRAN_SELLING_VAT_EXCL,0) as ITEM_TRAN_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.item_discount_selling,0) as item_discount_selling, nvl(a.ITEM_DISCOUNT_SELLING_VAT_EXCL,0) as ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.WASTE_DISCOUNT_PERC,0) as WASTE_DISCOUNT_PERC,nvl(a.vat_rate_perc,0) as vat_rate_perc,\r\n\t\t\t\tnvl(c.DIFF_RANGE_DESC,'NO VALUE') as colour_family ,nvl(B.BUSINESS_UNIT_NO,0) as BUSINESS_UNIT_NO,\r\n\t\t\t\tnvl(B.BUSINESS_UNIT_NAME,'NO VALUE') as BUSINESS_UNIT_NAME ,nvl(B.GROUP_NO,0) as GROUP_NO,\r\n\t\t\t\tnvl(B.GROUP_NAME,'NO VALUE') as GROUP_NAME,nvl(B.SUBGROUP_NO,0) as SUBGROUP_NO,nvl(B.SUBGROUP_NAME,'NO VALUE') as SUBGROUP_NAME, nvl(B.DEPARTMENT_NO,0) as DEPARTMENT_NO,nvl(B.DEPARTMENT_NAME,'NO VALUE') as DEPARTMENT_NAME,nvl(B.CLASS_NO,0) as CLASS_NO,nvl(B.CLASS_NAME,'NO VALUE') as CLASS_NAME,nvl(B.SUBCLASS_NO,0) as SUBCLASS_NO,nvl(B.SUBCLASS_NAME,'NO VALUE') as SUBCLASS_NAME,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Food'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO in (51,52,53,54,55) then 'FBH'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=70 then 'Non-Merchandise'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY1 ,\r\n\t\t\t\tcase when GROUP_NO in (9000,9001,9002,9010,9041) then 'Long-Life'\r\n\t\t\t\t\t when GROUP_NO in (9004,9005,9006,9007,9008,9009) then 'Fresh'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=51 then 'Fashion'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=52 and SUBGROUP_NO<>715 then 'Home'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=53 then 'Connect'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=54 then 'Beauty'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=55 then 'CRG'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY2 ,\r\n\t\t\t\tcase when GROUP_NO=1 then 'Womens Outerwear'\r\n\t\t\t\t\t when GROUP_NO=2 then 'Womens Lingerie'\r\n\t\t\t\t\t when GROUP_NO=3 then 'Kidswear'\r\n\t\t\t\t\t when GROUP_NO=4 then 'Trenery'\r\n\t\t\t\t\t when GROUP_NO=5 then 'Menswear'\r\n\t\t\t\t\t when GROUP_NO=6 then 'Womens Footwear and Accessories'\r\n\t\t\t\t\t when DEPARTMENT_NO=172 then 'Bathroom'\r\n\t\t\t\t\t when DEPARTMENT_NO=173 then 'Bedroom'\r\n\t\t\t\t\t when DEPARTMENT_NO=174 then 'Soft Furnishing'\r\n\t\t\t\t\t when DEPARTMENT_NO=176 then 'Kitchen'\r\n\t\t\t\t\t when DEPARTMENT_NO=521 then 'Dining'\r\n\t\t\t\t\t when DEPARTMENT_NO=544 then 'Wrapping Solutions'\r\n\t\t\t\t\t when DEPARTMENT_NO in (695,696) then 'Home Brands'\r\n\t\t\t\t\t when DEPARTMENT_NO=697 then 'Events'\r\n\t\t\t\t\t when SUBGROUP_NO=280 then 'Beauty Private Label'\r\n\t\t\t\t\t when SUBGROUP_NO=233 then 'Beauty Brands'\r\n\t\t\t\t\t when SUBGROUP_NO=212 then 'Airtime'\r\n\t\t\t\t\t when SUBGROUP_NO=446 then 'Cellular'\r\n\t\t\t\t\t when GROUP_NO=12 then 'Country Road'\r\n\t\t\t\t\t when GROUP_NO=13 then 'Witchery'\r\n\t\t\t\t\t when GROUP_NO=14 then 'Mimco'\r\n\t\t\t\t\t when GROUP_NO=9000 then 'Groceries'\r\n\t\t\t\t\t when GROUP_NO=9001 then 'Wine/Beverages/Liquor'\r\n\t\t\t\t\t when GROUP_NO=9002 then 'Snacking/Gifting'\r\n\t\t\t\t\t when GROUP_NO=9004 then 'Prepaded/Deli'\r\n\t\t\t\t\t when GROUP_NO=9005 then 'Bakery'\r\n\t\t\t\t\t when GROUP_NO=9006 then 'Produce/Horti'\r\n\t\t\t\t\t when GROUP_NO=9007 then 'Protein'\r\n\t\t\t\t\t when GROUP_NO=9008 then 'Dairy'\r\n\t\t\t\t\t when GROUP_NO=9009 then 'Foodservices'\r\n\t\t\t\t\t when GROUP_NO=9010 then 'Home/Personal/Pet'\r\n\t\t\t\t\t when GROUP_NO=9041 then 'Frozens'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=70 then 'Non-Merchandise'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY3 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO=4 then 'Trenery'\r\n\t\t\t\t\t when GROUP_NO=12 then 'Country Road'\r\n\t\t\t\t\t when GROUP_NO=13 then 'Witchery'\r\n\t\t\t\t\t when GROUP_NO=14 then 'Mimco'\r\n\t\t\t\t\t when SUBGROUP_NO in (93,261) then 'Classic Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO=684 then 'Classic Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO in (105,110,147,665,678,682,692,712) then 'EDITION.'\r\n\t\t\t\t\t when DEPARTMENT_NO in (107,139,519,658,685,695) then 'studio.w'\r\n\t\t\t\t\t when DEPARTMENT_NO in (109,150,659) then 'RE:'\r\n\t\t\t\t\t when DEPARTMENT_NO=512 then 'jtone'\r\n\t\t\t\t\t when DEPARTMENT_NO=698 then 'Distraction'\r\n\t\t\t\t\t when DEPARTMENT_NO=664 then 'Soft and Flexy'\r\n\t\t\t\t\t when DEPARTMENT_NO=123 then 'Modern'\r\n\t\t\t\t\t when DEPARTMENT_NO in (702,704) then 'SAF'\r\n\t\t\t\t\t when DEPARTMENT_NO in (163,687,158) then '(&US)'\r\n\t\t\t\t\t when DEPARTMENT_NO=650 then 'Early Learning Centre'\r\n\t\t\t\t\t when DEPARTMENT_NO in (159,548) and SUBCLASS_NO not in (1274,1987,9229) then 'Schoolwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (119,121,126,696) then 'W Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO=526 then 'Sanctuary'\r\n\t\t\t\t\t when DEPARTMENT_NO=651 then 'Eye Candy'\r\n\t\t\t\t\t when DEPARTMENT_NO=654 then 'Fox Box'\r\n\t\t\t\t\t when DEPARTMENT_NO=707 then 'Clarins'\r\n\t\t\t\t\t when DEPARTMENT_NO=193 then 'MTN'\r\n\t\t\t\t\t when DEPARTMENT_NO=194 then 'Vodacom'\r\n\t\t\t\t\t when DEPARTMENT_NO=195 then 'Cell C'\r\n\t\t\t\t\t when DEPARTMENT_NO=532 then 'Telkom'\r\n\t\t\t\t\t when CLASS_NO in (1701,3227,3576,4976,5602) then 'Classic Collection'\r\n\t\t\t\t\t when CLASS_NO in (1136,1706,2686,3232,4384,4973,5120,5607) then 'Modern'\r\n\t\t\t\t\t when CLASS_NO in (2229,1285) then 'studio.w'\r\n\t\t\t\t\t when CLASS_NO in (1255,1266) then 'AU'\r\n\t\t\t\t\t when CLASS_NO=1132 then 'Lingerie Collection'\r\n\t\t\t\t\t when CLASS_NO=1608 then 'Premium Collection'\r\n\t\t\t\t\t when CLASS_NO in (1090,1278) then '(&US)'\r\n\t\t\t\t\t when CLASS_NO in (1859,1882) then 'Walkmates'\r\n\t\t\t\t\t when CLASS_NO in (1455,1459,1460) and SUBCLASS_NO not in (3954,9049) then 'W Beauty'\r\n\t\t\t\t\t when CLASS_NO=1797 then 'Longmarket'\r\n\t\t\t\t\t when CLASS_NO=4716 then 'QVS'\r\n\t\t\t\t\t when CLASS_NO=5345 then 'SAVI'\r\n\t\t\t\t\t when CLASS_NO=1013 then 'Payot'\r\n\t\t\t\t\t when CLASS_NO=1035 then 'Ciate'\r\n\t\t\t\t\t when CLASS_NO=1070 then 'MSLONDON'\r\n\t\t\t\t\t when CLASS_NO=1078 then 'Billion Dollar Brows'\r\n\t\t\t\t\t when CLASS_NO=1146 then 'Chanel'\r\n\t\t\t\t\t when CLASS_NO=1170 then 'Glam Glow'\r\n\t\t\t\t\t when CLASS_NO=1183 then 'Estee Lauder'\r\n\t\t\t\t\t when CLASS_NO=1188 then 'Clinique'\r\n\t\t\t\t\t when CLASS_NO=1198 then 'Bobbi Brown'\r\n\t\t\t\t\t when CLASS_NO=1383 then 'Alaia'\r\n\t\t\t\t\t when CLASS_NO=1400 then 'Bvlgari'\r\n\t\t\t\t\t when CLASS_NO=1411 then 'Burberry'\r\n\t\t\t\t\t when CLASS_NO=1416 then 'Issey Miyake'\r\n\t\t\t\t\t when CLASS_NO=1436 then 'Coach'\r\n\t\t\t\t\t when CLASS_NO=1443 then 'Elie Saab'\r\n\t\t\t\t\t when CLASS_NO=1453 then 'Hermes'\r\n\t\t\t\t\t when CLASS_NO=1461 then 'Narciso Rodriguez'\r\n\t\t\t\t\t when CLASS_NO=1474 then 'Clarins'\r\n\t\t\t\t\t when CLASS_NO=1540 then 'Elizabeth Arden'\r\n\t\t\t\t\t when CLASS_NO=1550 then 'Lancome'\r\n\t\t\t\t\t when CLASS_NO=1557 then 'La Prairie'\r\n\t\t\t\t\t when CLASS_NO=1563 then 'Dr. Hauschka'\r\n\t\t\t\t\t when CLASS_NO=1568 then 'Hugo Boss'\r\n\t\t\t\t\t when CLASS_NO=1572 then 'Lacoste'\r\n\t\t\t\t\t when CLASS_NO=1576 then 'Gucci'\r\n\t\t\t\t\t when CLASS_NO=1580 then 'Mugler'\r\n\t\t\t\t\t when CLASS_NO=1584 then 'Azzaro'\r\n\t\t\t\t\t when CLASS_NO=1588 then 'Calvin Klein'\r\n\t\t\t\t\t when CLASS_NO=1592 then 'Cartier'\r\n\t\t\t\t\t when CLASS_NO=1596 then 'Davidoff'\r\n\t\t\t\t\t when CLASS_NO=1604 then 'Givenchy'\r\n\t\t\t\t\t when CLASS_NO=1610 then 'Marc Jacobs'\r\n\t\t\t\t\t when CLASS_NO=1617 then 'Chloe'\r\n\t\t\t\t\t when CLASS_NO=1627 then 'Joop'\r\n\t\t\t\t\t when CLASS_NO=1633 then 'Missoni'\r\n\t\t\t\t\t when CLASS_NO=1657 then 'Paco Rabanne'\r\n\t\t\t\t\t when CLASS_NO=1661 then 'Valentino'\r\n\t\t\t\t\t when CLASS_NO=1665 then 'Versace'\r\n\t\t\t\t\t when CLASS_NO=1669 then 'Donna Karan'\r\n\t\t\t\t\t when CLASS_NO=1673 then 'Aramis'\r\n\t\t\t\t\t when CLASS_NO=1676 then 'Michael Kors'\r\n\t\t\t\t\t when CLASS_NO=1681 then 'Zegna'\r\n\t\t\t\t\t when CLASS_NO=1684 then 'Lab Series'\r\n\t\t\t\t\t when CLASS_NO=1688 then 'Jean Paul Gaultier'\r\n\t\t\t\t\t when CLASS_NO=1692 then 'Zadig&Voltaire'\r\n\t\t\t\t\t when CLASS_NO=1696 then 'Van Cleef & Arpels'\r\n\t\t\t\t\t when CLASS_NO=1703 then 'Stella Mccartney'\r\n\t\t\t\t\t when CLASS_NO=1709 then 'Alexander Mcqueen'\r\n\t\t\t\t\t when CLASS_NO=1712 then 'Carolina Herrera'\r\n\t\t\t\t\t when CLASS_NO=1722 then 'Roberto Cavalli'\r\n\t\t\t\t\t when CLASS_NO=1777 then 'Yves Saint Laurent'\r\n\t\t\t\t\t when CLASS_NO=1781 then 'Giorgio Armani'\r\n\t\t\t\t\t when CLASS_NO=1785 then 'Dolce&Gabanna'\r\n\t\t\t\t\t when CLASS_NO=1801 then 'La Mer'\r\n\t\t\t\t\t when CLASS_NO=1806 then 'Tom Ford Beauty'\r\n\t\t\t\t\t when CLASS_NO=1815 then 'Jo Malone London'\r\n\t\t\t\t\t when CLASS_NO=1825 then 'Salvatore Ferragamo'\r\n\t\t\t\t\t when CLASS_NO=1848 then 'Cowshed'\r\n\t\t\t\t\t when CLASS_NO=1855 then 'LOCCITANE'\r\n\t\t\t\t\t when CLASS_NO=2024 then 'Mont Blanc'\r\n\t\t\t\t\t when CLASS_NO=2028 then 'Dunhill'\r\n\t\t\t\t\t when CLASS_NO=2083 then 'Charlotte Rhys'\r\n\t\t\t\t\t when CLASS_NO=2135 then 'Suki Suki Naturals'\r\n\t\t\t\t\t when CLASS_NO=2137 then 'Skin Creamery'\r\n\t\t\t\t\t when CLASS_NO=2139 then 'Acqua Di Parma'\r\n\t\t\t\t\t when CLASS_NO=2144 then 'Vita Liberata'\r\n\t\t\t\t\t when CLASS_NO=3527 then 'Nesti Soaps'\r\n\t\t\t\t\t when CLASS_NO=4118 then 'Dior'\r\n\t\t\t\t\t when CLASS_NO=4804 then 'Revlon'\r\n\t\t\t\t\t when CLASS_NO=4820 then 'Stila'\r\n\t\t\t\t\t when CLASS_NO=5413 then 'Morgan Taylor'\r\n\t\t\t\t\t when CLASS_NO=5472 then 'Opi'\r\n\t\t\t\t\t when CLASS_NO=5927 then 'Nuxe'\r\n\t\t\t\t\t when CLASS_NO=5951 then 'Sampar'\r\n\t\t\t\t\t when CLASS_NO=9068 then 'Ren'\r\n\t\t\t\t\t when CLASS_NO=9070 then 'Decleor'\r\n\t\t\t\t\t when CLASS_NO=9071 then 'Gatineau'\r\n\t\t\t\t\t when CLASS_NO=9085 then 'Mavala'\r\n\t\t\t\t\t when CLASS_NO=9122 then 'Vichy'\r\n\t\t\t\t\t when CLASS_NO=9147 then 'Smashbox'\r\n\t\t\t\t\t when CLASS_NO=9159 then 'Tommy Hilfiger'\r\n\t\t\t\t\t when CLASS_NO=9369 then 'Yves Rocher'\r\n\t\t\t\t\t when CLASS_NO in (5306,5321,5324) then 'Telkom'\r\n\t\t\t\t\t when CLASS_NO=5310 then 'Cell C'\r\n\t\t\t\t\t when CLASS_NO=5314 then 'MTN'\r\n\t\t\t\t\t when CLASS_NO=5318 then 'Neotel'\r\n\t\t\t\t\t when CLASS_NO=5327 then 'Virgin'\r\n\t\t\t\t\t when CLASS_NO=5331 then 'Vodacom'\r\n\t\t\t\t\t when SUBCLASS_NO in (1302,1307,1324,2547,2552,2553,2554,2680,2685,3301,3303,3429,3766,5876,3860,3863,3867,4621,4754,4856,\r\n\t\t\t\t\t\t\t\t\t\t\t 4868,4870,5128,5129,5728,7141) then 'Classic Collection'\r\n\t\t\t\t\t when SUBCLASS_NO in (2378,2681,2683,2684,3096,3393,3765,3811,3861,3864,3868,3978,4304,5609,5611,5875,7015) then 'Modern'\r\n\t\t\t\t\t when SUBCLASS_NO in (2548,2550,2551,3012,3010,5126,5125,5132,7146) then 'EDITION.'\r\n\t\t\t\t\t when SUBCLASS_NO in (1121,1129,1134,1138,1140,1308,1317,1811,2465,3009,4622,5062) then 'studio.w'\r\n\t\t\t\t\t when SUBCLASS_NO in (1125,1130,1137,1139,1142,1316,1318,1812,2467,3453,7179) then 'RE:'\r\n\t\t\t\t\t when SUBCLASS_NO in (3954,4214,4467,9163,9049) then 'jtone'\r\n\t\t\t\t\t when SUBCLASS_NO in (1274,1987,9229) then 'Walkmates'\r\n\t\t\t\t\t when SUBCLASS_NO in (5157,5158,5159,5160) then 'Heatgen'\r\n\t\t\t\t\t when SUBCLASS_NO=1814 then 'Branded Kitchen Appliances'\r\n\t\t\t\t\t when SUBCLASS_NO=5989 then 'Branded Kitchen Cookware'\r\n\t\t\t\t\t when SUBCLASS_NO=5990 then 'Branded Kitchen Kitchen Accessories'\r\n\t\t\t\t\t when SUBCLASS_NO=5991 then 'Branded Kitchen Knives'\r\n\t\t\t\t\t when SUBCLASS_NO=5993 then 'Branded Dining Drinkware'\r\n\t\t\t\t\t when SUBCLASS_NO=5994 then 'Branded Dining Cutlery'\r\n\t\t\t\t\t when SUBCLASS_NO=1833 then 'Bath Time'\r\n\t\t\t\t\t when SUBCLASS_NO=2034 then 'Le Bain'\r\n\t\t\t\t\t when SUBCLASS_NO=2207 then 'Every Day'\r\n\t\t\t\t\t when SUBCLASS_NO=3100 then 'Unwind'\r\n\t\t\t\t\t when SUBCLASS_NO=3403 then 'African'\r\n\t\t\t\t\t when SUBCLASS_NO=4536 then 'Ingredients'\r\n\t\t\t\t\t when SUBCLASS_NO=4537 then 'Fresh Delights'\r\n\t\t\t\t\t when SUBCLASS_NO=4774 then 'Love Your Skin'\r\n\t\t\t\t\t when SUBCLASS_NO=9025 then 'Extracts From Nature'\r\n\t\t\t\t\t when SUBCLASS_NO=1253 then 'Simply Florals'\r\n\t\t\t\t\t when SUBCLASS_NO=2021 then 'Belle Maison'\r\n\t\t\t\t\t when SUBCLASS_NO=2896 then 'Classic Collection'\r\n\t\t\t\t\t when SUBCLASS_NO=5154 then 'Bliss'\r\n\t\t\t\t\t when SUBCLASS_NO=5861 then 'AG Mobile'\r\n\t\t\t\t\t when SUBCLASS_NO=5862 then 'Mobicel'\r\n\t\t\t\t\t when SUBCLASS_NO=5955 then 'Hisense'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY4 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO in (1,2,6,14) then 'Women'\r\n\t\t\t\t\t when GROUP_NO=5 then 'Men'\r\n\t\t\t\t\t when GROUP_NO=3 then 'Kids'\r\n\t\t\t\t\t when SUBGROUP_NO in (392,422,426) then 'Women'\r\n\t\t\t\t\t when SUBGROUP_NO in (423,427) then 'Men'\r\n\t\t\t\t\t when SUBGROUP_NO in (337,393,424) then 'Kids'\r\n\t\t\t\t\t when DEPARTMENT_NO in (108,112,113,119,121,126,139,514,526,554,610,651,654,683,707) then 'Women'\r\n\t\t\t\t\t when DEPARTMENT_NO in (141,552,642) then 'Men'\r\n\t\t\t\t\t when DEPARTMENT_NO=136 then 'Kids'\r\n\t\t\t\t\t when CLASS_NO in (1013,1035,1070,1078,1170,1198,1383,1421,1443,1451,1455,1540,1550,1557,1563,1610,1617,1633,1703,1709,\r\n\t\t\t\t\t\t\t\t\t\t 1797,1801,1855,2135,2137,2144,3527,4118,4820,5413,5472,5927,5951,9068,9071,9085,9147,9369) then 'Women'\r\n\t\t\t\t\t when CLASS_NO in (1673,1681,1684,2028) then 'Men'\r\n\t\t\t\t\t when CLASS_NO in (1714,2044,4014,2035,2047) then 'Kids'\r\n\t\t\t\t\t when SUBCLASS_NO in (1406,1413,1427,1442,1457,1549,1556,1562,1567,1844,1966,2401,2756,3471,4214,4463,4467,4725,4805,4806,\r\n\t\t\t\t\t\t\t\t\t\t4807,4808,4809,4810,5293,5857,8698,9020,9021,9022,9049,9081,9082,9126,9163,1467,1570,1574,1578,1582,1586,1590,1594,1606,\r\n\t\t\t\t\t\t\t\t\t\t1599,1690,1694,1699,1720,1754,1779,1783,1787,1826,2026,1629,1659,1663,1667,1671,1678,3677,1147,1148,1154,1160,1184,1185,\r\n\t\t\t\t\t\t\t\t\t\t1794,1190,1191,1195,1490,1507,1522,1523,1807,1823,1834) then 'Women'\r\n\t\t\t\t     when SUBCLASS_NO in (1410,1415,1435,1458,1824,2402,2757,4038,4469,4811,5858,8687,9032,9083,1468,1571,1575,1579,1583,1587,\r\n\t\t\t\t\t\t\t\t\t\t\t1591,1595,1607,1601,1691,1695,1702,1721,1776,1780,1784,1788,1827,2027,1632,1660,1664,1668,1672,1680,3680,1162,1186,1196,\r\n\t\t\t\t\t\t\t\t\t\t\t1537,1809) then 'Men'\r\n\t\t\t\t     when SUBCLASS_NO in (2384,4799,6043,9034,9051) then 'Kids'\r\n                else 'Others' end as ALTERNATE_PRODUCT_HIERARCHY5 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO=1 then 'Outerwear'\r\n\t\t\t\t\t when GROUP_NO=14 and CLASS_NO<>5248 then 'Accessories'\r\n\t\t\t\t\t when GROUP_NO=7 then 'Homeware'\r\n\t\t\t\t\t when GROUP_NO=9 then 'Cellular and Airtime'\r\n\t\t\t\t\t when SUBGROUP_NO in (261,750) and CLASS_NO not in (1790,4296,4588) then 'Outerwear'\r\n\t\t\t\t\t when SUBGROUP_NO=200 then 'Footwear'\r\n\t\t\t\t\t when SUBGROUP_NO=366 then 'Accessories'\r\n\t\t\t\t\t when SUBGROUP_NO=290 then 'Underwear'\r\n\t\t\t\t\t when SUBGROUP_NO in (425,753) then 'Homeware'\r\n\t\t\t\t\t when SUBGROUP_NO=754 then 'Beauty Services'\r\n\t\t\t\t\t when DEPARTMENT_NO in (108,112,113,119,121,130,136,141,157,158,159,162,163,514,523,528,537,548,551,552,554,566,570,575,\r\n\t\t\t\t\t\t\t\t\t\t\t 576,577,578,580,583,589,590,610,642,670,673,674,683,687)\r\n\t\t\t\t\t and CLASS_NO not in (1270,1275,1329,1330,4401,5918,9192,9391,\r\n\t\t\t\t\t\t\t\t\t\t\t 9478,9479,9494,9495,9531,9533,9551,9555) then 'Outerwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (123,153,160,165,684) and SUBCLASS_NO not in (4072,4183,6529,6546) then 'Sleepwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (128,171,179,185,663,672,711) then 'Footwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (124,126,139,154,620) then 'Underwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (129,155) then 'Hosiery and Socks'\r\n\t\t\t\t\t when DEPARTMENT_NO in (555,562,650) then 'Homeware'\r\n\t\t\t\t\t when DEPARTMENT_NO in (115,116,567,571,581,585,586,653,671,675,677) and CLASS_NO not in (2995,2996,3318,3327,3338,3343,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 5274,5349,9451,9453) and SUBCLASS_NO<>5410 then 'Accessories'\r\n\t\t\t\t\t when CLASS_NO in (1338,1360,4859,5622) then 'Outerwear'\r\n\t\t\t\t\t when CLASS_NO in (1270,1329,2995,3327,3338,5248,5639,9192,9451) then 'Footwear'\r\n\t\t\t\t\t when CLASS_NO in (1275,1790,4296,4588,9479,9495,9533,9555) then 'Accessories'\r\n\t\t\t\t\t when CLASS_NO in (1773,1995,2010,2655,2661,4401,4887,4890,4892,4903,4906,5633,5773) then 'Underwear'\r\n\t\t\t\t\t when CLASS_NO in (1330,2002,2012,2996,3318,3343,4899,5274,5349,5918,9453) then 'Hosiery and Socks'\r\n\t\t\t\t\t when CLASS_NO in (1361,1771,2650,5484,5766,9391,9478,9494,9531,9551) then 'Sleepwear'\r\n\t\t\t\t\t when CLASS_NO=1459 then 'Beauty Skin'\r\n\t\t\t\t\t when CLASS_NO=1455 then 'Beauty Colour'\r\n\t\t\t\t\t when CLASS_NO in (2392,9033) then 'Beauty Gifting and Special Occasions'\r\n\t\t\t\t\t when CLASS_NO in (1763,1764,4716,5345) then 'Beauty Accessories and Bags'\r\n\t\t\t\t\t when SUBCLASS_NO in (1895,4529,4931,4933,6423,6424) then 'Outerwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (1352,4072,4183,5410,5620,6529,6546) then 'Footwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (1359,1852,3740,4932,5621,6421) then 'Accessories'\r\n\t\t\t\t\t when SUBCLASS_NO in (4525,4526) then 'Underwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (4078) then 'Hosiery and Socks'\r\n\t\t\t\t\t when SUBCLASS_NO in (1014,1178,1802,2138,2145,5928,5952,9078,9081,9084,9126,9323,4315,1818,1147,1184,1190,1507,1547,1553,\r\n\t\t\t\t\t\t\t\t\t\t\t 1560,1564,1834,4774,1966,9020,9032,1021,1839,1843,2136,1362,1366,9079,9082,9083,1368,1369,1371,4038,4725,1537) then 'Beauty Skin'\r\n\t\t\t\t\t when SUBCLASS_NO in (1182,1803,4316,1067,4807,5418,5473,9090,9325,1148,1794,1191,1523,1545,1554,1559,1566,1823,9644,1038,\r\n\t\t\t\t\t\t\t\t\t\t\t 1040,1042,1069,1071,1077,1113,1079,1202,1203,1205,1206,1207,1840,1373,4805,4806,4808,4809,5293,1374,4821,4822,4823,4824,\r\n\t\t\t\t\t\t\t\t\t\t\t 1375,5417,5474,5476,5478,5479,1854,9088,9089,1381,2848,2850,2851,9150) then 'Beauty Colour'\r\n\t\t\t\t\t when SUBCLASS_NO in (4317,1847,4810,4811,1856,2086,1816,2141,1160,1162,1185,1186,1195,1196,1490,1546,1551,1558,8687,8698,\r\n\t\t\t\t\t\t\t\t\t\t\t 9049,1388,1397,1402,1406,1410,1412,1413,1415,1422,1427,1435,1441,1442,1824,1446,1452,1456,1457,1458,1462,1467,1468,1569,\r\n\t\t\t\t\t\t\t\t\t\t\t 1570,1571,1573,1574,1575,1577,1578,1579,1581,1582,1583,1585,1586,1587,1589,1590,1591,1593,1594,1595,1605,1606,1607,1598,\r\n\t\t\t\t\t\t\t\t\t\t\t 1599,1601,1614,1615,1621,1622,1628,1629,1632,1641,1643,1658,1659,1660,1662,1663,1664,1666,1667,1668,1670,1671,1672,1674,\r\n\t\t\t\t\t\t\t\t\t\t\t 1675,1677,1678,1680,1682,1683,1685,1686,1687,1689,1690,1691,1693,1694,1695,1698,1699,1702,1704,1708,1710,1711,1715,1720,\r\n\t\t\t\t\t\t\t\t\t\t\t 1721,1753,1754,1776,1778,1779,1780,1782,1783,1784,1786,1787,1788,1817,1819,1820,1826,1827,1828,2025,2026,2027,2030,2031,\r\n\t\t\t\t\t\t\t\t\t\t\t 2142,4123,9099,3677,3680,9161,9383,1807,1809) then 'Beauty Fragrance'\r\n\t\t\t\t\t when SUBCLASS_NO in (1849,1850,1851,1945,2085,2087,3528,4287,9327,1833,2034,2207,3100,3403,4536,4537,9025,1253,2021,2896,\r\n\t\t\t\t\t\t\t\t\t\t\t 5154,7797,4207,4208,2211,4214,1798,1799,1800,1154,1522,1548,1555,1561,1565) then 'Beauty Bath and Body'\r\n\t\t\t\t     when SUBCLASS_NO in (1169,1187,1197,1539,1549,1556,1562,1567,1796,1810) then 'Beauty Gifting and Special Occasions'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY6,\r\n\t\t\t\tcase when a.TILL_NO=997 then 3\r\n\t\t\t\t\twhen a.TILL_NO=999 then 2\r\n\t\t\t\telse 1 end as SALES_CHANNEL_CODE,\r\n\t\t\t\ta.area_no,a.area_name,a.region_no,a.region_name,a.location_name,nvl(a.alternate_location_hierarchy1,'No Value') as alternate_location_hierarchy1,\r\n\t\t\t\ta.alternate_location_hierarchy2, a.alternate_location_hierarchy3 , a.alternate_location_hierarchy4,\r\n\t\t\t\ta.alternate_location_hierarchy5 , a.alternate_location_hierarchy6,\r\n\t\t\t\tnvl(a.discount_code,0) as discount_code,nvl(a.RMS_PROMOTION_NO,'No Value') as RMS_PROMOTION_NO,nvl(a.ATG_PROMOTION_NO,'No Value') as ATG_PROMOTION_NO ,nvl(a.ATG_LOYALTY_PROMOTION_NO,'No Value') as ATG_LOYALTY_PROMOTION_NO,nvl(a.EOL_PROMOTION_NO,'No Value') as EOL_PROMOTION_NO,\r\n\t\t\t\tnvl(a.rms_discount_selling,0) as rms_discount_selling,  nvl(a.RMS_DISCOUNT_SELLING_VAT_EXCL,0) as RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.loyalty_discount_selling,0) as loyalty_discount_selling, nvl(a.LOYALTY_DISCOUNT_SELLING_VAT_EXCL,0) as LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.atg_discount_selling,0) as atg_discount_selling,  nvl(a.ATG_DISCOUNT_SELLING_VAT_EXCL,0) as ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.atg_loyalty_discount_selling,0) as atg_loyalty_discount_selling, nvl(a.ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,0) as ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.eol_discount_selling,0) as eol_discount_selling, nvl(a.EOL_DISCOUNT_SELLING_VAT_EXCL,0) as EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.wfs_discount_selling,0) as wfs_discount_selling,  nvl(a.WFS_DISCOUNT_SELLING_VAT_EXCL,0) as WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.staff_discount_selling,0) as staff_discount_selling, nvl(a.STAFF_DISCOUNT_SELLING_VAT_EXCL,0) as STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.VOUCHER_DISCOUNT_SELLING,0) as VOUCHER_DISCOUNT_SELLING, nvl(a.VOUCHER_DISCOUNT_SELLING_VAT_EXCL,0) as VOUCHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.other_discount_selling,0) as other_discount_selling,nvl(a.OTHER_DISCOUNT_SELLING_VAT_EXCL,0) as OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.MARKDOWN_SEQ_NO,0) as MARKDOWN_SEQ_NO,nvl(a.store_card_tender_count,0) as store_card_tender_count,nvl(a.store_card_tran_tender_selling,0) as store_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.credit_card_tender_count,0) as credit_card_tender_count, nvl(a.credit_card_tran_tender_selling,0) as credit_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.gift_card_tender_count,0) as gift_card_tender_count, nvl(a.gift_card_tran_tender_selling,0) as gift_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.alien_card_tender_count,0) as alien_card_tender_count, nvl(a.alien_card_tran_tender_selling,0) as alien_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.cash_tender_ind,0) as cash_tender_ind, nvl(a.cash_tran_tender_selling,0) as cash_tran_tender_selling,\r\n\t\t\t\tnvl(a.other_tender_count,0) as other_tender_count, nvl(a.other_tran_tender_selling,0) as other_tran_tender_selling,\r\n\t\t\t\t---1 as voucher_no,\r\n\t\t\t\tnvl(a.voucher_tender_count,0) as voucher_tender_count, nvl(a.voucher_tran_tender_selling,0) as voucher_tran_tender_selling,\r\n\t\t\t\tnvl(a.ucid,'No Value') as ucid,\r\n\t\t\t    a.CUSTOMER_COHORT_FY,\r\n\t\t\t\ta.customer_cohort_fh,\r\n                a.customer_cohort_fq,\r\n                a.customer_cohort_fm,\r\n                'No Value' as customer_cohort_fw,\r\n\t\t\t\tnvl(a.age,0) as age,\r\n\t\t\t\ta.age_band as age_band_fy,\r\n\t\t\t\t'No Value' as age_band_fh,\r\n\t\t\t    'No Value' as age_band_fq,\r\n\t\t\t    'No Value' as age_band_fm,\r\n\t\t\t    'No Value' as age_band_fw,\r\n\t\t\t\tcase when a.gender='u' or a.gender is null then 'NO VALUE' else a.gender end as gender,\r\n\t\t\t\tcase when a.derived_race='RACE UNKNOWN' or a.derived_race is null then 'NO VALUE' else a.derived_race end as derived_race,a.acquisition_date,\r\n\t\t\t\ta.HOUSEHOLD_INCOME_BAND_FY, a.MACRO_SEGMENT_FY , a.MICRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as EMPLOYEE_STATUS_CODE,\r\n\t\t\t\t-1 as store_card_count,             --p2\r\n\t\t\t\t-1 as wrewards_card_count,          --p2\r\n\t\t\t\t-1 as myschool_card_count,          --p2\r\n\t\t\t\t-1 as credit_card_count,            --p2\r\n\t\t\t\t-1 as littleworld_membership_count, --p2\r\n\t\t\t\t-1 as vitality_membership_count,    --p2\r\n\t\t\t\t-1 as non_rewards_card_count       --p2\r\n\t\t\t\t,nvl(d.UDA_104_VALUE_NO,'0') as UDA_104_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_104_VALUE_DESC,'No Value') as UDA_104_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_300_VALUE_NO,'0') as UDA_300_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_300_VALUE_DESC,'No Value') as UDA_300_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_306_VALUE_NO,'0') as UDA_306_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_306_VALUE_DESC,'No Value') as UDA_306_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_310_VALUE_NO,'0') as UDA_310_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_310_VALUE_DESC,'No Value') as UDA_310_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_316_VALUE_NO,'0') as UDA_316_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_316_VALUE_DESC,'No Value') as UDA_316_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_320_VALUE_NO,'0') as UDA_320_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_320_VALUE_DESC,'No Value') as UDA_320_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_327_7703_7707_7708_VALUE_NO,'0') as UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_327_7703_7707_7708_VALUE_DESC,'No Value') as UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_2301_VALUE_NO,'0') as UDA_2301_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_2301_VALUE_DESC,'No Value') as UDA_2301_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_7702_VALUE_NO,'0') as UDA_7702_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_7702_VALUE_DESC,'No Value') as UDA_7702_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_7704_VALUE_NO,'0') as UDA_7704_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_7704_VALUE_DESC,'No Value') as UDA_7704_VALUE_DESC\r\n\t\t\t\t,nvl(a.VITALITY_UDA_VALUE_NO,-1) as VITALITY_UDA_VALUE_NO,\r\n\t\t\t\tnvl(a.wrewards_swipe_ind,0) as wrewards_swipe_ind, nvl(a.myschool_swipe_ind,0) as myschool_swipe_ind,\r\n\t\t\t\ta.VMP_IND,\r\n\t\t\t\ta.TRAN_DATE||'-'||a.LOCATION_NO||'-'||a.TILL_NO||'-'||a.TRAN_NO as basket_id,'1900-01-01' as LAST_UPDATED_DATE\r\n\t\t\t\t--b.LOYALTY_PROMOTION_NO,  --p2 not there in excel sheet\r\n\t\t\t\t--b.WFS_PROMOTION_NO,      --p2  not there in excel sheet\r\n\t\t\t\t--b.STAFF_PROMOTION_NO,    --p2  not there in excel sheet\r\n\t\t\t\t--b.FRANCHISE_PROMOTION_NO ,--p2  not there in excel sheet\r\n\t\tFROM #WNS_CUST_BASKET_ITEM_TEMP a\r\n\t\tLEFT JOIN #wns_nm_fnd_item b\r\n\t\t\t\tON A.ITEM_NO = B.ITEM_NO\r\n\t\tleft join development.wns_hs_Item_Colour_Family c\r\n\t\t\t\tON A.ITEM_NO = c.ITEM_NO\r\n\t\tleft join #wns_kr_uda_info d\r\n\t\t\t\tON A.ITEM_NO = d.ITEM_NO\r\n\t\tleft join #wns_kr_Tran_discount_selling_vat_exc E\r\n\t\t\t\tON A.TRAN_DATE = E.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = E.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = E.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = E.TRAN_NO)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS #WNS_CUST_BASKET_ITEM_TEMP ;\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item ;\r\nDROP TABLE IF EXISTS #wns_kr_uda_info;\r\nDROP TABLE IF EXISTS #wns_kr_Tran_discount_selling_vat_exc;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT E - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT F - Combining One time run Base table with Base_Table_One_Day_Data(formed above)                                  *****************/\r\n/******************************************************************************************************************************************/\r\nDROP TABLE IF EXISTS DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay]\r\nAS\r\n(SELECT * FROM DEVELOPMENT.$[vCBI])  --One Time run base table  DEVELOPMENT.CUST_BASKET_ITEM_{3}\r\nUNION ALL\r\n(SELECT * FROM DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName])  --daily run base table\r\n;\r\n\r\n\r\n-- Drop previous week's Base Table\r\nTRUNCATE DEVELOPMENT.$[vCBI];\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT G - Mapping updated UCIDs and other details in the consolidated base table formed in Script F                                  *****************/\r\n/******************************************************************************************************************************************/\r\ndrop table if exists DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay];\r\nCreate Table DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay]\r\ndiststyle all as\r\n(select perm_ucid_hashed, ucid_type\r\n\tfrom DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tgroup by 1,2\r\n) $[vLimit];\r\n\r\n--Execution time: 22.88s\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay] AS\r\n      select\r\n\t\t\tb.tran_date, b.location_no, b.till_no, b.tran_no, B.perm_ucid_hashed as ucid,c.BIRTH_DATE,\r\n\t\t\tc.AGE_YEARS\t,\r\n\t\t\tcase when c.gender='u' or c.gender is null then 'NO VALUE' else c.gender end as gender,\r\n\t\t\tcase when c.derived_race='RACE UNKNOWN' or c.derived_race is null then 'NO VALUE' else c.derived_race end as derived_race,\r\n\t\t\td.ACQUISITION_DATE,f.ucid_type\r\n\t\t\tfrom\r\n\t\t\tdevelopment.CUST_BASKET_MAPPING b    -- for current ucid only we need to merge all this.\r\n\t\t\tleft join\r\n\t\t\tDEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] c   -- for demographic  we will add age_band here.\r\n\t\t\ton b.perm_ucid_hashed = c.ucid\r\n\t\t\tleft join\r\n\t\t\tDEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName] d -- for aqusiotion date only\r\n\t\t\ton b.perm_ucid_hashed = d.ucid\r\n\t\t\tleft join DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay] f  -- using ucid_types we will merge this also. not needed we can take this up from WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName]\r\n\t\t\ton b.perm_ucid_hashed = f.perm_ucid_hashed $[vLimit];\r\n--Execution time: 32.83s\r\ndrop table if exists DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay];\r\n\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] AS\r\nSELECT *,\r\n(a.tran_date -cast(BIRTH_DATE as date))/365 AS AGE_TD  ,\r\n--- add age_fy this is a year wise age and fixed for each year.\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no ) as age_fy,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO ) as age_fh,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO ) as age_fq,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO,b.fin_month_no ) as age_fm,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO,b.fin_month_no,b.FIN_WEEK_NO ) as age_fw\r\nFROM DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay] A\r\nLEFT JOIN (SELECT DISTINCT FIN_YEAR_NO, FIN_HALF_NO, FIN_QUARTER_NO, FIN_MONTH_NO, FIN_WEEK_NO ,CALENDAR_DATE FROM ANALYTICS.FND_CALENDAR) B\r\nON A.TRAN_DATE=B.CALENDAR_DATE\r\n;\r\ndelete from DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] where FIN_YEAR_NO<=2017;\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay];\r\n--Execution time: 42.19s\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay] AS\r\nSELECT A.*,j.TIER_FY,j.TIER_FH,j.TIER_Fq,j.TIER_FM\r\nFROM DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] A\r\nLEFT JOIN  development.wns_adj_tier_wise$[vDayName] j    -- for tier only we need to merge this also\r\nON A.fin_year_no = j.fin_year_no\r\nAND A.fin_month_no = j.fin_month_no\r\nAND A.ucid = j.ucid\r\n;\r\ncreate table development.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay]\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect A.*,c.effective_from_date\r\nfrom DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay] A\r\n  left join (\tselect\r\n\t                        CAST (location_no as SMALLINT) as location_no,\r\n\t                        CAST (till_no as SMALLINT) as till_no,\r\n\t                        CAST (tran_no as INTEGER ) as tran_no,\r\n\t                        tran_date,effective_from_date,effective_to_date\r\n\t                        from development.cust_basket_mapping_tracking\r\n\t                        where effective_to_date is null and tran_date>='2017-06-26'\r\n\t                    ) c\r\n        \t\tON A.TRAN_DATE = c.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = c.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = c.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = c.TRAN_NO\r\n$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\n--Execution time: 37.92s\r\n/******************************************************************************************************************************************/\r\n/* END OF SCRIPT G - Mapping updated UCIDs and other details in the consolidated base table formed in Script F                                  *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\nINSERT INTO DEVELOPMENT.$[vCBI]\r\n\t (\r\n\t\tSELECT a.tran_date, a.location_no, a.till_no, a.tran_no,\r\n\t\t\t\ta.tran_time,a.tran_ind,a.tran_type,a.tran_qty,\r\n\t\t\t\ta.tran_selling ,a.tran_selling_vat_excl ,--p2\r\n\t\t\t\ta.discount_selling,a.DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no,\r\n\t\t\t\ta.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\ta.TIME_OF_DAY_CODE,a.item_seq_no,\r\n\t\t\t\ta.item_no, a.item_level1_no, a.ITEM_SHORT_DESC,a.item_tran_type,\r\n\t\t\t\ta.item_tran_qty,a.item_tran_selling,a.ITEM_TRAN_SELLING_VAT_EXCL,\r\n\t\t\t\ta.item_discount_selling,a.ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.WASTE_DISCOUNT_PERC,a.vat_rate_perc,\r\n\t\t\t\ta.colour_family,a.BUSINESS_UNIT_NO,a.BUSINESS_UNIT_NAME,a.GROUP_NO,a.GROUP_NAME,\r\n\t\t\t\ta.SUBGROUP_NO,a.SUBGROUP_NAME, a.DEPARTMENT_NO,a.DEPARTMENT_NAME,a.CLASS_NO,a.CLASS_NAME,a.SUBCLASS_NO,a.SUBCLASS_NAME,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY1 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY2 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY3 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY4 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY5 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY6,\r\n\t\t\t\ta.SALES_CHANNEL_CODE,\r\n\t\t\t\ta.area_no,a.area_name,a.region_no,a.region_name,a.location_name,a.alternate_location_hierarchy1,\r\n\t\t\t\ta.alternate_location_hierarchy2, a.alternate_location_hierarchy3 , a.alternate_location_hierarchy4,\r\n\t\t\t\ta.alternate_location_hierarchy5 , a.alternate_location_hierarchy6,\r\n\t\t\t\ta.discount_code,a.RMS_PROMOTION_NO,a.ATG_PROMOTION_NO,a.ATG_LOYALTY_PROMOTION_NO,a.EOL_PROMOTION_NO,\r\n\t\t\t\ta.rms_discount_selling,  a.RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.loyalty_discount_selling, a.LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.atg_discount_selling,  a.ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.atg_loyalty_discount_selling, a.ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.eol_discount_selling, a.EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.wfs_discount_selling,  a.WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.staff_discount_selling, a.STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.VOUCHER_DISCOUNT_SELLING,\r\n                a.VOUCHER_DISCOUNT_SELLING_VAT_EXCL,\r\n\t\t\t\ta.other_discount_selling,a.OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.MARKDOWN_SEQ_NO,a.store_card_tender_count,a.store_card_tran_tender_selling,\r\n\t\t\t\ta.credit_card_tender_count, a.credit_card_tran_tender_selling,\r\n\t\t\t\ta.gift_card_tender_count, a.gift_card_tran_tender_selling,\r\n\t\t\t\ta.alien_card_tender_count, a.alien_card_tran_tender_selling,\r\n\t\t\t\ta.cash_tender_ind, a.cash_tran_tender_selling,\r\n\t\t\t\ta.other_tender_count, a.other_tran_tender_selling,\r\n\t\t\t\t--a.voucher_no,\r\n\t\t\t\ta.voucher_tender_count, a.voucher_tran_tender_selling,\r\n\t\t\t\tnvl(b.ucid ,'No Value') as ucid,\r\n\t\t\t\t--case when b.ucid_type in ('KNOWN') AND e.customer_current_tier_code IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t--\twhen b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t--\tWHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t--\tWHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\t--\telse 'CASH'\r\n\t\t\t\t--\tEND AS CUSTOMER_COHORT,--p2\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fy IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FY,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fh IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FH,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fq IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FQ,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fm IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FM,\r\n\t           'No Value' as customer_cohort_fw,\r\n\t\t\t\tnvl(b.age_td,0) as age,\r\n\t\t\t\tcase when b.age_fy between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fy between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fy between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fy between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fy>=55 then '55+' else 'No Value' end as AGE_BAND_FY,--p2\r\n                case when b.age_fh between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fh between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fh between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fh between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fh>=55 then '55+' else 'No Value' end as AGE_BAND_FH,--p2\r\n                case when b.age_fq between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fq between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fq between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fq between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fq>=55 then '55+' else 'No Value' end as AGE_BAND_FQ,--p2\r\n\t\t\t\tcase when b.age_fm between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fm between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fm between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fm between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fm>=55 then '55+' else 'No Value' end as AGE_BAND_FM,--p2\r\n\t\t\t\tcase when b.age_fw between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fw between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fw between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fw between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fw>=55 then '55+' else 'No Value' end as AGE_BAND_FW,--p2\r\n\t\t\t\tcase when b.gender='u' or b.gender is null then 'NO VALUE' else b.gender end as gender,\r\n\t\t\t\tcase when b.derived_race='RACE UNKNOWN' or b.derived_race is null then 'NO VALUE' else b.derived_race end as derived_race,\r\n\t\t\t\tcase WHEN b.ACQUISITION_DATE IS NULL THEN '1999-01-01'\r\n\t\t\t\t\t WHEN b.ACQUISITION_DATE<'1999-01-01' THEN '1999-01-01' -- THE FIRST DATE IN CUST_BASKET IS 1999-06-04\r\n\t                 WHEN b.ACQUISITION_DATE>=(CURRENT_DATE+1) THEN CURRENT_DATE\r\n\t\t\t\tELSE b.ACQUISITION_DATE END AS acquisition_date,\r\n\t\t\t\ta.HOUSEHOLD_INCOME_BAND_FY, a.MACRO_SEGMENT_FY , a.MICRO_SEGMENT_FY ,\r\n\t\t\t\ta.EMPLOYEE_STATUS_CODE, -- @adj sep\r\n\t\t\t\ta.store_card_count,             --p2\r\n\t\t\t\ta.wrewards_card_count,          --p2\r\n\t\t\t\ta.myschool_card_count,          --p2\r\n\t\t\t\ta.credit_card_count,            --p2\r\n\t\t\t\ta.littleworld_membership_count, --p2\r\n\t\t\t\ta.vitality_membership_count,    --p2\r\n\t\t\t\ta.non_rewards_card_count       --p2\r\n\t\t\t\t,nvl(a.UDA_104_VALUE_NO,'0') as UDA_104_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_104_VALUE_DESC,'No Value') as UDA_104_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_300_VALUE_NO,'0') as UDA_300_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_300_VALUE_DESC,'No Value') as UDA_300_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_306_VALUE_NO,'0') as UDA_306_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_306_VALUE_DESC,'No Value') as UDA_306_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_310_VALUE_NO,'0') as UDA_310_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_310_VALUE_DESC,'No Value') as UDA_310_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_316_VALUE_NO,'0') as UDA_316_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_316_VALUE_DESC,'No Value') as UDA_316_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_320_VALUE_NO,'0') as UDA_320_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_320_VALUE_DESC,'No Value') as UDA_320_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_327_7703_7707_7708_VALUE_NO,'0') as UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_327_7703_7707_7708_VALUE_DESC,'No Value') as UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_2301_VALUE_NO,'0') as UDA_2301_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_2301_VALUE_DESC,'No Value') as UDA_2301_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_7702_VALUE_NO,'0') as UDA_7702_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_7702_VALUE_DESC,'No Value') as UDA_7702_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_7704_VALUE_NO,'0') as UDA_7704_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_7704_VALUE_DESC,'No Value') as UDA_7704_VALUE_DESC\r\n\t\t\t\t,a.VITALITY_UDA_VALUE_NO,a.wrewards_swipe_ind, a.myschool_swipe_ind,a.VMP_IND,\r\n\t\t\t\ta.basket_id,b.effective_from_date as LAST_UPDATED_DATE\r\n\t\t\t\t--a.LOYALTY_PROMOTION_NO,  --p2 not there in excel sheet\r\n\t\t\t\t--a.WFS_PROMOTION_NO,      --p2  not there in excel sheet\r\n\t\t\t\t--a.STAFF_PROMOTION_NO,    --p2  not there in excel sheet\r\n\t\t\t\t--a.FRANCHISE_PROMOTION_NO ,--p2  not there in excel sheet\r\n\t\tfrom\r\n\t\t\tDEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay] a\r\n\t\t\tleft join\r\n\t\t\tdevelopment.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay] b    --BC UCID gets updated (TTCI)\r\n\t\t\ton a.tran_date = b.tran_date\r\n\t\t\tand a.location_no = b.location_no\r\n\t\t\tand a.till_no = b.till_no\r\n\t\t\tand a.tran_no = b.tran_no\r\n\t\t   \t)$[vLimit];\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_wise$[vDayName];\r\nDROP TABLE IF EXISTS #wns_kr_cust_card_mapping;\r\nDROP TABLE IF EXISTS #wns_kr_tier_year_wise;\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\nDROP TABLE IF EXISTS development.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay];\r\ngrant select on table DEVELOPMENT.$[vCBI] to public ;", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "bar_table_test_cbt"], "unique_id": "model.my_new_project.bar_table_test_cbt", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/bar_table_test_cbt.sql", "original_file_path": "models/example/bar_table_test_cbt.sql", "name": "bar_table_test_cbt", "resource_type": "model", "alias": "bar_table_test_cbt", "checksum": {"name": "sha256", "checksum": "873d3e9ba310face9a65709c39a994dbcc5182f59d1c9627bf9a5ab1e03fea6f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/bar_table_test_cbt.sql", "deferred": false, "compiled_sql": "/*\r\nDEMO_TABLE = DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n#TT_TABLE = DEVELOPMENT.WNS_AS_DD_TENDER_TYPE_MAPPING_02FEB\r\nBASKET_MAPPING = DEVELOPMENT.CUST_BASKET_MAPPING\r\nlast_updated_date = '2015-01-01' = {0} \r\nFinYearFinWeek = {1} \r\nFinYearFinWeek - 1 = {3}\r\ncust_basket_item_table_name ={4}\r\nlimit = {5}\r\ncomment = {6}\r\n*/\r\n\r\n/*0} last_updated_date '2021-01-04' , max last date updated\r\n{1} DEVELOPMENT.CUST_BASKET_ITEM_{1}, DEVELOPMENT.CUST_BASKET_ITEM_Thursday\r\n{2} fin year month and day, if run today, TEMP_CONS_CUST_BASKET_ITEM_202127_Thursday\r\n{4} cust_basket_item  --is name of table\r\n{5} limit\r\n{6} some comment */\r\n\r\n--WbVarDef -variable=vlast_updated_date    -query= \"select max(last_updated_date) from analytics.fnd_cust_basket\";   --{0}\r\nWbVarDef vlast_updated_date  = '2020-01-01' ;   --{0}\r\nWbVarDef -variable=vDayName              -query= \"select to_char(current_date-1,'Day')\";                          --{1}\r\nWbVarDef -variable=vFinYearWeekNoDay     -query= \"Select fin_year_no||fin_week_no from analytics.fnd_calendar where calendar_date = current_date-1\";   --{2}\r\nWbVarDef vCBI                  = 'cust_basket_item';                                                                                     --{4]\r\nWbVarDef vLimit                = '';   --{5}\r\nWbVarDef vComment              = '';   --{6}\r\n\r\n/*current_date_$[vlast_updated_date];\r\nselect $[vDayName];\r\nselect $[vFinYearWeekNoDay];\r\nselect $[vCBI];\r\nselect $[vLimit];\r\nselect $[vComment];*/\r\n\r\n/*\r\n-- ANALYTICS.FND_CUSTOMER\r\n-- ANALYTICS.FND_CUSTOMER_MASTER\r\n-- ANALYTICS.FND_CUST_BASKET\r\n-- ANALYTICS.FND_CUST_FV_VOUCHER\r\n-- ANALYTICS.FND_CUSTOMER_PORTFOLIO\r\n-- ANALYTICS.FND_CUST_BASKET_TENDER\r\n-- ANALYTICS.FND_CALENDAR\r\n-- ANALYTICS.FND_LOCATION\r\n-- ANALYTICS.FND_WOD_TIER_MTH_DETAIL\r\n-- ANALYTICS.FND_CUST_BASKET_ITEM\r\n-- ANALYTICS.FND_ITEM\r\n-- ANALYTICS.FND_CUST_BASKET_AUX\r\n-- DEVELOPMENT.WNS_AS_DD_TENDER_TYPE_MAPPING_02FEB (fixed, needs t\r\n-- DEVELOPMENT.CUST_BASKET_MAPPING\r\n-- DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n-- DEVELOPMENT.FND_LST_EA_CODES\r\n-- DEVELOPMENT.FND_ROG_SOC_LOCATION\r\n-- analytics.FND_CUSTOMER_CARD\r\n-- DEVELOPMENT.FND_CUST_DERIVED_RACE_REF\r\n*/\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - Collating Demographic Details ***********************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- CREATE A NEW REFTABLE FOR THE SEP END RUN\r\nCREATE TABLE #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName] AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;\r\n-- Execution time: 8.44s\r\n\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_INFO_$[vDayName] AS (\r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName]\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE)$[vLimit];\r\n-- Execution time: 16.48s\r\n\r\n--ADDING ALL THE REQUIRED INFORMATION IN ONE TABLE(HHI+DEMOGRAPHICS)\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_INFO_$[vDayName] A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY)$[vLimit];\r\n-- Execution time: 35.36s\r\n\r\n--CREATING TABLE TO DERIVE AGE AND GENDER FROM ID INFORMATION\r\nCREATE TABLE #wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))))$[vLimit];\r\n-- Execution time: 8.34s\r\n\r\n---AGE FROM ID INFORMATION\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO)$[vLimit];\r\n-- Execution time: 21.33s\r\n\r\n--------REMOVING DUPLICATES AT UCID, SUBSCRIBER_KEY LEVEL\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 47.39s\r\n\r\n--------REMOVING DUPLICATES AT UCID\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 15.12s\r\n\r\n--FINAL TABLE -- CONSIDERING THE UCID WITH LATEST MODIFIED INFORMATION\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName]\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1)$[vLimit];\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName];\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_INFO_$[vDayName];\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS #wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP3;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT B - Creating base table from CUST_BASKET data using loyalty, promotional, voucher & calendar details ****************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- Snapshot of the CUST_BASKET table\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE, TRAN_TIME, TRAN_TYPE, TRAN_SELLING, DISCOUNT_SELLING, WASTE_IND,\r\n\t\t\t\tLOYALTY_WW_SWIPE_NO, LOYALTY_EXT_SWIPE_NO, CUSTOMER_NO,VMP_IND,\r\n\t\t\t\tROW_NUMBER() OVER(PARTITION BY TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO ORDER BY LAST_UPDATED_DATE DESC) AS LATEST_FLAG\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]') $[vLimit];\r\n-- Execution time: 1m 22s\r\n\r\n-- REMOVING OLDER ROWS OF A TRANSACTION\r\nDELETE FROM #wns_nm_DD_FND_CUST_BASKET_TEMP WHERE LATEST_FLAG>1;\r\n-- 0 rows affected\r\n-- Execution time: 0.18s\r\n\r\ndrop table if exists development.wns_adj_new_pos_logic_$[vDayName] ;\r\ncreate table development.wns_adj_new_pos_logic_$[vDayName]\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect  a.LOCATION_NO, a.TILL_NO, a.TRAN_NO, a.TRAN_DATE, a.TRAN_TIME,  TRAN_SELLING, DISCOUNT_SELLING, WASTE_IND,\r\n                LOYALTY_WW_SWIPE_NO, LOYALTY_EXT_SWIPE_NO, CUSTOMER_NO,VMP_IND,\r\n--case when item_tran_type  in ('R','V','Q','S') then item_tran_type else tran_type end as tran_type_new,\r\nnvl(item_tran_type,tran_type) as tran_type\r\nfrom #wns_nm_DD_FND_CUST_BASKET_TEMP A\r\nleft join (select TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO,\r\n\t\t\t\tcase when item_TRAN_TYPE in ('R','Q','V') then item_TRAN_TYPE else null end as item_TRAN_TYPE\r\n\t\t\tfrom(\r\n\t\t\t\tselect TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO,\r\n\t\t\t\tcount(distinct TRAN_TYPE) as item_TRAN_TYPE_count,\r\n\t\t\t\tmax( TRAN_TYPE) as item_TRAN_TYPE\r\n\t\t\t\tfrom analytics.fnd_cust_basket_item\r\n\t\t\t\tgroup by 1,2,3,4\r\n                ) where item_TRAN_TYPE_count=1\r\n           ) B\r\n           ON A.TRAN_DATE=B.TRAN_DATE\r\n           AND A.LOCATION_NO=B.LOCATION_NO\r\n           AND A.TILL_NO=B.TILL_NO\r\n           AND A.TRAN_NO=B.TRAN_NO;\r\n\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID\r\n    DISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n        SELECT A.LOCATION_NO ,\r\n                A.TILL_NO ,\r\n                A.TRAN_NO ,\r\n                A.TRAN_DATE ,\r\n                A.TRAN_TIME ,\r\n                A.TRAN_TYPE ,\r\n                A.WASTE_IND ,\r\n                A.TRAN_SELLING ,\r\n                A.DISCOUNT_SELLING ,\r\n                A.LOYALTY_WW_SWIPE_NO ,A.LOYALTY_EXT_SWIPE_NO ,\r\n                A.CUSTOMER_NO ,A.VMP_IND,\r\n               (CASE WHEN A.TRAN_TYPE='S' THEN 1 WHEN A.TRAN_TYPE='V' THEN -1 ELSE 0 END) AS TRAN_IND,\r\n                B.UCID\r\n        FROM development.wns_adj_new_pos_logic_$[vDayName] A\r\n        LEFT JOIN (SELECT TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO, MAX(PERM_UCID_HASHED) as UCID FROM DEVELOPMENT.CUST_BASKET_MAPPING\r\n                    GROUP BY 1,2,3,4) B\r\n        ON A.TRAN_DATE=B.TRAN_DATE\r\n           AND A.LOCATION_NO=B.LOCATION_NO\r\n           AND A.TILL_NO=B.TILL_NO\r\n           AND A.TRAN_NO=B.TRAN_NO)$[vLimit];\r\n-- Execution time: 52.55s\r\ndrop table if exists development.wns_adj_new_pos_logic_$[vDayName] ;\r\n\r\n\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP DISTSTYLE ALL AS (\r\n\tSELECT perm_ucid_hashed as UCID,UCID_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 18.34s\r\n\r\n-- ATTACH UCID_TYPE TO THE DATA\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID_TYPE\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TRAN_TIME, A.TRAN_TYPE, A.WASTE_IND,\r\n\t\t\t\tA.LOYALTY_WW_SWIPE_NO, A.LOYALTY_EXT_SWIPE_NO, A.CUSTOMER_NO,A.VMP_IND, A.TRAN_IND, A.UCID, A.TRAN_SELLING,\r\n\t\t\t\tA.DISCOUNT_SELLING, C.AGE_YEARS AS AGE, C.DERIVED_RACE AS RACE, C.GENDER AS GENDER,\r\n\t\t\t\tC.HOUSEHOLD_INCOME_SUBRANGE AS HOUSEHOLD_INCOME, B.UCID_TYPE\r\n\t\tFROM #wns_nm_DD_CUST_BASKET_UCID A\r\n\t\tLEFT JOIN #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP B\r\n\t\tON A.UCID=B.UCID\r\n\t\tLEFT JOIN DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] C\r\n\t    ON A.UCID=C.UCID)$[vLimit];\r\n-- Execution time: 58.12s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_FV_VOUCHER_TEMP\r\n\tDISTKEY(REDEEMED_DATE) COMPOUND SORTKEY(REDEEMED_DATE, REDEEMED_STORE, REDEEMED_TILL_NO, REDEEMED_TRAN_NO) AS (\r\n\t\tSELECT REDEEMED_DATE, REDEEMED_STORE, REDEEMED_TILL_NO, REDEEMED_TRAN_NO,\r\n\t\t\t\tCOUNT(DISTINCT VOUCHER_NO) AS VOUCHER_COUNT,\r\n\t\t\t\tSUM(REDEEMED_AMOUNT) AS VOUCHER_DISCOUNT\r\n\t\tFROM ANALYTICS.FND_CUST_FV_VOUCHER\r\n\t\tWHERE REDEEMED_DATE IS NOT NULL\r\n\t\t\tAND last_updated_date = '$[vlast_updated_date]'\r\n\t\tGROUP BY 1,2,3,4 )$[vLimit];\r\n-- Execution time: 13.51s\r\n\r\n-- ATTACH VOUCHER INFORMATION\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tCASE WHEN B.REDEEMED_DATE IS NULL THEN 0 ELSE 1 END AS VOUCHER_FLAG,\r\n\t\t\t\tVOUCHER_COUNT, VOUCHER_DISCOUNT\r\n\t\tFROM #wns_nm_DD_CUST_BASKET_UCID_TYPE A\r\n\t\tLEFT JOIN #wns_nm_DD_FND_FV_VOUCHER_TEMP B\r\n\t\t\t\tON A.TRAN_DATE=B.REDEEMED_DATE\r\n\t\t\t\tAND A.LOCATION_NO=B.REDEEMED_STORE\r\n\t\t\t\tAND A.TILL_NO=B.REDEEMED_TILL_NO\r\n\t\t\t\tAND A.TRAN_NO=B.REDEEMED_TRAN_NO)$[vLimit];\r\n-- Execution time: 52.41s\r\n\r\nCREATE TABLE #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT UCID, MIN(PORTFOLIO_CREATE_DATE) AS ACQUISITION_DATE\r\n\t\tFROM (SELECT B.UCID, B.CUSTOMER_NO, C.PORTFOLIO_CREATE_DATE\r\n\t\t\t\tFROM (SELECT perm_ucid_hashed as UCID, CUSTOMER_NO\r\n\t\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING GROUP BY 1,2) B -- CHANGE HERE TO DEVELOPMENT.AJL_DIM_CUSTOMER_CARD_MAPPING_NO_CUTOFF_202013_V2 [NM]\r\n\t\t\t\tLEFT JOIN (SELECT CUSTOMER_NO, PORTFOLIO_CREATE_DATE, PRODUCT_CODE_NO\r\n\t\t\t\t\t\t\tFROM ANALYTICS.FND_CUSTOMER_PORTFOLIO\r\n\t\t\t\t\t\t\tWHERE PRODUCT_CODE_NO IN ('0','1','2','3','4','5','6','7','8','9','10','11','15','16','19','20','21','28') ) C --TO BE CHANGED [NM]\r\n\t\t\t\tON B.CUSTOMER_NO=C.CUSTOMER_NO) D\r\n\t\tGROUP BY 1)$[vLimit];\r\n-- Execution time: 15.71s\r\n\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TRAN_TIME, A.TRAN_TYPE, A.TRAN_SELLING, A.DISCOUNT_SELLING, A.WASTE_IND,\r\n\t\t\t\tA.LOYALTY_WW_SWIPE_NO, A.LOYALTY_EXT_SWIPE_NO, A.CUSTOMER_NO, A.VMP_IND,A.TRAN_IND, A.UCID, A.UCID_TYPE, A.AGE, A.RACE, A.GENDER,\r\n\t\t\t\tA.HOUSEHOLD_INCOME, A.VOUCHER_FLAG, A.VOUCHER_COUNT, A.VOUCHER_DISCOUNT,\r\n\t\t\t\tCASE WHEN ACQUISITION_DATE IS NULL THEN '1999-01-01'\r\n\t\t\t\t\tWHEN ACQUISITION_DATE<'1999-01-01' THEN '1999-01-01' -- THE FIRST DATE IN CUST_BASKET IS 1999-06-04\r\n\t\t\t\t\tWHEN ACQUISITION_DATE>=(CURRENT_DATE+1) THEN CURRENT_DATE\r\n\t\t\t\t\t\tELSE ACQUISITION_DATE END AS ACQUISITION_DATE\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG A\r\n\t\tLEFT JOIN #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ B\r\n\t\t\t\tON A.UCID=B.UCID)$[vLimit];\r\n-- Execution time: 57.6s\r\n\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT CARD_NO, CUSTOMER_NO\r\n\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 1m 0s\r\n\r\n-- ATTACH CUSTOMER NO BASED ON LOYALTY_WW_SWIPE_NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2_1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*, B.CUSTOMER_NO AS C2_CUSTOMER_NO_1\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ A\r\n\t\tLEFT JOIN #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB B\r\n\t\t\t\tON A.LOYALTY_WW_SWIPE_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 54.67s\r\n\r\n-- ATTACH CUSTOMER NO BASED ON LOYALTY_EXT_SWIPE_NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2_2\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,B.CUSTOMER_NO AS C2_CUSTOMER_NO_2\r\n\t\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ A\r\n\t\t\tLEFT JOIN #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB B\r\n\t\t\tON A.LOYALTY_EXT_SWIPE_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 49.84s\r\n\r\n-- PICKING THE AVAILABLE CUSTOMER NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tCASE WHEN A.C2_CUSTOMER_NO_1 IS NULL THEN B.C2_CUSTOMER_NO_2 ELSE A.C2_CUSTOMER_NO_1 END AS C2_CUSTOMER_NO,\r\n\t\t\t\tCASE WHEN A.LOYALTY_WW_SWIPE_NO IS NULL THEN 0 ELSE 1 END AS WREWARDS_SWIPE_IND,\r\n\t\t\t\tCASE WHEN A.LOYALTY_EXT_SWIPE_NO IS NULL THEN 0 ELSE 1 END AS MYSCHOOL_SWIPE_IND\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_C2_1 A\r\n\t\tLEFT JOIN #wns_nm_DD_CA_TRAN_LEVEL_C2_2 B\r\n\t\t\t\tON A.TRAN_DATE=B.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO=B.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO=B.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO=B.TRAN_NO)$[vLimit];\r\n-- Execution time: 1m 1s\r\n\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN LOYALTY_WW_SWIPE_NO;\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN LOYALTY_EXT_SWIPE_NO;\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN C2_CUSTOMER_NO_1;\r\n-- Total script execution time: 0.06s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE,\r\n\t\t\t\tCASE WHEN TENDER_TYPE_DETAIL_CODE IS NULL THEN 'NULL_VALUE' ELSE TENDER_TYPE_DETAIL_CODE END AS TENDER_TYPE_DETAIL_CODE1,\r\n\t\t\t\tTENDER_NO, TENDER_SELLING, CHANGE_SELLING\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_TENDER\r\n\t\tGROUP BY 1,2,3,4,5,6,7,8)$[vLimit];\r\n-- Execution time: 1m 12s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUSTOMER_CARD_TEMP DISTSTYLE ALL AS (\r\n\tSELECT CARD_NO,\r\n\t\t\tCASE WHEN PRODUCT_CODE_NO IN ('1','2','3','4','5','6','7','21' ) THEN 'SC'\r\n\t\t\t\t\tWHEN PRODUCT_CODE_NO ='20' THEN 'CC' END AS STORE_CC_FLAG\r\n\tFROM analytics.FND_CUSTOMER_CARD)$[vLimit];\r\n-- Execution time: 59.26s\r\n\r\ndelete from #wns_nm_DD_FND_CUSTOMER_CARD_TEMP where STORE_CC_FLAG is null;\r\n-- 8,924,491 rows affected\r\n-- Execution time: 4.76s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE,\r\n\t\t\t\tTENDER_TYPE_DETAIL_CODE1 AS TENDER_TYPE_DETAIL_CODE,\r\n\t\t\t\tTENDER_NO, TENDER_SELLING, CHANGE_SELLING, STORE_CC_FLAG\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP A\r\n\t\tLEFT JOIN #wns_nm_DD_FND_CUSTOMER_CARD_TEMP B\r\n\t\t\t\tON A.TENDER_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 31.72s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TENDER_TYPE_DETAIL_CODE, A.TENDER_NO, A.TENDER_SELLING, A.CHANGE_SELLING, A.STORE_CC_FLAG,\r\n\t\t\t\tB.TENDER_TYPE_FOR_BASE_TABLE,\r\n\t\t\t\tCASE WHEN STORE_CC_FLAG IS NULL\r\n\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\tCASE WHEN TENDER_TYPE_FOR_BASE_TABLE='WW VISA CARD' THEN 'CC'\r\n\t\t\t\t\t\t\t WHEN TENDER_TYPE_FOR_BASE_TABLE='WW STORE CARD' THEN 'SC'\r\n\t\t\t\t\t\t\t ELSE TENDER_TYPE_FOR_BASE_TABLE\r\n\t\t\t\t\t\tEND\r\n\t\t\t\t\t\tELSE STORE_CC_FLAG\r\n\t\t\t\t\tEND AS TENDER_TYPE_FOR_BASE_TABLE1\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG A\r\n\t\tLEFT JOIN (SELECT CASE WHEN TENDER_TYPE_DETAIL_CODE IS NULL THEN 'NULL_VALUE' ELSE TENDER_TYPE_DETAIL_CODE END AS TENDER_TYPE_DETAIL_CODE1,\r\n\t\t\t\t\t\t\tTENDER_TYPE_FOR_BASE_TABLE FROM DEVELOPMENT.SD_TENDER_TYPE_MAPPING_06APR) B\r\n\t\t\t\tON A.TENDER_TYPE_DETAIL_CODE=B.TENDER_TYPE_DETAIL_CODE1)$[vLimit];\r\n-- Execution time: 32.8s\r\n\r\nCREATE TABLE #wns_nm_WNS_SD_TEMP1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT TRAN_NO, LOCATION_NO, TILL_NO , TRAN_DATE,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1='SC' THEN TENDER_NO END) AS STORE_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='SC' THEN TENDER_SELLING END) AS STORE_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Gift Card' THEN TENDER_NO END) AS GIFT_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Gift Card' THEN TENDER_SELLING END) AS GIFT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Voucher' THEN TENDER_NO END) AS VOUCHER_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Voucher' THEN TENDER_SELLING END) AS VOUCHER_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Alien Bank Card' THEN TENDER_NO END) AS ALIEN_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Alien Bank Card' THEN TENDER_SELLING END) AS ALIEN_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='CC' THEN TENDER_NO END) AS CREDIT_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='CC' THEN TENDER_SELLING END) AS CREDIT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Cash' THEN 1 ELSE 0 END) AS CASH_TENDER_IND,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Cash' THEN TENDER_SELLING-CHANGE_SELLING END) AS CASH_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Other' THEN TENDER_NO END) AS OTHER_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Other' THEN TENDER_SELLING END) AS OTHER_TRAN_TENDER_SELLING\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE\r\n\t\tGROUP BY 1,2,3,4)$[vLimit];\r\n-- Execution time: 2m 57s\r\n\r\nCREATE TABLE #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,FIN_YEAR_NO, FIN_HALF_NO, FIN_QUARTER_NO, FIN_MONTH_NO, FIN_WEEK_NO, FIN_DAY_NO, SEASON_NO\r\n\t\t        ,CASE WHEN DAY_NAME IN ('SATURDAY','SUNDAY') THEN 2   --added the weekday_weekend_code - new column\r\n\t\t\t\t ELSE 1 END AS WEEKDAY_WEEKEND_CODE,\r\n\t\t\t\tC.GIFT_CARD_TENDER_COUNT, C.GIFT_CARD_TRAN_TENDER_SELLING, C.VOUCHER_TENDER_COUNT, C.VOUCHER_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.ALIEN_CARD_TENDER_COUNT, C.ALIEN_CARD_TRAN_TENDER_SELLING, C.CASH_TENDER_IND, C.CASH_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.STORE_CARD_TENDER_COUNT, C.STORE_CARD_TRAN_TENDER_SELLING, C.CREDIT_CARD_TENDER_COUNT, C.CREDIT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.OTHER_TENDER_COUNT, C.OTHER_TRAN_TENDER_SELLING\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_C2 A\r\n\t\tLEFT JOIN ANALYTICS.FND_CALENDAR B\r\n\t\t\t\tON A.TRAN_DATE=B.CALENDAR_DATE\r\n\t\tLEFT JOIN #wns_nm_WNS_SD_TEMP1 C\r\n\t\t\t\tON A.TRAN_DATE=C.TRAN_DATE\r\n\t\t\t\tAND A.LOCATION_NO=C.LOCATION_NO\r\n\t\t\t\tAND A.TILL_NO=C.TILL_NO\r\n\t\t\t\tAND A.TRAN_NO=C.TRAN_NO)$[vLimit];\r\n-- Execution time: 1m 23s\r\n-- 60GB\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName];\r\ncreate table DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName]\r\ndiststyle all as\r\n(select * from #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ) $[vLimit];\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID_TYPE;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_FV_VOUCHER_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2_1;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2_2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUSTOMER_CARD_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE;\r\nDROP TABLE IF EXISTS #wns_nm_WNS_SD_TEMP1;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT B - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************\r\n--TIER START\r\n*******************************************************************/\r\n---======================================================  START tier ====================================================\r\n-- year ,half_year,fin_qy,fin_month_no based tier calculation and creating a single table\r\n--  ''development.wns_adj_tier_wise$[vDayName]''\r\n\r\nDROP TABLE IF EXISTS development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName];\r\n\r\nCREATE TABLE development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] AS\r\n  SELECT * FROM (\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+01 AS FIN_MONTH, MONTH_01_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+02 AS FIN_MONTH, MONTH_02_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+03 AS FIN_MONTH, MONTH_03_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+04 AS FIN_MONTH, MONTH_04_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+05 AS FIN_MONTH, MONTH_05_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+06 AS FIN_MONTH, MONTH_06_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+07 AS FIN_MONTH, MONTH_07_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+08 AS FIN_MONTH, MONTH_08_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+09 AS FIN_MONTH, MONTH_09_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+10 AS FIN_MONTH, MONTH_10_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+11 AS FIN_MONTH, MONTH_11_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+12 AS FIN_MONTH, MONTH_12_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL) $[vLimit];\r\n\r\n\r\nDROP TABLE if exists development.wns_kr_tier_year_wise_$[vDayName];\r\n\r\nCreate Table development.wns_kr_tier_year_wise_$[vDayName] diststyle all as\r\n(select *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as numeric(5,0)) as fin_year_no,nvl(tier,0) as tier_, b.perm_ucid_hashed as UCID\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no ORDER BY tier_ DESC) AS MAX_TIER_RANK\r\n      from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b\r\n      on a.customer_no = b.customer_no\r\n      where mod(FIN_MONTH,100) = 12\r\n      )\r\nwhere MAX_TIER_RANK = 1\r\n);\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_fh_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fh_wise_UCID_$[vDayName] as\r\nselect *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fh, b.perm_ucid_hashed as UCID\r\n            ,case when mod(fin_month,100)/2 = 1 then 1\r\n                  when mod(fin_month,100)/2 = 2 then 2\r\n             else '0'\r\n             end as half_year\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,half_year ORDER BY tier_fh DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n      where half_year in (1,2)\r\n      )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null\r\n;\r\n\r\n\r\nDrop table IF Exists development.wns_adj_tier_fq_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fq_wise_UCID_$[vDayName] as\r\nselect *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fq, b.perm_ucid_hashed as UCID\r\n            ,case when mod(fin_month,100)/3 = 1 then 1\r\n                  when mod(fin_month,100)/3 = 2 then 2\r\n                  when mod(fin_month,100)/3 = 3 then 3\r\n                  when mod(fin_month,100)/3 = 4 then 4\r\n             else '0'\r\n             end as quarter\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,quarter ORDER BY tier_fq DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n      where quarter in (1,2,3,4)\r\n      )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null\r\n;\r\n\r\n\r\n\r\nDrop table IF Exists development.wns_adj_tier_fm_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fm_wise_UCID_$[vDayName]\r\ndiststyle all as\r\nselect UCID,fin_year_no,fin_month_no,tier_fm\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fm, b.perm_ucid_hashed as UCID\r\n           ,mod(FIN_MONTH,100) as fin_month_no\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,fin_month_no ORDER BY tier_fm DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n        )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null ;\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_wise$[vDayName];\r\nCREATE TABLE IF NOT EXISTS development.wns_adj_tier_wise$[vDayName]\r\n(\r\n                ucid VARCHAR(100)   ENCODE lzo\r\n                ,fin_year_no smallint   ENCODE az64\r\n                ,fin_month_no smallint   ENCODE az64\r\n                ,tier_fm smallint   ENCODE az64\r\n                ,tier_fq smallint   ENCODE az64\r\n                ,tier_fh smallint   ENCODE az64\r\n                ,tier_fy smallint   ENCODE az64\r\n)\r\nDISTSTYLE ALL\r\n;\r\n\r\n\r\ngrant select on table development.wns_adj_tier_wise$[vDayName] to public;\r\n\r\n\r\ninsert into development.wns_adj_tier_wise$[vDayName] (\r\nselect\r\n   A.ucid,A.fin_year_no,A.fin_month_no,A.tier_fm\r\n   ,  b.tier_fq,\r\n   C.tier_fh,\r\n   D.tier_ as tier_fy\r\nfrom\r\n   (\r\n      select\r\n         ucid,\r\n         fin_year_no,\r\n         fin_month_no,\r\n         tier_fm,\r\n         case\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '1',\r\n                  '2',\r\n                  '3'\r\n               )\r\n            then\r\n               1\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '4', '5', '6'\r\n               )\r\n            then\r\n               2\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '7', '8', '9'\r\n               )\r\n            then\r\n               3\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '10', '11', '12'\r\n               )\r\n            then\r\n               4\r\n         end\r\n         as fin_qy,\r\n         case\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '1', '2', '3', '4', '5', '6'\r\n               )\r\n            then\r\n               1\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '7', '8', '9', '10', '11', '12'\r\n               )\r\n            then\r\n               2\r\n         end\r\n         as fin_hy\r\n      from\r\n         development.wns_adj_tier_fm_wise_UCID_$[vDayName]\r\n   )\r\n   A\r\n   left join\r\n      development.wns_adj_tier_fq_wise_UCID_$[vDayName] B\r\n      on A.fin_year_no = B.fin_year_no\r\n      and A.fin_qy = B.quarter\r\n      and A.ucid = b.ucid\r\n   LEFT JOIN\r\n      development.wns_adj_tier_fh_wise_UCID_$[vDayName] C\r\n      on A.fin_year_no = C.fin_year_no\r\n      and A.fin_hy = C.half_year\r\n      and A.ucid = C.ucid\r\n   LEFT JOIN\r\n      development.wns_kr_tier_year_wise_$[vDayName] D\r\n      on A.fin_year_no = D.fin_year_no\r\n      and A.ucid = D.ucid  where A.fin_year_no >='2018');\r\n\r\n\r\ndrop table if exists development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fm_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fq_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fh_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_kr_tier_year_wise_$[vDayName];\r\n\r\n---=============================================================  END tier ====================================================\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT C - Preparing Tier Details *******************************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- EXTRACT RAW DATA FROM THE TIER TABLE AND PIVOT THE MONTHLY TIER COLUMNS IN TO A SINGLE COLUMN\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_LAST_TIER_RAW AS\r\n  SELECT * FROM (\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+01 AS FIN_MONTH, MONTH_01_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+02 AS FIN_MONTH, MONTH_02_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+03 AS FIN_MONTH, MONTH_03_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+04 AS FIN_MONTH, MONTH_04_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+05 AS FIN_MONTH, MONTH_05_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+06 AS FIN_MONTH, MONTH_06_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+07 AS FIN_MONTH, MONTH_07_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+08 AS FIN_MONTH, MONTH_08_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+09 AS FIN_MONTH, MONTH_09_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+10 AS FIN_MONTH, MONTH_10_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+11 AS FIN_MONTH, MONTH_11_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+12 AS FIN_MONTH, MONTH_12_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL)$[vLimit];\r\n-- Execution time: 20.28s\r\n\r\n-- GENERATE PREVIOUS MONTH TIER AT A MONTH LEVEL FOR EVERY CUSTOMER\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_LAST_TIER_LAG AS (\r\n\tSELECT CUSTOMER_NO, FIN_MONTH, TIER,\r\n\t\t   LAG(TIER) OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH) AS PREV_MNTH_TIER\r\n\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_RAW)$[vLimit];\r\n-- Execution time: 19.82s\r\n\r\n--TAKE ALL CUSTOMERS CURRENT TIER ONLY\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER AS (\r\n\tSELECT CUSTOMER_NO, CUSTOMER_CURRENT_TIER_CODE\r\n\tFROM (SELECT CUSTOMER_NO, FIN_MONTH, TIER AS CUSTOMER_CURRENT_TIER_CODE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH DESC) AS LATEST_TIER_RANK\r\n\t\t\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_LAG)\r\n\tWHERE LATEST_TIER_RANK = 1\r\n\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 19.82s\r\n\r\n--TAKE ALL CUSTOMERS ALONG WITH THEIR PREVIOUS TIER AND THE MONTH IN WHICH THE TIER CHANGE OCCURRED\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_CHNG_MNTH AS (\r\n\tSELECT CUSTOMER_NO, FIN_MONTH AS LAST_TIER_CHANGE_MONTH, PREV_MNTH_TIER AS LAST_TIER, TIER AS CUSTOMER_CURRENT_TIER_CODE\r\n\tFROM (\r\n\t\tSELECT CUSTOMER_NO, FIN_MONTH, TIER, PREV_MNTH_TIER,\r\n\t\t\t   ROW_NUMBER() OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH DESC) AS LAST_CHNG_MNTH_RANK\r\n\t\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_LAG\r\n\t\tWHERE PREV_MNTH_TIER-TIER<>0)\r\n\tWHERE LAST_CHNG_MNTH_RANK=1\r\n\tGROUP BY 1,2,3,4)$[vLimit];\r\n-- Execution time: 15.26s\r\n\r\n--ADD LAST TIER AND TIER CHANGE MONTH INFORMATION TO THE TABLE WITH CURRENT TIER\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS AS\r\n\tSELECT A.CUSTOMER_NO, A.CUSTOMER_CURRENT_TIER_CODE, LAST_TIER, LAST_TIER_CHANGE_MONTH\r\n\tFROM #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER A\r\n\tLEFT JOIN #wns_nm_DD_SHK_TIER_CHNG_MNTH B\r\n\tON A.CUSTOMER_NO = B.CUSTOMER_NO$[vLimit];\r\n-- Execution time: 7.58s\r\n\r\n-- PREPARE LIST OF ALL UCIDS FROM TENDER TRIANGULATION OUTPUT DATA\r\nCREATE TABLE #wns_nm_DD_CA_UCID_LIST AS (\r\n\tSELECT perm_ucid_hashed as UCID, CUSTOMER_NO\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tWHERE CUSTOMER_NO IS NOT NULL AND UCID_TYPE = 'KNOWN'\r\n\tGROUP BY 1,2 )$[vLimit];\r\n-- Execution time: 4.43s\r\n\r\n-- ATTACH THE ABOVE CREATED TIER INFORMATION TO THE UCID LIST OF ALL CUSTOMERS\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName]\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT UCID, LAST_TIER_CHANGE_MONTH, LAST_TIER, CUSTOMER_CURRENT_TIER_CODE\r\n\t\tFROM (\r\n\t\t\tSELECT CAST(A.UCID AS CHARACTER VARYING(30)), A.CUSTOMER_NO, B.LAST_TIER_CHANGE_MONTH, B.LAST_TIER, B.CUSTOMER_CURRENT_TIER_CODE,\r\n\t\t\t\t   ROW_NUMBER() OVER(PARTITION BY A.UCID ORDER BY B.CUSTOMER_CURRENT_TIER_CODE DESC, B.LAST_TIER_CHANGE_MONTH DESC, B.LAST_TIER DESC) AS TIER_RANK\r\n\t\t\tFROM #wns_nm_DD_CA_UCID_LIST A\r\n\t\t\tINNER JOIN #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS B\r\n\t\t\t\tON A.CUSTOMER_NO=B.CUSTOMER_NO)\r\n\t\tWHERE TIER_RANK=1)$[vLimit];\r\n-- Execution time: 13.89s\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName]\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tB.LOCATION_NAME, B.AREA_NO,\tB.AREA_NAME, B.REGION_NO, B.REGION_NAME, B.CHAIN_NO,\r\n\t\t\t\tD.ST_S4S_SHAPE_OF_CHAIN_DESC AS SHAPE_OF_CHAIN_DESC,\r\n\t\t\t\tC.LAST_TIER_CHANGE_MONTH, C.LAST_TIER, C.CUSTOMER_CURRENT_TIER_CODE,H.tier_fy\r\n\t\t\t\t,H.tier_fq,H.tier_fh,H.tier_fm\r\n\t\tFROM #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN A\r\n\t\tLEFT JOIN DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName] C\r\n\t\t\t\tON A.UCID = C.UCID\r\n\t\tLEFT JOIN ANALYTICS.FND_LOCATION B\r\n\t\t\t\tON A.LOCATION_NO = B.LOCATION_NO\r\n\t\tLEFT JOIN DEVELOPMENT.FND_ROG_SOC_LOCATION D\r\n\t\t\t\tON A.LOCATION_NO = D.LOCATION_NO\r\n\t/*\tLEFT JOIN #wns_kr_tier_year_wise E\r\n\t\t\t\tON A.fin_year_no = E.fin_year_no\r\n\t\t\t\t\tand A.UCID = E.UCID\r\n\t\tLEFT JOIN #wns_adj_tier_fq_wise_UCID F\r\n\t\t        ON A.fin_year_no = F.fin_year_no\r\n\t\t        and A.fin_quarter_no = F.quarter\r\n\t\t\t\t\tand A.UCID = F.UCID\r\n        LEFT JOIN #wns_adj_tier_fh_wise_UCID G\r\n\t\t        ON A.fin_year_no = G.fin_year_no\r\n\t\t        and A.fin_half_no = G.half_year\r\n\t\t\t\t\tand A.UCID = G.UCID*/\r\n        LEFT JOIN (select * from development.wns_adj_tier_wise$[vDayName] where fin_year_no>=2021 and fin_month_no>=3) H\r\n\t\t        ON A.fin_year_no = H.fin_year_no\r\n\t\t        and A.fin_month_no = H.fin_month_no\r\n\t\t\t\t\tand A.UCID = H.UCID\r\n\r\n\t)$[vLimit];\r\n-- Execution time: 1m 42s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_LAST_TIER_RAW;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_LAST_TIER_LAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_CHNG_MNTH;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_UCID_LIST;\r\nDROP TABLE IF EXISTS #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT C - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT D - Creating base table from $[vCBI] data with product & category details **********************************************/\r\n/******************************************************************************************************************************************/\r\n\r\nCREATE TABLE #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT\r\n\t\tlocation_no\r\n\t\t,till_no\r\n\t\t,tran_no\r\n\t\t,tran_date\r\n\t\t,tran_time\r\n\t\t,item_seq_no\r\n\t\t,item_no\r\n\t\t,tran_type\r\n\t\t,item_tran_selling\r\n\t\t,case when vat_rate_perc is null then 0 else vat_rate_perc end as vat_rate_perc1\r\n\t\t,item_tran_qty\r\n\t\t,discount_selling\r\n\t\t,customer_no\r\n\t\t,waste_discount_selling\r\n\t\t,ROW_NUMBER() OVER(PARTITION BY TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO, ITEM_NO ORDER BY LAST_UPDATED_DATE DESC) AS LATEST_FLAG\r\n\t    ,vitality_uda_value\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_ITEM\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]')$[vLimit];\r\n-- Execution time: 15m 26s\r\n\r\n--deleting redundant rows\r\nDELETE FROM #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1 WHERE LATEST_FLAG>1;\r\n\r\n--+++++++++++++++++++++++++++++++++++++++++Start of Addition Of Markdown_seq_no++++++++++++++++++++++++++++++----\r\n-- TEMPORARY table for rtl_clearance for zone =1 filter and nxt_active_date logic\r\ndrop table if exists #wns_adj_rtl_lag_temp;\r\ncreate table #wns_adj_rtl_lag_temp as\r\nselect * from (\r\n                select item_no,markdown_seq_no,active_date,reset_date,ruling_rsp,\r\n                lag(active_date-1) over (partition by item_no order by active_date desc) as nxt_active_date\r\n                from analytics.fnd_rtl_clearance where zone_no=1\r\n)$[vLimit];\r\n-- joining both above table and making a decision of last next_active_date data which is null.\r\ndrop table if exists #wns_adj_cbi_rtl_join;\r\ncreate table #wns_adj_cbi_rtl_join\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,item_seq_no,item_no) as\r\nselect location_no,till_no,tran_no,tran_date,item_seq_no,A.item_no ,markdown_seq_no,active_date ,reset_date,ruling_rsp,\r\ncase when ruling_rsp>.01 then nvl(nxt_active_date ,reset_date-1) end as nxt_active_date\r\nfrom (\r\n      #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1 a\r\n      left join\r\n      #wns_adj_rtl_lag_temp b\r\n      on a.item_no=b.item_no\r\n      )$[vLimit];\r\n\r\ndrop table if exists #wns_adj_rtl_lag_temp;\r\n-- Main logic of Markdown\r\ndrop table if exists #wns_adj_markdown_seq;\r\ncreate table #wns_adj_markdown_seq\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,item_seq_no,item_no) as\r\nselect location_no,till_no,tran_no,tran_date,item_seq_no,item_no  ,nvl(markdown_seq_no,0) as markdown_seq_no from (\r\n                select location_no,till_no,tran_no,tran_date,item_seq_no,item_no  ,max(markdown_seq_no) as markdown_seq_no\r\n                from(\r\n                    select location_no,till_no,tran_no,tran_date,item_seq_no,item_no ,\r\n                    case when reset_date <= nxt_active_date\r\n                              and tran_date between active_date and reset_date-1\r\n                              and ruling_rsp>0.01\r\n                              then markdown_seq_no else\r\n                    case when reset_date > nxt_active_date\r\n                              and tran_date between active_date and nxt_active_date\r\n                              and ruling_rsp>0.01\r\n                              then markdown_seq_no  end\r\n                    end as markdown_seq_no\r\n                    from #wns_adj_cbi_rtl_join\r\n                    )\r\n                group by location_no,till_no,tran_no,tran_date,item_seq_no,item_no\r\n                )$[vLimit];\r\n\r\n\r\ndrop table if exists #wns_adj_cbi_rtl_join;\r\n--+++++++++++++++++++++++++++++++++++++++++End of Addition Of Markdown_seq_no++++++++++++++++++++++++++++++----\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\ncreate table #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect A.*,B.tran_qty\r\nfrom(\r\n(select * from #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1) A\r\nleft join\r\n(select * from(\r\nselect location_no,till_no,tran_no,tran_date,sum(item_tran_qty) as tran_qty from #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1\r\ngroup by location_no,till_no,tran_no,tran_date\r\n)\r\n) B\r\nON A.TRAN_DATE = B.TRAN_DATE\r\nAND A.LOCATION_NO = B.LOCATION_NO\r\nAND A.TILL_NO = B.TILL_NO\r\nAND A.TRAN_NO = B.TRAN_NO\r\n)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS  #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1;\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item;\r\n--DROP TABLE IF EXISTS #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\n\r\n-- Total script execution time: 0.02s\r\n-- changed the code for phase2 promotion_no addition\r\nCREATE TABLE #wns_nm_DD_SHK_CA_AUX_SUBSET\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT LOCATION_NO, TRAN_DATE, TRAN_NO, TILL_NO, ITEM_NO, ITEM_SEQ_NO,\r\n\t\t\t\t1 AS PROMOTION_FLAG,\r\n\t\t\t\tTRAN_TYPE_CODE, sum(PROMOTION_DISCOUNT_AMOUNT) as PROMOTION_DISCOUNT_AMOUNT1\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_AUX\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]'\r\n\t\t\t\tAND PROMOTION_NO IS NOT NULL\r\n\t\t\t\tAND PROMOTION_NO <>''\r\n\t\t\t\tAND PROMOTION_DISCOUNT_AMOUNT > 0\r\n\t\t\t\t--AND TRAN_TYPE_CODE IN ('LOYALTY', 'WFS', 'RMS', 'ATG', 'ATGLOY', 'STAFF', 'EOL', 'FRANCHISE')\r\n\t\tGROUP BY 1,2,3,4,5,6,7,8)$[vLimit];\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1 ;\r\nCREATE TABLE #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT LOCATION_NO, TRAN_DATE, TRAN_NO, TILL_NO, ITEM_NO, ITEM_SEQ_NO,\r\n\t\t\t\tMAX(PROMOTION_FLAG) AS PROMOTION_FLAG,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'LOYALTY' THEN 1 ELSE 0 END) AS LOYALTY_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'LOYALTY' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS LOYALTY_DISCOUNT_SELLING,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'WFS' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS WFS_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'RMS' THEN 1 ELSE 0 END) AS RMS_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'RMS' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS RMS_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'ATG' THEN 1 ELSE 0 END) AS ATG_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'ATG' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS ATG_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'ATGLOY' THEN 1 ELSE 0 END) AS ATGLOY_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'ATGLOY' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS ATG_LOYALTY_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'STAFF' THEN 1 ELSE 0 END) AS STAFF_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'STAFF' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS STAFF_DISCOUNT_SELLING,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'CTV' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS VOUCHER_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'EOL' THEN 1 ELSE 0 END) AS EOL_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'EOL' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS EOL_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'FRANCHISE' THEN 1 ELSE 0 END) AS FRANCHISE_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE NOT IN ('ATG', 'LOYALTY', 'ATGLOY', 'STAFF', 'WFS', 'EOL', 'RMS') THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS OTHER_DISCOUNT_SELLING,\r\n\t\t\t\tCASE WHEN (STAFF_DISCOUNT_SELLING = 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING = 0) THEN 0\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING > 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING > 0) THEN 1\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING > 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING = 0) THEN 2\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING = 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING > 0) THEN 3 END AS DISCOUNT_CODE\r\n\t\tFROM #wns_nm_DD_SHK_CA_AUX_SUBSET\r\n\t\tGROUP BY 1,2,3,4,5,6)$[vLimit];\r\n-- Execution time: 2m 54s\r\n\r\n\r\ndrop table if exists #WNS_ADJ_PROMOTION_NO ;\r\ncreate table #WNS_ADJ_PROMOTION_NO\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,ITEM_SEQ_NO,ITEM_NO) AS (\r\nselect location_no,till_no,tran_no,tran_date,item_no,item_seq_no,\r\n\t\tmax(case when tran_type_code='RMS'  then promotion_no else\r\n\t\t\t\tcase when tran_type_code='LOYALTY'\r\n\t\t\t\t-- check if any loyalty promotion_no is without prefixes also\r\n\t\t\t\t then trim(SUBSTRING(promotion_no ,4,len(promotion_no)))  else\r\n\t\t\t\t\t\tcase when tran_type_code='WFS' \tand trim(SUBSTRING(promotion_no ,0,4)) in ('WFS','888')\r\n\t\t\t\t\t\t\tthen trim(SUBSTRING(promotion_no ,4,len(promotion_no)))  else\r\n\t\t\t\t\t\tcase when tran_type_code='FRANCHISE'  then promotion_no\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t\t\t\tend end) as RMS_PROMOTION_NO,\r\n\t\tmax(case when tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,8))='bppromo' then trim(SUBSTRING(promotion_no ,8,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='cq' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='sp' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)\t))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='bp' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '  then promotion_no\r\n\t\t\t\tend) as ATG_PROMOTION_NO ,\r\n\t -- ATGLOY does not have any promotion_no with out \"promo' prefix.\r\n\t\tmax(case when tran_type_code='ATGLOY '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no))) else\r\n\t\t\t\t\tcase when tran_type_code='WFS '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no))) end\r\n\t\t\t\t\tend) as ATG_LOYALTY_PROMOTION_NO  ,\r\n\t\tmax(case when tran_type_code='EOL '  then promotion_no\r\n\t\tend) as EOL_PROMOTION_NO\r\nfrom (select * from\r\n\t\t(select location_no,till_no,tran_no,tran_date,item_no,item_seq_no,tran_type_code,aux_seq_no,promotion_no,\r\n          -- adding windowing function for find ing the min and then giving the flag for it.\r\n          row_number() over (partition by location_no,till_no,tran_no,tran_date,item_no,item_seq_no,tran_type_code order by aux_seq_no asc) as aux_seq_no_rank\r\n\t\t\tfrom  ANALYTICS.FND_CUST_BASKET_AUX\r\n      -- where location_no='1047' and till_no='11' and tran_no='43' and tran_date='2018-04-16'\r\n\t\t\tWHERE last_updated_date = '$[vlast_updated_date]'\r\n\t\t\t\tAND PROMOTION_NO IS NOT NULL\r\n\t\t\t\tAND PROMOTION_NO <>''\r\n\t\t\t\tAND PROMOTION_DISCOUNT_AMOUNT > 0\r\n\t\t\t\tAND TRAN_TYPE_CODE IN ('LOYALTY', 'WFS', 'RMS', 'ATG', 'ATGLOY', 'STAFF', 'EOL', 'FRANCHISE'))\r\n       where  aux_seq_no_rank=1\r\n\t   )\r\ngroup by location_no,till_no,tran_no,tran_date,item_no,item_seq_no)$[vLimit];\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED;\r\ncreate table #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,ITEM_SEQ_NO,ITEM_NO) as\r\n\tselect A.*,RMS_PROMOTION_NO,ATG_PROMOTION_NO,ATG_LOYALTY_PROMOTION_NO,EOL_PROMOTION_NO from (\r\n\t#wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1 A\r\n\tleft join\r\n\t#WNS_ADJ_PROMOTION_NO B\r\n\tON A.TRAN_DATE=B.TRAN_DATE\r\n\tAND A.LOCATION_NO=B.LOCATION_NO\r\n\tAND A.TILL_NO=B.TILL_NO\r\n\tAND A.TRAN_NO=B.TRAN_NO\r\n\tAND A.item_seq_no=B.item_seq_no\r\n\tAND A.item_no=B.item_no)$[vLimit];\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CA_AUX_SUBSET;\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName]\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT A.*, LOYALTY_PROMO_FLAG, LOYALTY_DISCOUNT_SELLING, WFS_DISCOUNT_SELLING, RMS_PROMO_FLAG, RMS_DISCOUNT_SELLING, ATG_PROMO_FLAG,\r\n\t\t\t\tATG_DISCOUNT_SELLING, ATGLOY_PROMO_FLAG, ATG_LOYALTY_DISCOUNT_SELLING, STAFF_PROMO_FLAG, STAFF_DISCOUNT_SELLING,VOUCHER_DISCOUNT_SELLING, EOL_PROMO_FLAG,\r\n\t\t\t\tEOL_DISCOUNT_SELLING, FRANCHISE_PROMO_FLAG, OTHER_DISCOUNT_SELLING,\r\n\t\t\t\tCASE WHEN PROMOTION_FLAG = 1 THEN 1 ELSE 0 END AS PROMO_FLAG,\r\n\t\t\t\tB.DISCOUNT_CODE,RMS_PROMOTION_NO,ATG_PROMOTION_NO,ATG_LOYALTY_PROMOTION_NO,EOL_PROMOTION_NO,markdown_seq_no\r\n\t\tFROM #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP A\r\n\t\tLEFT JOIN #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED B\r\n\t\tON A.TRAN_DATE = B.TRAN_DATE\r\n\t\t\tAND A.LOCATION_NO = B.LOCATION_NO\r\n\t\t\tAND A.TILL_NO = B.TILL_NO\r\n\t\t\tAND A.TRAN_NO = B.TRAN_NO\r\n\t\t\tAND  A.ITEM_SEQ_NO = B.ITEM_SEQ_NO\r\n\t\t\tAND  A.ITEM_NO = B.ITEM_NO\r\n\t\tLEFT JOIN #wns_adj_markdown_seq C\r\n\t\tON A.TRAN_DATE = C.TRAN_DATE\r\n\t\t\tAND A.LOCATION_NO = C.LOCATION_NO\r\n\t\t\tAND A.TILL_NO = C.TILL_NO\r\n\t\t\tAND A.TRAN_NO = C.TRAN_NO\r\n\t\t\tAND A.ITEM_SEQ_NO = C.ITEM_SEQ_NO\r\n\t\t\tAND A.ITEM_NO = C.ITEM_NO)$[vLimit];\r\n-- Execution time: 19m 22s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT D - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT 0 - Removing previous week's Base Table *****************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- Moving previous week's Base Table to S3 Development External\r\n-- unload ('select * from development.wns_cust_basket_item') --this part will change for the next wednesday\r\n-- to 's3://woolworths-its-automation/marketing-automation/data/ttci/development/cust_basket_item_{3}'\r\n-- iam_role 'arn:aws:iam::102116558525:role/etl_sulaco'\r\n-- allowoverwrite\r\n-- parallel on\r\n-- partition by(tran_date)\r\n-- parquet;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT 0 - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT E - Final inner join of CUST_BASKET & $[vCBI] **************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\nCREATE TABLE #WNS_CUST_BASKET_ITEM_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS\r\n\t (\r\n\t\tSELECT a.location_no, a.till_no, a.tran_no, a.tran_date,\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no, a.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\ta.location_name, a.area_no, a.area_name, a.region_no, a.region_name, a.shape_of_chain_desc as alternate_location_hierarchy1,\r\n\t\t\t\t-1 as alternate_location_hierarchy2, -1 as alternate_location_hierarchy3 , -1 as alternate_location_hierarchy4,\r\n\t\t\t\t-1 as alternate_location_hierarchy5 , -1 as alternate_location_hierarchy6,\r\n\t\t\t\ta.tran_time,\r\n\t\t\t\ta.tran_type, a.tran_ind,\r\n\t\t\t\ta.tran_selling,\r\n\t\t\t\ta.tran_selling/(1+(vat_rate_perc1/100)) as tran_selling_vat_excl,--p2\r\n\t\t\t\ta.discount_selling,\r\n\t\t\t\ta.discount_selling/(1+(vat_rate_perc1/100)) as DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.store_card_tender_count, a.store_card_tran_tender_selling,\r\n\t\t\t\ta.credit_card_tender_count, a.credit_card_tran_tender_selling,\r\n\t\t\t\ta.gift_card_tender_count, a.gift_card_tran_tender_selling,\r\n\t\t\t\ta.voucher_tender_count, a.voucher_tran_tender_selling,\r\n\t\t\t\ta.alien_card_tender_count, a.alien_card_tran_tender_selling,\r\n\t\t\t\ta.cash_tender_ind, a.cash_tran_tender_selling,\r\n\t\t\t\ta.other_tender_count, a.other_tran_tender_selling,\r\n\t\t\t\ta.wrewards_swipe_ind, a.myschool_swipe_ind,a.VMP_IND,\r\n\t\t\t\ta.ucid,\r\n\t\t\t\t/*case when a.ucid_type in ('KNOWN') AND a.customer_current_tier_code IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\twhen a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\tWHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\tWHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\t\telse 'CASH'\r\n\t\t\t\t\tEND AS CUSTOMER_COHORT,*/\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fy IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FY,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fh IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FH,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fq IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FQ,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fm IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FM,\r\n\t\t\t\ta.acquisition_date,\r\n\t\t\t\t-1 as foods_life_cycle_code, -1 as fbh_life_cycle_code, -1 as ww_life_cycle_code,\r\n\t\t---1 as LAST_UPDATED_DATE,\r\n\t\t\t\ta.age,\r\n\t\t\t\tcase when a.AGE between 18 and 24 then '18-24'\r\n\t\t\t\t\t when a.AGE between 25 and 34 then '25-34'\r\n\t\t\t\t\t when a.AGE between 35 and 44 then '35-44'\r\n\t\t\t\t\t when a.AGE between 45 and 54 then '45-54'\r\n\t\t\t\t\t when a.AGE>55 then '55+' else 'No Value' end as AGE_BAND,\r\n\t\t\t\ta.race as derived_race, a.gender,\r\n\t\t\t\t-1 as HOUSEHOLD_INCOME_BAND_FY,\r\n\t\t\t\t-1 as MACRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as MICRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as EMPLOYEE_STATUS_CODE,-- @adj sep\r\n\t\t\t\tb.item_seq_no, b.item_no,\r\n\t\t\t\tb.tran_type as item_tran_type,\r\n\t\t\t\tb.item_tran_selling,\r\n\t\t\t\tb.discount_selling as item_discount_selling,\r\n\t\t\t\tb.waste_discount_selling as WASTE_DISCOUNT_PERC,\r\n\t\t\t\tb.item_tran_selling/(1+(vat_rate_perc1/100)) as ITEM_TRAN_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.discount_selling/(1+(vat_rate_perc1/100)) as ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.vat_rate_perc1 as vat_rate_perc,\r\n\t\t\t\tb.vitality_uda_value as VITALITY_UDA_VALUE_NO,\r\n\t\t\t\tb.tran_qty,\r\n\t\t\t\tb.item_tran_qty,\r\n\t\t\t\tb.discount_code,\r\n\t\t\t\tb.RMS_PROMOTION_NO,b.ATG_PROMOTION_NO,b.ATG_LOYALTY_PROMOTION_NO,b.EOL_PROMOTION_NO,\r\n\t\t\t\tb.loyalty_discount_selling,\r\n\t\t\t\tb.rms_discount_selling,\r\n\t\t\t\tb.atg_discount_selling,\r\n\t\t\t\tb.atg_loyalty_discount_selling,\r\n\t\t\t\tb.staff_discount_selling,b.VOUCHER_DISCOUNT_SELLING,\r\n\t\t\t\tb.eol_discount_selling,\r\n\t\t\t\tb.wfs_discount_selling,\r\n\t\t\t\tb.other_discount_selling,\r\n\t\t\t\tb.loyalty_discount_selling/(1+(vat_rate_perc1/100)) as LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.rms_discount_selling/(1+(vat_rate_perc1/100)) as RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.atg_discount_selling/(1+(vat_rate_perc1/100)) as ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.atg_loyalty_discount_selling/(1+(vat_rate_perc1/100)) as ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.VOUCHER_DISCOUNT_SELLING/(1+(vat_rate_perc1/100)) as VOUCHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.staff_discount_selling/(1+(vat_rate_perc1/100)) as STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.eol_discount_selling/(1+(vat_rate_perc1/100)) as EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.wfs_discount_selling/(1+(vat_rate_perc1/100)) as WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.other_discount_selling/(1+(vat_rate_perc1/100)) as OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.MARKDOWN_SEQ_NO\r\n\t\t\t\t\tFROM DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName] a\r\n\t\tINNER JOIN DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName] b\r\n\t\t\t\tON A.TRAN_DATE = B.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = B.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = B.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = B.TRAN_NO\r\n\t\tWHERE a.chain_no<>30\r\n\t\t\t\tAND a.tran_type in ('S','V','R','Q'))$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName];\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_kr_Tran_discount_selling_vat_exc;\r\nCreate Table #wns_kr_Tran_discount_selling_vat_exc\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect location_no,till_no,tran_no,tran_date , sum(ITEM_TRAN_SELLING_VAT_EXCL) as TRAN_SELLING_VAT_EXCL,\r\n\t\tsum(ITEM_DISCOUNT_SELLING_VAT_EXCL) as DISCOUNT_SELLING_VAT_EXCL\r\nfrom #WNS_CUST_BASKET_ITEM_TEMP\r\ngroup by 1,2,3,4\r\n$[vLimit];\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item ;\r\ncreate table #wns_nm_fnd_item diststyle all as (\r\n\tselect item_no, B.BUSINESS_UNIT_LONG_DESC,B.BUSINESS_UNIT_NO,B.GROUP_NO,B.SUBGROUP_NO,B.DEPARTMENT_NO\r\n\t\t\t,B.CLASS_NO,B.SUBCLASS_NO,B.BUSINESS_UNIT_NAME,B.GROUP_NAME,B.SUBGROUP_NAME,B.DEPARTMENT_NAME,B.CLASS_NAME\r\n\t\t\t,B.SUBCLASS_NAME,B.ITEM_LEVEL1_NO,upper(b.ITEM_SHORT_DESC) AS ITEM_SHORT_DESC\r\n\t\t\t,B.GROUP_LONG_DESC,B.SUBGROUP_LONG_DESC,B.DEPARTMENT_LONG_DESC\r\n\tfrom ANALYTICS.FND_ITEM b\r\n\tgroup by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS #wns_kr_uda_info ;\r\nCreate Table #wns_kr_uda_info\r\n\tdiststyle all as\r\n(\r\n\tselect item_no,\r\n\t\t UDA_104_VALUE_DESC\r\n\t\t,UDA_104_VALUE_NO\r\n\t\t,UDA_300_VALUE_DESC\r\n\t\t,UDA_300_VALUE_NO\r\n\t\t,UDA_306_VALUE_DESC\r\n\t\t,UDA_306_VALUE_NO\r\n\t\t,UDA_310_VALUE_DESC\r\n\t\t,UDA_310_VALUE_NO\r\n\t\t,UDA_316_VALUE_DESC\r\n\t\t,UDA_316_VALUE_NO\r\n\t\t,UDA_320_VALUE_DESC\r\n\t\t,UDA_320_VALUE_NO\r\n\t\t,UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t,UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t,UDA_2301_VALUE_DESC\r\n\t\t,UDA_2301_VALUE_NO\r\n\t\t,UDA_7702_VALUE_DESC\r\n\t\t,UDA_7702_VALUE_NO\r\n\t\t,UDA_7704_VALUE_DESC\r\n\t\t,UDA_7704_VALUE_NO\r\n\tfrom development.wns_hs_uda_value_and_desc\r\n)\r\n$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName](\r\nTRAN_DATE\tdate\tencode zstd\t,\r\nLOCATION_NO\tsmallint\tencode zstd\t,\r\nTILL_NO\tsmallint\tencode zstd\t,\r\nTRAN_NO\tinteger\tencode zstd\t,\r\nTRAN_TIME\tvarchar(8)\t\t,\r\nTRAN_IND\tsmallint\t\t,\r\nTRAN_TYPE\tvarchar(4)\t\t,\r\nTRAN_QTY\tinteger\t\t,\r\nTRAN_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nTRAN_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nDISCOUNT_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nDISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nFIN_YEAR_NO\tsmallint\t\t,\r\nFIN_HALF_NO\tsmallint\t\t,\r\nFIN_QUARTER_NO\tsmallint,\r\nFIN_MONTH_NO\tsmallint\t\t,\r\nFIN_WEEK_NO\tsmallint\t\t,\r\nFIN_DAY_NO\tsmallint\t\t,\r\nSEASON_NO\tsmallint\t\t,\r\nWEEKDAY_WEEKEND_CODE\tsmallint\t\t,\r\nTIME_OF_DAY_CODE\tsmallint\t\t,\r\nITEM_SEQ_NO\tsmallint\tencode zstd\t,\r\nITEM_NO\tnumeric(18)\tencode zstd\t,\r\nITEM_LEVEL1_NO\tbigint\tencode zstd\t,\r\nITEM_SHORT_DESC\tvarchar(60)\tencode zstd\t,\r\nITEM_TRAN_TYPE\tvarchar(4)\t\t,\r\nITEM_TRAN_QTY\tinteger\t\t,\r\nITEM_TRAN_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nITEM_TRAN_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nITEM_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nITEM_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nWASTE_DISCOUNT_PERC\tnumeric(14,2)\t\t,\r\nVAT_RATE_PERC\tnumeric(4,2)\t\t,\r\nCOLOUR_FAMILY\tvarchar(50)\t\t,\r\nBUSINESS_UNIT_NO\tsmallint\t\t,\r\nBUSINESS_UNIT_NAME\tvarchar(40)\t\t,\r\nGROUP_NO\tsmallint\t\t,\r\nGROUP_NAME\tvarchar(40)\tencode zstd\t,\r\nSUBGROUP_NO\tsmallint\t\t,\r\nSUBGROUP_NAME\tvarchar(40)\tencode zstd\t,\r\nDEPARTMENT_NO\tsmallint\t\t,\r\nDEPARTMENT_NAME\tvarchar(40)\tencode zstd\t,\r\nCLASS_NO\tsmallint\tencode zstd\t,\r\nCLASS_NAME\tvarchar(40)\tencode zstd\t,\r\nSUBCLASS_NO\tsmallint\tencode zstd\t,\r\nSUBCLASS_NAME\tvarchar(40)\tencode zstd\t,\r\nALTERNATE_PRODUCT_HIERARCHY1\tvarchar(15)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY2\tvarchar(9)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY3\tvarchar(31)\tencode zstd\t,\r\nALTERNATE_PRODUCT_HIERARCHY4\tvarchar(35)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY5\tvarchar(6)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY6\tvarchar(36)\t\t,\r\nSALES_CHANNEL_CODE\tsmallint\t\t,\r\nAREA_NO\tsmallint\t\t,\r\nAREA_NAME\tvarchar(40)\t\t,\r\nREGION_NO\tsmallint\t\t,\r\nREGION_NAME\tvarchar(40)\t\t,\r\nLOCATION_NAME\tvarchar(40)\t\t,\r\nALTERNATE_LOCATION_HIERARCHY1\tvarchar(40)\t\t,\r\nALTERNATE_LOCATION_HIERARCHY2\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY3\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY4\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY5\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY6\tsmallint\t\t,\r\nDISCOUNT_CODE\tsmallint\t\t,\r\nRMS_PROMOTION_NO\tvarchar(25)\t\t,\r\nATG_PROMOTION_NO\tvarchar(25)\t\t,\r\nATG_LOYALTY_PROMOTION_NO\tvarchar(25)\t\t,\r\nEOL_PROMOTION_NO\tvarchar(25)\t\t,\r\nRMS_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nRMS_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nLOYALTY_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nLOYALTY_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nATG_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nATG_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nATG_LOYALTY_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nEOL_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nEOL_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nWFS_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nWFS_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nSTAFF_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nSTAFF_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nVOUCHER_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nVOUCHER_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nOTHER_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nOTHER_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nMARKDOWN_SEQ_NO\tsmallint\t\t,\r\nSTORE_CARD_TENDER_COUNT\tsmallint\t\t,\r\nSTORE_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nCREDIT_CARD_TENDER_COUNT\tsmallint\t\t,\r\nCREDIT_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nGIFT_CARD_TENDER_COUNT\tsmallint\t\t,\r\nGIFT_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nALIEN_CARD_TENDER_COUNT\tsmallint\t\t,\r\nALIEN_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nCASH_TENDER_IND\tinteger\t\t,\r\nCASH_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nOTHER_TENDER_COUNT\tsmallint\t\t,\r\nOTHER_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\n--VOUCHER_NO\tinteger\t,\r\nVOUCHER_TENDER_COUNT\tsmallint\t\t,\r\nVOUCHER_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nUCID\tvarchar(100)\tencode zstd\t,\r\nCUSTOMER_COHORT_FY\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FH\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FQ\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FM\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FW\tvarchar(19)\t\t,\r\nAGE\tsmallint\t\t,\r\nAGE_BAND_FY\tvarchar(8)\t\t,\r\nAGE_BAND_FH\tvarchar(8)\t\t,\r\nAGE_BAND_FQ\tvarchar(8)\t\t,\r\nAGE_BAND_FM\tvarchar(8)\t\t,\r\nAGE_BAND_FW\tvarchar(8)\t\t,\r\nGENDER\tvarchar(8)\t\t,\r\nDERIVED_RACE\tvarchar(30)\t\t,\r\nACQUISITION_DATE\tdate\tencode zstd\t,\r\nHOUSEHOLD_INCOME_BAND_FY\tsmallint\t\t,\r\nMACRO_SEGMENT_FY \tsmallint\t\t,\r\nMICRO_SEGMENT_FY \tsmallint\t\t,\r\nEMPLOYEE_STATUS_CODE\tsmallint\t\t,\r\nSTORE_CARD_COUNT\tsmallint\t\t,\r\nWREWARDS_CARD_COUNT\tsmallint\t\t,\r\nMYSCHOOL_CARD_COUNT\tsmallint\t\t,\r\nCREDIT_CARD_COUNT\tsmallint\t\t,\r\nLITTLEWORLD_MEMBERSHIP_COUNT\tsmallint\t\t,\r\nVITALITY_MEMBERSHIP_COUNT\tsmallint\t\t,\r\nNON_REWARDS_CARD_COUNT\tsmallint\t\t,\r\nUDA_104_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_104_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_300_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_300_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_306_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_306_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_310_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_310_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_316_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_316_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_320_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_320_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_327_7703_7707_7708_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_327_7703_7707_7708_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_2301_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_2301_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_7702_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_7702_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_7704_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_7704_VALUE_DESC\tvarchar(100)\t\t,\r\nVITALITY_UDA_VALUE_NO\tsmallint\t\t,\r\nWREWARDS_SWIPE_IND\tboolean\t\t,\r\nMYSCHOOL_SWIPE_IND\tboolean\t\t,\r\nVMP_IND\t\t\tsmallint,\r\nBASKET_ID\tvarchar(118)\t\t,\r\nLAST_UPDATED_DATE\tdate\r\n\r\n)\r\nDISTSTYLE KEY\r\nDISTKEY (tran_date)\r\nSORTKEY (tran_date, location_no, till_no, tran_no, item_seq_no, item_no)  ;\r\n-- end of schema\r\nINSERT INTO DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName]\r\n (\r\n\t\tSELECT a.tran_date, a.location_no, a.till_no, a.tran_no,\r\n\t\t\t\ta.tran_time,a.tran_ind,a.tran_type,nvl(a.tran_qty,0) as TRAN_QTY,\r\n\t\t\t\tnvl(a.tran_selling,0) as tran_selling ,nvl(e.tran_selling_vat_excl,0) as tran_selling_vat_excl ,--p2\r\n\t\t\t\tnvl(a.discount_selling,0) as discount_selling,nvl(e.DISCOUNT_SELLING_VAT_EXCL,0) as DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no,\r\n\t\t\t\ta.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\tcase when TRAN_TIME between '07:00:00' and '08:59:59' then 1\r\n\t\t\t\t\t when TRAN_TIME between '09:00:00' and '11:59:59' then 2\r\n\t\t\t\t\t when TRAN_TIME between '12:00:00' and '14:59:59' then 3\r\n\t\t\t\t\t when TRAN_TIME between '15:00:00' and '17:59:59' then 4\r\n\t\t\t\t\t when TRAN_TIME between '18:00:00' and '20:59:59' then 5\r\n\t\t\t\t\t when TRAN_TIME between '21:00:00' and '23:59:59' then 6\r\n\t\t\t\t\t when TRAN_TIME between '00:00:00' and '06:59:59' then 6\r\n\t\t\t\t\telse -1 --[KR]:else condition as 'No Value'\r\n\t\t\t\tend as TIME_OF_DAY_CODE,a.item_seq_no,\r\n\t\t\t\tnvl(a.item_no,0) as item_no, nvl(b.item_level1_no,0) as item_level1_no,\r\n\t\t\t\tnvl(b.ITEM_SHORT_DESC,'NO VALUE') as ITEM_SHORT_DESC,\r\n\t\t\t\ta.item_tran_type,nvl(a.item_tran_qty,0) as item_tran_qty,\r\n\t\t\t\tnvl(a.item_tran_selling,0) as item_tran_selling,nvl(a.ITEM_TRAN_SELLING_VAT_EXCL,0) as ITEM_TRAN_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.item_discount_selling,0) as item_discount_selling, nvl(a.ITEM_DISCOUNT_SELLING_VAT_EXCL,0) as ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.WASTE_DISCOUNT_PERC,0) as WASTE_DISCOUNT_PERC,nvl(a.vat_rate_perc,0) as vat_rate_perc,\r\n\t\t\t\tnvl(c.DIFF_RANGE_DESC,'NO VALUE') as colour_family ,nvl(B.BUSINESS_UNIT_NO,0) as BUSINESS_UNIT_NO,\r\n\t\t\t\tnvl(B.BUSINESS_UNIT_NAME,'NO VALUE') as BUSINESS_UNIT_NAME ,nvl(B.GROUP_NO,0) as GROUP_NO,\r\n\t\t\t\tnvl(B.GROUP_NAME,'NO VALUE') as GROUP_NAME,nvl(B.SUBGROUP_NO,0) as SUBGROUP_NO,nvl(B.SUBGROUP_NAME,'NO VALUE') as SUBGROUP_NAME, nvl(B.DEPARTMENT_NO,0) as DEPARTMENT_NO,nvl(B.DEPARTMENT_NAME,'NO VALUE') as DEPARTMENT_NAME,nvl(B.CLASS_NO,0) as CLASS_NO,nvl(B.CLASS_NAME,'NO VALUE') as CLASS_NAME,nvl(B.SUBCLASS_NO,0) as SUBCLASS_NO,nvl(B.SUBCLASS_NAME,'NO VALUE') as SUBCLASS_NAME,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Food'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO in (51,52,53,54,55) then 'FBH'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=70 then 'Non-Merchandise'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY1 ,\r\n\t\t\t\tcase when GROUP_NO in (9000,9001,9002,9010,9041) then 'Long-Life'\r\n\t\t\t\t\t when GROUP_NO in (9004,9005,9006,9007,9008,9009) then 'Fresh'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=51 then 'Fashion'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=52 and SUBGROUP_NO<>715 then 'Home'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=53 then 'Connect'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=54 then 'Beauty'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=55 then 'CRG'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY2 ,\r\n\t\t\t\tcase when GROUP_NO=1 then 'Womens Outerwear'\r\n\t\t\t\t\t when GROUP_NO=2 then 'Womens Lingerie'\r\n\t\t\t\t\t when GROUP_NO=3 then 'Kidswear'\r\n\t\t\t\t\t when GROUP_NO=4 then 'Trenery'\r\n\t\t\t\t\t when GROUP_NO=5 then 'Menswear'\r\n\t\t\t\t\t when GROUP_NO=6 then 'Womens Footwear and Accessories'\r\n\t\t\t\t\t when DEPARTMENT_NO=172 then 'Bathroom'\r\n\t\t\t\t\t when DEPARTMENT_NO=173 then 'Bedroom'\r\n\t\t\t\t\t when DEPARTMENT_NO=174 then 'Soft Furnishing'\r\n\t\t\t\t\t when DEPARTMENT_NO=176 then 'Kitchen'\r\n\t\t\t\t\t when DEPARTMENT_NO=521 then 'Dining'\r\n\t\t\t\t\t when DEPARTMENT_NO=544 then 'Wrapping Solutions'\r\n\t\t\t\t\t when DEPARTMENT_NO in (695,696) then 'Home Brands'\r\n\t\t\t\t\t when DEPARTMENT_NO=697 then 'Events'\r\n\t\t\t\t\t when SUBGROUP_NO=280 then 'Beauty Private Label'\r\n\t\t\t\t\t when SUBGROUP_NO=233 then 'Beauty Brands'\r\n\t\t\t\t\t when SUBGROUP_NO=212 then 'Airtime'\r\n\t\t\t\t\t when SUBGROUP_NO=446 then 'Cellular'\r\n\t\t\t\t\t when GROUP_NO=12 then 'Country Road'\r\n\t\t\t\t\t when GROUP_NO=13 then 'Witchery'\r\n\t\t\t\t\t when GROUP_NO=14 then 'Mimco'\r\n\t\t\t\t\t when GROUP_NO=9000 then 'Groceries'\r\n\t\t\t\t\t when GROUP_NO=9001 then 'Wine/Beverages/Liquor'\r\n\t\t\t\t\t when GROUP_NO=9002 then 'Snacking/Gifting'\r\n\t\t\t\t\t when GROUP_NO=9004 then 'Prepaded/Deli'\r\n\t\t\t\t\t when GROUP_NO=9005 then 'Bakery'\r\n\t\t\t\t\t when GROUP_NO=9006 then 'Produce/Horti'\r\n\t\t\t\t\t when GROUP_NO=9007 then 'Protein'\r\n\t\t\t\t\t when GROUP_NO=9008 then 'Dairy'\r\n\t\t\t\t\t when GROUP_NO=9009 then 'Foodservices'\r\n\t\t\t\t\t when GROUP_NO=9010 then 'Home/Personal/Pet'\r\n\t\t\t\t\t when GROUP_NO=9041 then 'Frozens'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=70 then 'Non-Merchandise'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY3 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO=4 then 'Trenery'\r\n\t\t\t\t\t when GROUP_NO=12 then 'Country Road'\r\n\t\t\t\t\t when GROUP_NO=13 then 'Witchery'\r\n\t\t\t\t\t when GROUP_NO=14 then 'Mimco'\r\n\t\t\t\t\t when SUBGROUP_NO in (93,261) then 'Classic Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO=684 then 'Classic Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO in (105,110,147,665,678,682,692,712) then 'EDITION.'\r\n\t\t\t\t\t when DEPARTMENT_NO in (107,139,519,658,685,695) then 'studio.w'\r\n\t\t\t\t\t when DEPARTMENT_NO in (109,150,659) then 'RE:'\r\n\t\t\t\t\t when DEPARTMENT_NO=512 then 'jtone'\r\n\t\t\t\t\t when DEPARTMENT_NO=698 then 'Distraction'\r\n\t\t\t\t\t when DEPARTMENT_NO=664 then 'Soft and Flexy'\r\n\t\t\t\t\t when DEPARTMENT_NO=123 then 'Modern'\r\n\t\t\t\t\t when DEPARTMENT_NO in (702,704) then 'SAF'\r\n\t\t\t\t\t when DEPARTMENT_NO in (163,687,158) then '(&US)'\r\n\t\t\t\t\t when DEPARTMENT_NO=650 then 'Early Learning Centre'\r\n\t\t\t\t\t when DEPARTMENT_NO in (159,548) and SUBCLASS_NO not in (1274,1987,9229) then 'Schoolwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (119,121,126,696) then 'W Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO=526 then 'Sanctuary'\r\n\t\t\t\t\t when DEPARTMENT_NO=651 then 'Eye Candy'\r\n\t\t\t\t\t when DEPARTMENT_NO=654 then 'Fox Box'\r\n\t\t\t\t\t when DEPARTMENT_NO=707 then 'Clarins'\r\n\t\t\t\t\t when DEPARTMENT_NO=193 then 'MTN'\r\n\t\t\t\t\t when DEPARTMENT_NO=194 then 'Vodacom'\r\n\t\t\t\t\t when DEPARTMENT_NO=195 then 'Cell C'\r\n\t\t\t\t\t when DEPARTMENT_NO=532 then 'Telkom'\r\n\t\t\t\t\t when CLASS_NO in (1701,3227,3576,4976,5602) then 'Classic Collection'\r\n\t\t\t\t\t when CLASS_NO in (1136,1706,2686,3232,4384,4973,5120,5607) then 'Modern'\r\n\t\t\t\t\t when CLASS_NO in (2229,1285) then 'studio.w'\r\n\t\t\t\t\t when CLASS_NO in (1255,1266) then 'AU'\r\n\t\t\t\t\t when CLASS_NO=1132 then 'Lingerie Collection'\r\n\t\t\t\t\t when CLASS_NO=1608 then 'Premium Collection'\r\n\t\t\t\t\t when CLASS_NO in (1090,1278) then '(&US)'\r\n\t\t\t\t\t when CLASS_NO in (1859,1882) then 'Walkmates'\r\n\t\t\t\t\t when CLASS_NO in (1455,1459,1460) and SUBCLASS_NO not in (3954,9049) then 'W Beauty'\r\n\t\t\t\t\t when CLASS_NO=1797 then 'Longmarket'\r\n\t\t\t\t\t when CLASS_NO=4716 then 'QVS'\r\n\t\t\t\t\t when CLASS_NO=5345 then 'SAVI'\r\n\t\t\t\t\t when CLASS_NO=1013 then 'Payot'\r\n\t\t\t\t\t when CLASS_NO=1035 then 'Ciate'\r\n\t\t\t\t\t when CLASS_NO=1070 then 'MSLONDON'\r\n\t\t\t\t\t when CLASS_NO=1078 then 'Billion Dollar Brows'\r\n\t\t\t\t\t when CLASS_NO=1146 then 'Chanel'\r\n\t\t\t\t\t when CLASS_NO=1170 then 'Glam Glow'\r\n\t\t\t\t\t when CLASS_NO=1183 then 'Estee Lauder'\r\n\t\t\t\t\t when CLASS_NO=1188 then 'Clinique'\r\n\t\t\t\t\t when CLASS_NO=1198 then 'Bobbi Brown'\r\n\t\t\t\t\t when CLASS_NO=1383 then 'Alaia'\r\n\t\t\t\t\t when CLASS_NO=1400 then 'Bvlgari'\r\n\t\t\t\t\t when CLASS_NO=1411 then 'Burberry'\r\n\t\t\t\t\t when CLASS_NO=1416 then 'Issey Miyake'\r\n\t\t\t\t\t when CLASS_NO=1436 then 'Coach'\r\n\t\t\t\t\t when CLASS_NO=1443 then 'Elie Saab'\r\n\t\t\t\t\t when CLASS_NO=1453 then 'Hermes'\r\n\t\t\t\t\t when CLASS_NO=1461 then 'Narciso Rodriguez'\r\n\t\t\t\t\t when CLASS_NO=1474 then 'Clarins'\r\n\t\t\t\t\t when CLASS_NO=1540 then 'Elizabeth Arden'\r\n\t\t\t\t\t when CLASS_NO=1550 then 'Lancome'\r\n\t\t\t\t\t when CLASS_NO=1557 then 'La Prairie'\r\n\t\t\t\t\t when CLASS_NO=1563 then 'Dr. Hauschka'\r\n\t\t\t\t\t when CLASS_NO=1568 then 'Hugo Boss'\r\n\t\t\t\t\t when CLASS_NO=1572 then 'Lacoste'\r\n\t\t\t\t\t when CLASS_NO=1576 then 'Gucci'\r\n\t\t\t\t\t when CLASS_NO=1580 then 'Mugler'\r\n\t\t\t\t\t when CLASS_NO=1584 then 'Azzaro'\r\n\t\t\t\t\t when CLASS_NO=1588 then 'Calvin Klein'\r\n\t\t\t\t\t when CLASS_NO=1592 then 'Cartier'\r\n\t\t\t\t\t when CLASS_NO=1596 then 'Davidoff'\r\n\t\t\t\t\t when CLASS_NO=1604 then 'Givenchy'\r\n\t\t\t\t\t when CLASS_NO=1610 then 'Marc Jacobs'\r\n\t\t\t\t\t when CLASS_NO=1617 then 'Chloe'\r\n\t\t\t\t\t when CLASS_NO=1627 then 'Joop'\r\n\t\t\t\t\t when CLASS_NO=1633 then 'Missoni'\r\n\t\t\t\t\t when CLASS_NO=1657 then 'Paco Rabanne'\r\n\t\t\t\t\t when CLASS_NO=1661 then 'Valentino'\r\n\t\t\t\t\t when CLASS_NO=1665 then 'Versace'\r\n\t\t\t\t\t when CLASS_NO=1669 then 'Donna Karan'\r\n\t\t\t\t\t when CLASS_NO=1673 then 'Aramis'\r\n\t\t\t\t\t when CLASS_NO=1676 then 'Michael Kors'\r\n\t\t\t\t\t when CLASS_NO=1681 then 'Zegna'\r\n\t\t\t\t\t when CLASS_NO=1684 then 'Lab Series'\r\n\t\t\t\t\t when CLASS_NO=1688 then 'Jean Paul Gaultier'\r\n\t\t\t\t\t when CLASS_NO=1692 then 'Zadig&Voltaire'\r\n\t\t\t\t\t when CLASS_NO=1696 then 'Van Cleef & Arpels'\r\n\t\t\t\t\t when CLASS_NO=1703 then 'Stella Mccartney'\r\n\t\t\t\t\t when CLASS_NO=1709 then 'Alexander Mcqueen'\r\n\t\t\t\t\t when CLASS_NO=1712 then 'Carolina Herrera'\r\n\t\t\t\t\t when CLASS_NO=1722 then 'Roberto Cavalli'\r\n\t\t\t\t\t when CLASS_NO=1777 then 'Yves Saint Laurent'\r\n\t\t\t\t\t when CLASS_NO=1781 then 'Giorgio Armani'\r\n\t\t\t\t\t when CLASS_NO=1785 then 'Dolce&Gabanna'\r\n\t\t\t\t\t when CLASS_NO=1801 then 'La Mer'\r\n\t\t\t\t\t when CLASS_NO=1806 then 'Tom Ford Beauty'\r\n\t\t\t\t\t when CLASS_NO=1815 then 'Jo Malone London'\r\n\t\t\t\t\t when CLASS_NO=1825 then 'Salvatore Ferragamo'\r\n\t\t\t\t\t when CLASS_NO=1848 then 'Cowshed'\r\n\t\t\t\t\t when CLASS_NO=1855 then 'LOCCITANE'\r\n\t\t\t\t\t when CLASS_NO=2024 then 'Mont Blanc'\r\n\t\t\t\t\t when CLASS_NO=2028 then 'Dunhill'\r\n\t\t\t\t\t when CLASS_NO=2083 then 'Charlotte Rhys'\r\n\t\t\t\t\t when CLASS_NO=2135 then 'Suki Suki Naturals'\r\n\t\t\t\t\t when CLASS_NO=2137 then 'Skin Creamery'\r\n\t\t\t\t\t when CLASS_NO=2139 then 'Acqua Di Parma'\r\n\t\t\t\t\t when CLASS_NO=2144 then 'Vita Liberata'\r\n\t\t\t\t\t when CLASS_NO=3527 then 'Nesti Soaps'\r\n\t\t\t\t\t when CLASS_NO=4118 then 'Dior'\r\n\t\t\t\t\t when CLASS_NO=4804 then 'Revlon'\r\n\t\t\t\t\t when CLASS_NO=4820 then 'Stila'\r\n\t\t\t\t\t when CLASS_NO=5413 then 'Morgan Taylor'\r\n\t\t\t\t\t when CLASS_NO=5472 then 'Opi'\r\n\t\t\t\t\t when CLASS_NO=5927 then 'Nuxe'\r\n\t\t\t\t\t when CLASS_NO=5951 then 'Sampar'\r\n\t\t\t\t\t when CLASS_NO=9068 then 'Ren'\r\n\t\t\t\t\t when CLASS_NO=9070 then 'Decleor'\r\n\t\t\t\t\t when CLASS_NO=9071 then 'Gatineau'\r\n\t\t\t\t\t when CLASS_NO=9085 then 'Mavala'\r\n\t\t\t\t\t when CLASS_NO=9122 then 'Vichy'\r\n\t\t\t\t\t when CLASS_NO=9147 then 'Smashbox'\r\n\t\t\t\t\t when CLASS_NO=9159 then 'Tommy Hilfiger'\r\n\t\t\t\t\t when CLASS_NO=9369 then 'Yves Rocher'\r\n\t\t\t\t\t when CLASS_NO in (5306,5321,5324) then 'Telkom'\r\n\t\t\t\t\t when CLASS_NO=5310 then 'Cell C'\r\n\t\t\t\t\t when CLASS_NO=5314 then 'MTN'\r\n\t\t\t\t\t when CLASS_NO=5318 then 'Neotel'\r\n\t\t\t\t\t when CLASS_NO=5327 then 'Virgin'\r\n\t\t\t\t\t when CLASS_NO=5331 then 'Vodacom'\r\n\t\t\t\t\t when SUBCLASS_NO in (1302,1307,1324,2547,2552,2553,2554,2680,2685,3301,3303,3429,3766,5876,3860,3863,3867,4621,4754,4856,\r\n\t\t\t\t\t\t\t\t\t\t\t 4868,4870,5128,5129,5728,7141) then 'Classic Collection'\r\n\t\t\t\t\t when SUBCLASS_NO in (2378,2681,2683,2684,3096,3393,3765,3811,3861,3864,3868,3978,4304,5609,5611,5875,7015) then 'Modern'\r\n\t\t\t\t\t when SUBCLASS_NO in (2548,2550,2551,3012,3010,5126,5125,5132,7146) then 'EDITION.'\r\n\t\t\t\t\t when SUBCLASS_NO in (1121,1129,1134,1138,1140,1308,1317,1811,2465,3009,4622,5062) then 'studio.w'\r\n\t\t\t\t\t when SUBCLASS_NO in (1125,1130,1137,1139,1142,1316,1318,1812,2467,3453,7179) then 'RE:'\r\n\t\t\t\t\t when SUBCLASS_NO in (3954,4214,4467,9163,9049) then 'jtone'\r\n\t\t\t\t\t when SUBCLASS_NO in (1274,1987,9229) then 'Walkmates'\r\n\t\t\t\t\t when SUBCLASS_NO in (5157,5158,5159,5160) then 'Heatgen'\r\n\t\t\t\t\t when SUBCLASS_NO=1814 then 'Branded Kitchen Appliances'\r\n\t\t\t\t\t when SUBCLASS_NO=5989 then 'Branded Kitchen Cookware'\r\n\t\t\t\t\t when SUBCLASS_NO=5990 then 'Branded Kitchen Kitchen Accessories'\r\n\t\t\t\t\t when SUBCLASS_NO=5991 then 'Branded Kitchen Knives'\r\n\t\t\t\t\t when SUBCLASS_NO=5993 then 'Branded Dining Drinkware'\r\n\t\t\t\t\t when SUBCLASS_NO=5994 then 'Branded Dining Cutlery'\r\n\t\t\t\t\t when SUBCLASS_NO=1833 then 'Bath Time'\r\n\t\t\t\t\t when SUBCLASS_NO=2034 then 'Le Bain'\r\n\t\t\t\t\t when SUBCLASS_NO=2207 then 'Every Day'\r\n\t\t\t\t\t when SUBCLASS_NO=3100 then 'Unwind'\r\n\t\t\t\t\t when SUBCLASS_NO=3403 then 'African'\r\n\t\t\t\t\t when SUBCLASS_NO=4536 then 'Ingredients'\r\n\t\t\t\t\t when SUBCLASS_NO=4537 then 'Fresh Delights'\r\n\t\t\t\t\t when SUBCLASS_NO=4774 then 'Love Your Skin'\r\n\t\t\t\t\t when SUBCLASS_NO=9025 then 'Extracts From Nature'\r\n\t\t\t\t\t when SUBCLASS_NO=1253 then 'Simply Florals'\r\n\t\t\t\t\t when SUBCLASS_NO=2021 then 'Belle Maison'\r\n\t\t\t\t\t when SUBCLASS_NO=2896 then 'Classic Collection'\r\n\t\t\t\t\t when SUBCLASS_NO=5154 then 'Bliss'\r\n\t\t\t\t\t when SUBCLASS_NO=5861 then 'AG Mobile'\r\n\t\t\t\t\t when SUBCLASS_NO=5862 then 'Mobicel'\r\n\t\t\t\t\t when SUBCLASS_NO=5955 then 'Hisense'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY4 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO in (1,2,6,14) then 'Women'\r\n\t\t\t\t\t when GROUP_NO=5 then 'Men'\r\n\t\t\t\t\t when GROUP_NO=3 then 'Kids'\r\n\t\t\t\t\t when SUBGROUP_NO in (392,422,426) then 'Women'\r\n\t\t\t\t\t when SUBGROUP_NO in (423,427) then 'Men'\r\n\t\t\t\t\t when SUBGROUP_NO in (337,393,424) then 'Kids'\r\n\t\t\t\t\t when DEPARTMENT_NO in (108,112,113,119,121,126,139,514,526,554,610,651,654,683,707) then 'Women'\r\n\t\t\t\t\t when DEPARTMENT_NO in (141,552,642) then 'Men'\r\n\t\t\t\t\t when DEPARTMENT_NO=136 then 'Kids'\r\n\t\t\t\t\t when CLASS_NO in (1013,1035,1070,1078,1170,1198,1383,1421,1443,1451,1455,1540,1550,1557,1563,1610,1617,1633,1703,1709,\r\n\t\t\t\t\t\t\t\t\t\t 1797,1801,1855,2135,2137,2144,3527,4118,4820,5413,5472,5927,5951,9068,9071,9085,9147,9369) then 'Women'\r\n\t\t\t\t\t when CLASS_NO in (1673,1681,1684,2028) then 'Men'\r\n\t\t\t\t\t when CLASS_NO in (1714,2044,4014,2035,2047) then 'Kids'\r\n\t\t\t\t\t when SUBCLASS_NO in (1406,1413,1427,1442,1457,1549,1556,1562,1567,1844,1966,2401,2756,3471,4214,4463,4467,4725,4805,4806,\r\n\t\t\t\t\t\t\t\t\t\t4807,4808,4809,4810,5293,5857,8698,9020,9021,9022,9049,9081,9082,9126,9163,1467,1570,1574,1578,1582,1586,1590,1594,1606,\r\n\t\t\t\t\t\t\t\t\t\t1599,1690,1694,1699,1720,1754,1779,1783,1787,1826,2026,1629,1659,1663,1667,1671,1678,3677,1147,1148,1154,1160,1184,1185,\r\n\t\t\t\t\t\t\t\t\t\t1794,1190,1191,1195,1490,1507,1522,1523,1807,1823,1834) then 'Women'\r\n\t\t\t\t     when SUBCLASS_NO in (1410,1415,1435,1458,1824,2402,2757,4038,4469,4811,5858,8687,9032,9083,1468,1571,1575,1579,1583,1587,\r\n\t\t\t\t\t\t\t\t\t\t\t1591,1595,1607,1601,1691,1695,1702,1721,1776,1780,1784,1788,1827,2027,1632,1660,1664,1668,1672,1680,3680,1162,1186,1196,\r\n\t\t\t\t\t\t\t\t\t\t\t1537,1809) then 'Men'\r\n\t\t\t\t     when SUBCLASS_NO in (2384,4799,6043,9034,9051) then 'Kids'\r\n                else 'Others' end as ALTERNATE_PRODUCT_HIERARCHY5 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO=1 then 'Outerwear'\r\n\t\t\t\t\t when GROUP_NO=14 and CLASS_NO<>5248 then 'Accessories'\r\n\t\t\t\t\t when GROUP_NO=7 then 'Homeware'\r\n\t\t\t\t\t when GROUP_NO=9 then 'Cellular and Airtime'\r\n\t\t\t\t\t when SUBGROUP_NO in (261,750) and CLASS_NO not in (1790,4296,4588) then 'Outerwear'\r\n\t\t\t\t\t when SUBGROUP_NO=200 then 'Footwear'\r\n\t\t\t\t\t when SUBGROUP_NO=366 then 'Accessories'\r\n\t\t\t\t\t when SUBGROUP_NO=290 then 'Underwear'\r\n\t\t\t\t\t when SUBGROUP_NO in (425,753) then 'Homeware'\r\n\t\t\t\t\t when SUBGROUP_NO=754 then 'Beauty Services'\r\n\t\t\t\t\t when DEPARTMENT_NO in (108,112,113,119,121,130,136,141,157,158,159,162,163,514,523,528,537,548,551,552,554,566,570,575,\r\n\t\t\t\t\t\t\t\t\t\t\t 576,577,578,580,583,589,590,610,642,670,673,674,683,687)\r\n\t\t\t\t\t and CLASS_NO not in (1270,1275,1329,1330,4401,5918,9192,9391,\r\n\t\t\t\t\t\t\t\t\t\t\t 9478,9479,9494,9495,9531,9533,9551,9555) then 'Outerwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (123,153,160,165,684) and SUBCLASS_NO not in (4072,4183,6529,6546) then 'Sleepwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (128,171,179,185,663,672,711) then 'Footwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (124,126,139,154,620) then 'Underwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (129,155) then 'Hosiery and Socks'\r\n\t\t\t\t\t when DEPARTMENT_NO in (555,562,650) then 'Homeware'\r\n\t\t\t\t\t when DEPARTMENT_NO in (115,116,567,571,581,585,586,653,671,675,677) and CLASS_NO not in (2995,2996,3318,3327,3338,3343,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 5274,5349,9451,9453) and SUBCLASS_NO<>5410 then 'Accessories'\r\n\t\t\t\t\t when CLASS_NO in (1338,1360,4859,5622) then 'Outerwear'\r\n\t\t\t\t\t when CLASS_NO in (1270,1329,2995,3327,3338,5248,5639,9192,9451) then 'Footwear'\r\n\t\t\t\t\t when CLASS_NO in (1275,1790,4296,4588,9479,9495,9533,9555) then 'Accessories'\r\n\t\t\t\t\t when CLASS_NO in (1773,1995,2010,2655,2661,4401,4887,4890,4892,4903,4906,5633,5773) then 'Underwear'\r\n\t\t\t\t\t when CLASS_NO in (1330,2002,2012,2996,3318,3343,4899,5274,5349,5918,9453) then 'Hosiery and Socks'\r\n\t\t\t\t\t when CLASS_NO in (1361,1771,2650,5484,5766,9391,9478,9494,9531,9551) then 'Sleepwear'\r\n\t\t\t\t\t when CLASS_NO=1459 then 'Beauty Skin'\r\n\t\t\t\t\t when CLASS_NO=1455 then 'Beauty Colour'\r\n\t\t\t\t\t when CLASS_NO in (2392,9033) then 'Beauty Gifting and Special Occasions'\r\n\t\t\t\t\t when CLASS_NO in (1763,1764,4716,5345) then 'Beauty Accessories and Bags'\r\n\t\t\t\t\t when SUBCLASS_NO in (1895,4529,4931,4933,6423,6424) then 'Outerwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (1352,4072,4183,5410,5620,6529,6546) then 'Footwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (1359,1852,3740,4932,5621,6421) then 'Accessories'\r\n\t\t\t\t\t when SUBCLASS_NO in (4525,4526) then 'Underwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (4078) then 'Hosiery and Socks'\r\n\t\t\t\t\t when SUBCLASS_NO in (1014,1178,1802,2138,2145,5928,5952,9078,9081,9084,9126,9323,4315,1818,1147,1184,1190,1507,1547,1553,\r\n\t\t\t\t\t\t\t\t\t\t\t 1560,1564,1834,4774,1966,9020,9032,1021,1839,1843,2136,1362,1366,9079,9082,9083,1368,1369,1371,4038,4725,1537) then 'Beauty Skin'\r\n\t\t\t\t\t when SUBCLASS_NO in (1182,1803,4316,1067,4807,5418,5473,9090,9325,1148,1794,1191,1523,1545,1554,1559,1566,1823,9644,1038,\r\n\t\t\t\t\t\t\t\t\t\t\t 1040,1042,1069,1071,1077,1113,1079,1202,1203,1205,1206,1207,1840,1373,4805,4806,4808,4809,5293,1374,4821,4822,4823,4824,\r\n\t\t\t\t\t\t\t\t\t\t\t 1375,5417,5474,5476,5478,5479,1854,9088,9089,1381,2848,2850,2851,9150) then 'Beauty Colour'\r\n\t\t\t\t\t when SUBCLASS_NO in (4317,1847,4810,4811,1856,2086,1816,2141,1160,1162,1185,1186,1195,1196,1490,1546,1551,1558,8687,8698,\r\n\t\t\t\t\t\t\t\t\t\t\t 9049,1388,1397,1402,1406,1410,1412,1413,1415,1422,1427,1435,1441,1442,1824,1446,1452,1456,1457,1458,1462,1467,1468,1569,\r\n\t\t\t\t\t\t\t\t\t\t\t 1570,1571,1573,1574,1575,1577,1578,1579,1581,1582,1583,1585,1586,1587,1589,1590,1591,1593,1594,1595,1605,1606,1607,1598,\r\n\t\t\t\t\t\t\t\t\t\t\t 1599,1601,1614,1615,1621,1622,1628,1629,1632,1641,1643,1658,1659,1660,1662,1663,1664,1666,1667,1668,1670,1671,1672,1674,\r\n\t\t\t\t\t\t\t\t\t\t\t 1675,1677,1678,1680,1682,1683,1685,1686,1687,1689,1690,1691,1693,1694,1695,1698,1699,1702,1704,1708,1710,1711,1715,1720,\r\n\t\t\t\t\t\t\t\t\t\t\t 1721,1753,1754,1776,1778,1779,1780,1782,1783,1784,1786,1787,1788,1817,1819,1820,1826,1827,1828,2025,2026,2027,2030,2031,\r\n\t\t\t\t\t\t\t\t\t\t\t 2142,4123,9099,3677,3680,9161,9383,1807,1809) then 'Beauty Fragrance'\r\n\t\t\t\t\t when SUBCLASS_NO in (1849,1850,1851,1945,2085,2087,3528,4287,9327,1833,2034,2207,3100,3403,4536,4537,9025,1253,2021,2896,\r\n\t\t\t\t\t\t\t\t\t\t\t 5154,7797,4207,4208,2211,4214,1798,1799,1800,1154,1522,1548,1555,1561,1565) then 'Beauty Bath and Body'\r\n\t\t\t\t     when SUBCLASS_NO in (1169,1187,1197,1539,1549,1556,1562,1567,1796,1810) then 'Beauty Gifting and Special Occasions'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY6,\r\n\t\t\t\tcase when a.TILL_NO=997 then 3\r\n\t\t\t\t\twhen a.TILL_NO=999 then 2\r\n\t\t\t\telse 1 end as SALES_CHANNEL_CODE,\r\n\t\t\t\ta.area_no,a.area_name,a.region_no,a.region_name,a.location_name,nvl(a.alternate_location_hierarchy1,'No Value') as alternate_location_hierarchy1,\r\n\t\t\t\ta.alternate_location_hierarchy2, a.alternate_location_hierarchy3 , a.alternate_location_hierarchy4,\r\n\t\t\t\ta.alternate_location_hierarchy5 , a.alternate_location_hierarchy6,\r\n\t\t\t\tnvl(a.discount_code,0) as discount_code,nvl(a.RMS_PROMOTION_NO,'No Value') as RMS_PROMOTION_NO,nvl(a.ATG_PROMOTION_NO,'No Value') as ATG_PROMOTION_NO ,nvl(a.ATG_LOYALTY_PROMOTION_NO,'No Value') as ATG_LOYALTY_PROMOTION_NO,nvl(a.EOL_PROMOTION_NO,'No Value') as EOL_PROMOTION_NO,\r\n\t\t\t\tnvl(a.rms_discount_selling,0) as rms_discount_selling,  nvl(a.RMS_DISCOUNT_SELLING_VAT_EXCL,0) as RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.loyalty_discount_selling,0) as loyalty_discount_selling, nvl(a.LOYALTY_DISCOUNT_SELLING_VAT_EXCL,0) as LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.atg_discount_selling,0) as atg_discount_selling,  nvl(a.ATG_DISCOUNT_SELLING_VAT_EXCL,0) as ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.atg_loyalty_discount_selling,0) as atg_loyalty_discount_selling, nvl(a.ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,0) as ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.eol_discount_selling,0) as eol_discount_selling, nvl(a.EOL_DISCOUNT_SELLING_VAT_EXCL,0) as EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.wfs_discount_selling,0) as wfs_discount_selling,  nvl(a.WFS_DISCOUNT_SELLING_VAT_EXCL,0) as WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.staff_discount_selling,0) as staff_discount_selling, nvl(a.STAFF_DISCOUNT_SELLING_VAT_EXCL,0) as STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.VOUCHER_DISCOUNT_SELLING,0) as VOUCHER_DISCOUNT_SELLING, nvl(a.VOUCHER_DISCOUNT_SELLING_VAT_EXCL,0) as VOUCHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.other_discount_selling,0) as other_discount_selling,nvl(a.OTHER_DISCOUNT_SELLING_VAT_EXCL,0) as OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.MARKDOWN_SEQ_NO,0) as MARKDOWN_SEQ_NO,nvl(a.store_card_tender_count,0) as store_card_tender_count,nvl(a.store_card_tran_tender_selling,0) as store_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.credit_card_tender_count,0) as credit_card_tender_count, nvl(a.credit_card_tran_tender_selling,0) as credit_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.gift_card_tender_count,0) as gift_card_tender_count, nvl(a.gift_card_tran_tender_selling,0) as gift_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.alien_card_tender_count,0) as alien_card_tender_count, nvl(a.alien_card_tran_tender_selling,0) as alien_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.cash_tender_ind,0) as cash_tender_ind, nvl(a.cash_tran_tender_selling,0) as cash_tran_tender_selling,\r\n\t\t\t\tnvl(a.other_tender_count,0) as other_tender_count, nvl(a.other_tran_tender_selling,0) as other_tran_tender_selling,\r\n\t\t\t\t---1 as voucher_no,\r\n\t\t\t\tnvl(a.voucher_tender_count,0) as voucher_tender_count, nvl(a.voucher_tran_tender_selling,0) as voucher_tran_tender_selling,\r\n\t\t\t\tnvl(a.ucid,'No Value') as ucid,\r\n\t\t\t    a.CUSTOMER_COHORT_FY,\r\n\t\t\t\ta.customer_cohort_fh,\r\n                a.customer_cohort_fq,\r\n                a.customer_cohort_fm,\r\n                'No Value' as customer_cohort_fw,\r\n\t\t\t\tnvl(a.age,0) as age,\r\n\t\t\t\ta.age_band as age_band_fy,\r\n\t\t\t\t'No Value' as age_band_fh,\r\n\t\t\t    'No Value' as age_band_fq,\r\n\t\t\t    'No Value' as age_band_fm,\r\n\t\t\t    'No Value' as age_band_fw,\r\n\t\t\t\tcase when a.gender='u' or a.gender is null then 'NO VALUE' else a.gender end as gender,\r\n\t\t\t\tcase when a.derived_race='RACE UNKNOWN' or a.derived_race is null then 'NO VALUE' else a.derived_race end as derived_race,a.acquisition_date,\r\n\t\t\t\ta.HOUSEHOLD_INCOME_BAND_FY, a.MACRO_SEGMENT_FY , a.MICRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as EMPLOYEE_STATUS_CODE,\r\n\t\t\t\t-1 as store_card_count,             --p2\r\n\t\t\t\t-1 as wrewards_card_count,          --p2\r\n\t\t\t\t-1 as myschool_card_count,          --p2\r\n\t\t\t\t-1 as credit_card_count,            --p2\r\n\t\t\t\t-1 as littleworld_membership_count, --p2\r\n\t\t\t\t-1 as vitality_membership_count,    --p2\r\n\t\t\t\t-1 as non_rewards_card_count       --p2\r\n\t\t\t\t,nvl(d.UDA_104_VALUE_NO,'0') as UDA_104_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_104_VALUE_DESC,'No Value') as UDA_104_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_300_VALUE_NO,'0') as UDA_300_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_300_VALUE_DESC,'No Value') as UDA_300_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_306_VALUE_NO,'0') as UDA_306_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_306_VALUE_DESC,'No Value') as UDA_306_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_310_VALUE_NO,'0') as UDA_310_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_310_VALUE_DESC,'No Value') as UDA_310_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_316_VALUE_NO,'0') as UDA_316_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_316_VALUE_DESC,'No Value') as UDA_316_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_320_VALUE_NO,'0') as UDA_320_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_320_VALUE_DESC,'No Value') as UDA_320_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_327_7703_7707_7708_VALUE_NO,'0') as UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_327_7703_7707_7708_VALUE_DESC,'No Value') as UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_2301_VALUE_NO,'0') as UDA_2301_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_2301_VALUE_DESC,'No Value') as UDA_2301_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_7702_VALUE_NO,'0') as UDA_7702_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_7702_VALUE_DESC,'No Value') as UDA_7702_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_7704_VALUE_NO,'0') as UDA_7704_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_7704_VALUE_DESC,'No Value') as UDA_7704_VALUE_DESC\r\n\t\t\t\t,nvl(a.VITALITY_UDA_VALUE_NO,-1) as VITALITY_UDA_VALUE_NO,\r\n\t\t\t\tnvl(a.wrewards_swipe_ind,0) as wrewards_swipe_ind, nvl(a.myschool_swipe_ind,0) as myschool_swipe_ind,\r\n\t\t\t\ta.VMP_IND,\r\n\t\t\t\ta.TRAN_DATE||'-'||a.LOCATION_NO||'-'||a.TILL_NO||'-'||a.TRAN_NO as basket_id,'1900-01-01' as LAST_UPDATED_DATE\r\n\t\t\t\t--b.LOYALTY_PROMOTION_NO,  --p2 not there in excel sheet\r\n\t\t\t\t--b.WFS_PROMOTION_NO,      --p2  not there in excel sheet\r\n\t\t\t\t--b.STAFF_PROMOTION_NO,    --p2  not there in excel sheet\r\n\t\t\t\t--b.FRANCHISE_PROMOTION_NO ,--p2  not there in excel sheet\r\n\t\tFROM #WNS_CUST_BASKET_ITEM_TEMP a\r\n\t\tLEFT JOIN #wns_nm_fnd_item b\r\n\t\t\t\tON A.ITEM_NO = B.ITEM_NO\r\n\t\tleft join development.wns_hs_Item_Colour_Family c\r\n\t\t\t\tON A.ITEM_NO = c.ITEM_NO\r\n\t\tleft join #wns_kr_uda_info d\r\n\t\t\t\tON A.ITEM_NO = d.ITEM_NO\r\n\t\tleft join #wns_kr_Tran_discount_selling_vat_exc E\r\n\t\t\t\tON A.TRAN_DATE = E.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = E.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = E.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = E.TRAN_NO)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS #WNS_CUST_BASKET_ITEM_TEMP ;\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item ;\r\nDROP TABLE IF EXISTS #wns_kr_uda_info;\r\nDROP TABLE IF EXISTS #wns_kr_Tran_discount_selling_vat_exc;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT E - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT F - Combining One time run Base table with Base_Table_One_Day_Data(formed above)                                  *****************/\r\n/******************************************************************************************************************************************/\r\nDROP TABLE IF EXISTS DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay]\r\nAS\r\n(SELECT * FROM DEVELOPMENT.$[vCBI])  --One Time run base table  DEVELOPMENT.CUST_BASKET_ITEM_{3}\r\nUNION ALL\r\n(SELECT * FROM DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName])  --daily run base table\r\n;\r\n\r\n\r\n-- Drop previous week's Base Table\r\nTRUNCATE DEVELOPMENT.$[vCBI];\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT G - Mapping updated UCIDs and other details in the consolidated base table formed in Script F                                  *****************/\r\n/******************************************************************************************************************************************/\r\ndrop table if exists DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay];\r\nCreate Table DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay]\r\ndiststyle all as\r\n(select perm_ucid_hashed, ucid_type\r\n\tfrom DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tgroup by 1,2\r\n) $[vLimit];\r\n\r\n--Execution time: 22.88s\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay] AS\r\n      select\r\n\t\t\tb.tran_date, b.location_no, b.till_no, b.tran_no, B.perm_ucid_hashed as ucid,c.BIRTH_DATE,\r\n\t\t\tc.AGE_YEARS\t,\r\n\t\t\tcase when c.gender='u' or c.gender is null then 'NO VALUE' else c.gender end as gender,\r\n\t\t\tcase when c.derived_race='RACE UNKNOWN' or c.derived_race is null then 'NO VALUE' else c.derived_race end as derived_race,\r\n\t\t\td.ACQUISITION_DATE,f.ucid_type\r\n\t\t\tfrom\r\n\t\t\tdevelopment.CUST_BASKET_MAPPING b    -- for current ucid only we need to merge all this.\r\n\t\t\tleft join\r\n\t\t\tDEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] c   -- for demographic  we will add age_band here.\r\n\t\t\ton b.perm_ucid_hashed = c.ucid\r\n\t\t\tleft join\r\n\t\t\tDEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName] d -- for aqusiotion date only\r\n\t\t\ton b.perm_ucid_hashed = d.ucid\r\n\t\t\tleft join DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay] f  -- using ucid_types we will merge this also. not needed we can take this up from WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName]\r\n\t\t\ton b.perm_ucid_hashed = f.perm_ucid_hashed $[vLimit];\r\n--Execution time: 32.83s\r\ndrop table if exists DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay];\r\n\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] AS\r\nSELECT *,\r\n(a.tran_date -cast(BIRTH_DATE as date))/365 AS AGE_TD  ,\r\n--- add age_fy this is a year wise age and fixed for each year.\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no ) as age_fy,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO ) as age_fh,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO ) as age_fq,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO,b.fin_month_no ) as age_fm,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO,b.fin_month_no,b.FIN_WEEK_NO ) as age_fw\r\nFROM DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay] A\r\nLEFT JOIN (SELECT DISTINCT FIN_YEAR_NO, FIN_HALF_NO, FIN_QUARTER_NO, FIN_MONTH_NO, FIN_WEEK_NO ,CALENDAR_DATE FROM ANALYTICS.FND_CALENDAR) B\r\nON A.TRAN_DATE=B.CALENDAR_DATE\r\n;\r\ndelete from DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] where FIN_YEAR_NO<=2017;\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay];\r\n--Execution time: 42.19s\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay] AS\r\nSELECT A.*,j.TIER_FY,j.TIER_FH,j.TIER_Fq,j.TIER_FM\r\nFROM DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] A\r\nLEFT JOIN  development.wns_adj_tier_wise$[vDayName] j    -- for tier only we need to merge this also\r\nON A.fin_year_no = j.fin_year_no\r\nAND A.fin_month_no = j.fin_month_no\r\nAND A.ucid = j.ucid\r\n;\r\ncreate table development.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay]\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect A.*,c.effective_from_date\r\nfrom DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay] A\r\n  left join (\tselect\r\n\t                        CAST (location_no as SMALLINT) as location_no,\r\n\t                        CAST (till_no as SMALLINT) as till_no,\r\n\t                        CAST (tran_no as INTEGER ) as tran_no,\r\n\t                        tran_date,effective_from_date,effective_to_date\r\n\t                        from development.cust_basket_mapping_tracking\r\n\t                        where effective_to_date is null and tran_date>='2017-06-26'\r\n\t                    ) c\r\n        \t\tON A.TRAN_DATE = c.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = c.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = c.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = c.TRAN_NO\r\n$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\n--Execution time: 37.92s\r\n/******************************************************************************************************************************************/\r\n/* END OF SCRIPT G - Mapping updated UCIDs and other details in the consolidated base table formed in Script F                                  *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\nINSERT INTO DEVELOPMENT.$[vCBI]\r\n\t (\r\n\t\tSELECT a.tran_date, a.location_no, a.till_no, a.tran_no,\r\n\t\t\t\ta.tran_time,a.tran_ind,a.tran_type,a.tran_qty,\r\n\t\t\t\ta.tran_selling ,a.tran_selling_vat_excl ,--p2\r\n\t\t\t\ta.discount_selling,a.DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no,\r\n\t\t\t\ta.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\ta.TIME_OF_DAY_CODE,a.item_seq_no,\r\n\t\t\t\ta.item_no, a.item_level1_no, a.ITEM_SHORT_DESC,a.item_tran_type,\r\n\t\t\t\ta.item_tran_qty,a.item_tran_selling,a.ITEM_TRAN_SELLING_VAT_EXCL,\r\n\t\t\t\ta.item_discount_selling,a.ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.WASTE_DISCOUNT_PERC,a.vat_rate_perc,\r\n\t\t\t\ta.colour_family,a.BUSINESS_UNIT_NO,a.BUSINESS_UNIT_NAME,a.GROUP_NO,a.GROUP_NAME,\r\n\t\t\t\ta.SUBGROUP_NO,a.SUBGROUP_NAME, a.DEPARTMENT_NO,a.DEPARTMENT_NAME,a.CLASS_NO,a.CLASS_NAME,a.SUBCLASS_NO,a.SUBCLASS_NAME,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY1 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY2 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY3 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY4 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY5 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY6,\r\n\t\t\t\ta.SALES_CHANNEL_CODE,\r\n\t\t\t\ta.area_no,a.area_name,a.region_no,a.region_name,a.location_name,a.alternate_location_hierarchy1,\r\n\t\t\t\ta.alternate_location_hierarchy2, a.alternate_location_hierarchy3 , a.alternate_location_hierarchy4,\r\n\t\t\t\ta.alternate_location_hierarchy5 , a.alternate_location_hierarchy6,\r\n\t\t\t\ta.discount_code,a.RMS_PROMOTION_NO,a.ATG_PROMOTION_NO,a.ATG_LOYALTY_PROMOTION_NO,a.EOL_PROMOTION_NO,\r\n\t\t\t\ta.rms_discount_selling,  a.RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.loyalty_discount_selling, a.LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.atg_discount_selling,  a.ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.atg_loyalty_discount_selling, a.ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.eol_discount_selling, a.EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.wfs_discount_selling,  a.WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.staff_discount_selling, a.STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.VOUCHER_DISCOUNT_SELLING,\r\n                a.VOUCHER_DISCOUNT_SELLING_VAT_EXCL,\r\n\t\t\t\ta.other_discount_selling,a.OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.MARKDOWN_SEQ_NO,a.store_card_tender_count,a.store_card_tran_tender_selling,\r\n\t\t\t\ta.credit_card_tender_count, a.credit_card_tran_tender_selling,\r\n\t\t\t\ta.gift_card_tender_count, a.gift_card_tran_tender_selling,\r\n\t\t\t\ta.alien_card_tender_count, a.alien_card_tran_tender_selling,\r\n\t\t\t\ta.cash_tender_ind, a.cash_tran_tender_selling,\r\n\t\t\t\ta.other_tender_count, a.other_tran_tender_selling,\r\n\t\t\t\t--a.voucher_no,\r\n\t\t\t\ta.voucher_tender_count, a.voucher_tran_tender_selling,\r\n\t\t\t\tnvl(b.ucid ,'No Value') as ucid,\r\n\t\t\t\t--case when b.ucid_type in ('KNOWN') AND e.customer_current_tier_code IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t--\twhen b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t--\tWHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t--\tWHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\t--\telse 'CASH'\r\n\t\t\t\t--\tEND AS CUSTOMER_COHORT,--p2\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fy IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FY,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fh IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FH,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fq IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FQ,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fm IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FM,\r\n\t           'No Value' as customer_cohort_fw,\r\n\t\t\t\tnvl(b.age_td,0) as age,\r\n\t\t\t\tcase when b.age_fy between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fy between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fy between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fy between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fy>=55 then '55+' else 'No Value' end as AGE_BAND_FY,--p2\r\n                case when b.age_fh between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fh between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fh between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fh between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fh>=55 then '55+' else 'No Value' end as AGE_BAND_FH,--p2\r\n                case when b.age_fq between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fq between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fq between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fq between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fq>=55 then '55+' else 'No Value' end as AGE_BAND_FQ,--p2\r\n\t\t\t\tcase when b.age_fm between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fm between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fm between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fm between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fm>=55 then '55+' else 'No Value' end as AGE_BAND_FM,--p2\r\n\t\t\t\tcase when b.age_fw between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fw between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fw between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fw between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fw>=55 then '55+' else 'No Value' end as AGE_BAND_FW,--p2\r\n\t\t\t\tcase when b.gender='u' or b.gender is null then 'NO VALUE' else b.gender end as gender,\r\n\t\t\t\tcase when b.derived_race='RACE UNKNOWN' or b.derived_race is null then 'NO VALUE' else b.derived_race end as derived_race,\r\n\t\t\t\tcase WHEN b.ACQUISITION_DATE IS NULL THEN '1999-01-01'\r\n\t\t\t\t\t WHEN b.ACQUISITION_DATE<'1999-01-01' THEN '1999-01-01' -- THE FIRST DATE IN CUST_BASKET IS 1999-06-04\r\n\t                 WHEN b.ACQUISITION_DATE>=(CURRENT_DATE+1) THEN CURRENT_DATE\r\n\t\t\t\tELSE b.ACQUISITION_DATE END AS acquisition_date,\r\n\t\t\t\ta.HOUSEHOLD_INCOME_BAND_FY, a.MACRO_SEGMENT_FY , a.MICRO_SEGMENT_FY ,\r\n\t\t\t\ta.EMPLOYEE_STATUS_CODE, -- @adj sep\r\n\t\t\t\ta.store_card_count,             --p2\r\n\t\t\t\ta.wrewards_card_count,          --p2\r\n\t\t\t\ta.myschool_card_count,          --p2\r\n\t\t\t\ta.credit_card_count,            --p2\r\n\t\t\t\ta.littleworld_membership_count, --p2\r\n\t\t\t\ta.vitality_membership_count,    --p2\r\n\t\t\t\ta.non_rewards_card_count       --p2\r\n\t\t\t\t,nvl(a.UDA_104_VALUE_NO,'0') as UDA_104_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_104_VALUE_DESC,'No Value') as UDA_104_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_300_VALUE_NO,'0') as UDA_300_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_300_VALUE_DESC,'No Value') as UDA_300_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_306_VALUE_NO,'0') as UDA_306_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_306_VALUE_DESC,'No Value') as UDA_306_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_310_VALUE_NO,'0') as UDA_310_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_310_VALUE_DESC,'No Value') as UDA_310_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_316_VALUE_NO,'0') as UDA_316_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_316_VALUE_DESC,'No Value') as UDA_316_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_320_VALUE_NO,'0') as UDA_320_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_320_VALUE_DESC,'No Value') as UDA_320_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_327_7703_7707_7708_VALUE_NO,'0') as UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_327_7703_7707_7708_VALUE_DESC,'No Value') as UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_2301_VALUE_NO,'0') as UDA_2301_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_2301_VALUE_DESC,'No Value') as UDA_2301_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_7702_VALUE_NO,'0') as UDA_7702_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_7702_VALUE_DESC,'No Value') as UDA_7702_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_7704_VALUE_NO,'0') as UDA_7704_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_7704_VALUE_DESC,'No Value') as UDA_7704_VALUE_DESC\r\n\t\t\t\t,a.VITALITY_UDA_VALUE_NO,a.wrewards_swipe_ind, a.myschool_swipe_ind,a.VMP_IND,\r\n\t\t\t\ta.basket_id,b.effective_from_date as LAST_UPDATED_DATE\r\n\t\t\t\t--a.LOYALTY_PROMOTION_NO,  --p2 not there in excel sheet\r\n\t\t\t\t--a.WFS_PROMOTION_NO,      --p2  not there in excel sheet\r\n\t\t\t\t--a.STAFF_PROMOTION_NO,    --p2  not there in excel sheet\r\n\t\t\t\t--a.FRANCHISE_PROMOTION_NO ,--p2  not there in excel sheet\r\n\t\tfrom\r\n\t\t\tDEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay] a\r\n\t\t\tleft join\r\n\t\t\tdevelopment.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay] b    --BC UCID gets updated (TTCI)\r\n\t\t\ton a.tran_date = b.tran_date\r\n\t\t\tand a.location_no = b.location_no\r\n\t\t\tand a.till_no = b.till_no\r\n\t\t\tand a.tran_no = b.tran_no\r\n\t\t   \t)$[vLimit];\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_wise$[vDayName];\r\nDROP TABLE IF EXISTS #wns_kr_cust_card_mapping;\r\nDROP TABLE IF EXISTS #wns_kr_tier_year_wise;\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\nDROP TABLE IF EXISTS development.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay];\r\ngrant select on table DEVELOPMENT.$[vCBI] to public ;", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\r\nDEMO_TABLE = DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n#TT_TABLE = DEVELOPMENT.WNS_AS_DD_TENDER_TYPE_MAPPING_02FEB\r\nBASKET_MAPPING = DEVELOPMENT.CUST_BASKET_MAPPING\r\nlast_updated_date = '2015-01-01' = {0} \r\nFinYearFinWeek = {1} \r\nFinYearFinWeek - 1 = {3}\r\ncust_basket_item_table_name ={4}\r\nlimit = {5}\r\ncomment = {6}\r\n*/\r\n\r\n/*0} last_updated_date '2021-01-04' , max last date updated\r\n{1} DEVELOPMENT.CUST_BASKET_ITEM_{1}, DEVELOPMENT.CUST_BASKET_ITEM_Thursday\r\n{2} fin year month and day, if run today, TEMP_CONS_CUST_BASKET_ITEM_202127_Thursday\r\n{4} cust_basket_item  --is name of table\r\n{5} limit\r\n{6} some comment */\r\n\r\n--WbVarDef -variable=vlast_updated_date    -query= \"select max(last_updated_date) from analytics.fnd_cust_basket\";   --{0}\r\nWbVarDef vlast_updated_date  = '2020-01-01' ;   --{0}\r\nWbVarDef -variable=vDayName              -query= \"select to_char(current_date-1,'Day')\";                          --{1}\r\nWbVarDef -variable=vFinYearWeekNoDay     -query= \"Select fin_year_no||fin_week_no from analytics.fnd_calendar where calendar_date = current_date-1\";   --{2}\r\nWbVarDef vCBI                  = 'cust_basket_item';                                                                                     --{4]\r\nWbVarDef vLimit                = '';   --{5}\r\nWbVarDef vComment              = '';   --{6}\r\n\r\n/*current_date_$[vlast_updated_date];\r\nselect $[vDayName];\r\nselect $[vFinYearWeekNoDay];\r\nselect $[vCBI];\r\nselect $[vLimit];\r\nselect $[vComment];*/\r\n\r\n/*\r\n-- ANALYTICS.FND_CUSTOMER\r\n-- ANALYTICS.FND_CUSTOMER_MASTER\r\n-- ANALYTICS.FND_CUST_BASKET\r\n-- ANALYTICS.FND_CUST_FV_VOUCHER\r\n-- ANALYTICS.FND_CUSTOMER_PORTFOLIO\r\n-- ANALYTICS.FND_CUST_BASKET_TENDER\r\n-- ANALYTICS.FND_CALENDAR\r\n-- ANALYTICS.FND_LOCATION\r\n-- ANALYTICS.FND_WOD_TIER_MTH_DETAIL\r\n-- ANALYTICS.FND_CUST_BASKET_ITEM\r\n-- ANALYTICS.FND_ITEM\r\n-- ANALYTICS.FND_CUST_BASKET_AUX\r\n-- DEVELOPMENT.WNS_AS_DD_TENDER_TYPE_MAPPING_02FEB (fixed, needs t\r\n-- DEVELOPMENT.CUST_BASKET_MAPPING\r\n-- DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n-- DEVELOPMENT.FND_LST_EA_CODES\r\n-- DEVELOPMENT.FND_ROG_SOC_LOCATION\r\n-- analytics.FND_CUSTOMER_CARD\r\n-- DEVELOPMENT.FND_CUST_DERIVED_RACE_REF\r\n*/\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - Collating Demographic Details ***********************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- CREATE A NEW REFTABLE FOR THE SEP END RUN\r\nCREATE TABLE #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName] AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;\r\n-- Execution time: 8.44s\r\n\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_INFO_$[vDayName] AS (\r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName]\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE)$[vLimit];\r\n-- Execution time: 16.48s\r\n\r\n--ADDING ALL THE REQUIRED INFORMATION IN ONE TABLE(HHI+DEMOGRAPHICS)\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_INFO_$[vDayName] A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY)$[vLimit];\r\n-- Execution time: 35.36s\r\n\r\n--CREATING TABLE TO DERIVE AGE AND GENDER FROM ID INFORMATION\r\nCREATE TABLE #wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))))$[vLimit];\r\n-- Execution time: 8.34s\r\n\r\n---AGE FROM ID INFORMATION\r\nCREATE TABLE #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO)$[vLimit];\r\n-- Execution time: 21.33s\r\n\r\n--------REMOVING DUPLICATES AT UCID, SUBSCRIBER_KEY LEVEL\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 47.39s\r\n\r\n--------REMOVING DUPLICATES AT UCID\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 15.12s\r\n\r\n--FINAL TABLE -- CONSIDERING THE UCID WITH LATEST MODIFIED INFORMATION\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName]\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1)$[vLimit];\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_TT_UCID_REFTABLE_$[vDayName];\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_INFO_$[vDayName];\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS #wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_UCID_HHI_DEMO_TEMP3;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT B - Creating base table from CUST_BASKET data using loyalty, promotional, voucher & calendar details ****************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- Snapshot of the CUST_BASKET table\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE, TRAN_TIME, TRAN_TYPE, TRAN_SELLING, DISCOUNT_SELLING, WASTE_IND,\r\n\t\t\t\tLOYALTY_WW_SWIPE_NO, LOYALTY_EXT_SWIPE_NO, CUSTOMER_NO,VMP_IND,\r\n\t\t\t\tROW_NUMBER() OVER(PARTITION BY TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO ORDER BY LAST_UPDATED_DATE DESC) AS LATEST_FLAG\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]') $[vLimit];\r\n-- Execution time: 1m 22s\r\n\r\n-- REMOVING OLDER ROWS OF A TRANSACTION\r\nDELETE FROM #wns_nm_DD_FND_CUST_BASKET_TEMP WHERE LATEST_FLAG>1;\r\n-- 0 rows affected\r\n-- Execution time: 0.18s\r\n\r\ndrop table if exists development.wns_adj_new_pos_logic_$[vDayName] ;\r\ncreate table development.wns_adj_new_pos_logic_$[vDayName]\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect  a.LOCATION_NO, a.TILL_NO, a.TRAN_NO, a.TRAN_DATE, a.TRAN_TIME,  TRAN_SELLING, DISCOUNT_SELLING, WASTE_IND,\r\n                LOYALTY_WW_SWIPE_NO, LOYALTY_EXT_SWIPE_NO, CUSTOMER_NO,VMP_IND,\r\n--case when item_tran_type  in ('R','V','Q','S') then item_tran_type else tran_type end as tran_type_new,\r\nnvl(item_tran_type,tran_type) as tran_type\r\nfrom #wns_nm_DD_FND_CUST_BASKET_TEMP A\r\nleft join (select TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO,\r\n\t\t\t\tcase when item_TRAN_TYPE in ('R','Q','V') then item_TRAN_TYPE else null end as item_TRAN_TYPE\r\n\t\t\tfrom(\r\n\t\t\t\tselect TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO,\r\n\t\t\t\tcount(distinct TRAN_TYPE) as item_TRAN_TYPE_count,\r\n\t\t\t\tmax( TRAN_TYPE) as item_TRAN_TYPE\r\n\t\t\t\tfrom analytics.fnd_cust_basket_item\r\n\t\t\t\tgroup by 1,2,3,4\r\n                ) where item_TRAN_TYPE_count=1\r\n           ) B\r\n           ON A.TRAN_DATE=B.TRAN_DATE\r\n           AND A.LOCATION_NO=B.LOCATION_NO\r\n           AND A.TILL_NO=B.TILL_NO\r\n           AND A.TRAN_NO=B.TRAN_NO;\r\n\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID\r\n    DISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n        SELECT A.LOCATION_NO ,\r\n                A.TILL_NO ,\r\n                A.TRAN_NO ,\r\n                A.TRAN_DATE ,\r\n                A.TRAN_TIME ,\r\n                A.TRAN_TYPE ,\r\n                A.WASTE_IND ,\r\n                A.TRAN_SELLING ,\r\n                A.DISCOUNT_SELLING ,\r\n                A.LOYALTY_WW_SWIPE_NO ,A.LOYALTY_EXT_SWIPE_NO ,\r\n                A.CUSTOMER_NO ,A.VMP_IND,\r\n               (CASE WHEN A.TRAN_TYPE='S' THEN 1 WHEN A.TRAN_TYPE='V' THEN -1 ELSE 0 END) AS TRAN_IND,\r\n                B.UCID\r\n        FROM development.wns_adj_new_pos_logic_$[vDayName] A\r\n        LEFT JOIN (SELECT TRAN_DATE,LOCATION_NO,TILL_NO,TRAN_NO, MAX(PERM_UCID_HASHED) as UCID FROM DEVELOPMENT.CUST_BASKET_MAPPING\r\n                    GROUP BY 1,2,3,4) B\r\n        ON A.TRAN_DATE=B.TRAN_DATE\r\n           AND A.LOCATION_NO=B.LOCATION_NO\r\n           AND A.TILL_NO=B.TILL_NO\r\n           AND A.TRAN_NO=B.TRAN_NO)$[vLimit];\r\n-- Execution time: 52.55s\r\ndrop table if exists development.wns_adj_new_pos_logic_$[vDayName] ;\r\n\r\n\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP DISTSTYLE ALL AS (\r\n\tSELECT perm_ucid_hashed as UCID,UCID_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 18.34s\r\n\r\n-- ATTACH UCID_TYPE TO THE DATA\r\nCREATE TABLE #wns_nm_DD_CUST_BASKET_UCID_TYPE\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TRAN_TIME, A.TRAN_TYPE, A.WASTE_IND,\r\n\t\t\t\tA.LOYALTY_WW_SWIPE_NO, A.LOYALTY_EXT_SWIPE_NO, A.CUSTOMER_NO,A.VMP_IND, A.TRAN_IND, A.UCID, A.TRAN_SELLING,\r\n\t\t\t\tA.DISCOUNT_SELLING, C.AGE_YEARS AS AGE, C.DERIVED_RACE AS RACE, C.GENDER AS GENDER,\r\n\t\t\t\tC.HOUSEHOLD_INCOME_SUBRANGE AS HOUSEHOLD_INCOME, B.UCID_TYPE\r\n\t\tFROM #wns_nm_DD_CUST_BASKET_UCID A\r\n\t\tLEFT JOIN #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP B\r\n\t\tON A.UCID=B.UCID\r\n\t\tLEFT JOIN DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] C\r\n\t    ON A.UCID=C.UCID)$[vLimit];\r\n-- Execution time: 58.12s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_FV_VOUCHER_TEMP\r\n\tDISTKEY(REDEEMED_DATE) COMPOUND SORTKEY(REDEEMED_DATE, REDEEMED_STORE, REDEEMED_TILL_NO, REDEEMED_TRAN_NO) AS (\r\n\t\tSELECT REDEEMED_DATE, REDEEMED_STORE, REDEEMED_TILL_NO, REDEEMED_TRAN_NO,\r\n\t\t\t\tCOUNT(DISTINCT VOUCHER_NO) AS VOUCHER_COUNT,\r\n\t\t\t\tSUM(REDEEMED_AMOUNT) AS VOUCHER_DISCOUNT\r\n\t\tFROM ANALYTICS.FND_CUST_FV_VOUCHER\r\n\t\tWHERE REDEEMED_DATE IS NOT NULL\r\n\t\t\tAND last_updated_date = '$[vlast_updated_date]'\r\n\t\tGROUP BY 1,2,3,4 )$[vLimit];\r\n-- Execution time: 13.51s\r\n\r\n-- ATTACH VOUCHER INFORMATION\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tCASE WHEN B.REDEEMED_DATE IS NULL THEN 0 ELSE 1 END AS VOUCHER_FLAG,\r\n\t\t\t\tVOUCHER_COUNT, VOUCHER_DISCOUNT\r\n\t\tFROM #wns_nm_DD_CUST_BASKET_UCID_TYPE A\r\n\t\tLEFT JOIN #wns_nm_DD_FND_FV_VOUCHER_TEMP B\r\n\t\t\t\tON A.TRAN_DATE=B.REDEEMED_DATE\r\n\t\t\t\tAND A.LOCATION_NO=B.REDEEMED_STORE\r\n\t\t\t\tAND A.TILL_NO=B.REDEEMED_TILL_NO\r\n\t\t\t\tAND A.TRAN_NO=B.REDEEMED_TRAN_NO)$[vLimit];\r\n-- Execution time: 52.41s\r\n\r\nCREATE TABLE #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT UCID, MIN(PORTFOLIO_CREATE_DATE) AS ACQUISITION_DATE\r\n\t\tFROM (SELECT B.UCID, B.CUSTOMER_NO, C.PORTFOLIO_CREATE_DATE\r\n\t\t\t\tFROM (SELECT perm_ucid_hashed as UCID, CUSTOMER_NO\r\n\t\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING GROUP BY 1,2) B -- CHANGE HERE TO DEVELOPMENT.AJL_DIM_CUSTOMER_CARD_MAPPING_NO_CUTOFF_202013_V2 [NM]\r\n\t\t\t\tLEFT JOIN (SELECT CUSTOMER_NO, PORTFOLIO_CREATE_DATE, PRODUCT_CODE_NO\r\n\t\t\t\t\t\t\tFROM ANALYTICS.FND_CUSTOMER_PORTFOLIO\r\n\t\t\t\t\t\t\tWHERE PRODUCT_CODE_NO IN ('0','1','2','3','4','5','6','7','8','9','10','11','15','16','19','20','21','28') ) C --TO BE CHANGED [NM]\r\n\t\t\t\tON B.CUSTOMER_NO=C.CUSTOMER_NO) D\r\n\t\tGROUP BY 1)$[vLimit];\r\n-- Execution time: 15.71s\r\n\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TRAN_TIME, A.TRAN_TYPE, A.TRAN_SELLING, A.DISCOUNT_SELLING, A.WASTE_IND,\r\n\t\t\t\tA.LOYALTY_WW_SWIPE_NO, A.LOYALTY_EXT_SWIPE_NO, A.CUSTOMER_NO, A.VMP_IND,A.TRAN_IND, A.UCID, A.UCID_TYPE, A.AGE, A.RACE, A.GENDER,\r\n\t\t\t\tA.HOUSEHOLD_INCOME, A.VOUCHER_FLAG, A.VOUCHER_COUNT, A.VOUCHER_DISCOUNT,\r\n\t\t\t\tCASE WHEN ACQUISITION_DATE IS NULL THEN '1999-01-01'\r\n\t\t\t\t\tWHEN ACQUISITION_DATE<'1999-01-01' THEN '1999-01-01' -- THE FIRST DATE IN CUST_BASKET IS 1999-06-04\r\n\t\t\t\t\tWHEN ACQUISITION_DATE>=(CURRENT_DATE+1) THEN CURRENT_DATE\r\n\t\t\t\t\t\tELSE ACQUISITION_DATE END AS ACQUISITION_DATE\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG A\r\n\t\tLEFT JOIN #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ B\r\n\t\t\t\tON A.UCID=B.UCID)$[vLimit];\r\n-- Execution time: 57.6s\r\n\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT CARD_NO, CUSTOMER_NO\r\n\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 1m 0s\r\n\r\n-- ATTACH CUSTOMER NO BASED ON LOYALTY_WW_SWIPE_NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2_1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*, B.CUSTOMER_NO AS C2_CUSTOMER_NO_1\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ A\r\n\t\tLEFT JOIN #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB B\r\n\t\t\t\tON A.LOYALTY_WW_SWIPE_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 54.67s\r\n\r\n-- ATTACH CUSTOMER NO BASED ON LOYALTY_EXT_SWIPE_NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2_2\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,B.CUSTOMER_NO AS C2_CUSTOMER_NO_2\r\n\t\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ A\r\n\t\t\tLEFT JOIN #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB B\r\n\t\t\tON A.LOYALTY_EXT_SWIPE_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 49.84s\r\n\r\n-- PICKING THE AVAILABLE CUSTOMER NO\r\nCREATE TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tCASE WHEN A.C2_CUSTOMER_NO_1 IS NULL THEN B.C2_CUSTOMER_NO_2 ELSE A.C2_CUSTOMER_NO_1 END AS C2_CUSTOMER_NO,\r\n\t\t\t\tCASE WHEN A.LOYALTY_WW_SWIPE_NO IS NULL THEN 0 ELSE 1 END AS WREWARDS_SWIPE_IND,\r\n\t\t\t\tCASE WHEN A.LOYALTY_EXT_SWIPE_NO IS NULL THEN 0 ELSE 1 END AS MYSCHOOL_SWIPE_IND\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_C2_1 A\r\n\t\tLEFT JOIN #wns_nm_DD_CA_TRAN_LEVEL_C2_2 B\r\n\t\t\t\tON A.TRAN_DATE=B.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO=B.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO=B.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO=B.TRAN_NO)$[vLimit];\r\n-- Execution time: 1m 1s\r\n\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN LOYALTY_WW_SWIPE_NO;\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN LOYALTY_EXT_SWIPE_NO;\r\nALTER TABLE #wns_nm_DD_CA_TRAN_LEVEL_C2 DROP COLUMN C2_CUSTOMER_NO_1;\r\n-- Total script execution time: 0.06s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE,\r\n\t\t\t\tCASE WHEN TENDER_TYPE_DETAIL_CODE IS NULL THEN 'NULL_VALUE' ELSE TENDER_TYPE_DETAIL_CODE END AS TENDER_TYPE_DETAIL_CODE1,\r\n\t\t\t\tTENDER_NO, TENDER_SELLING, CHANGE_SELLING\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_TENDER\r\n\t\tGROUP BY 1,2,3,4,5,6,7,8)$[vLimit];\r\n-- Execution time: 1m 12s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUSTOMER_CARD_TEMP DISTSTYLE ALL AS (\r\n\tSELECT CARD_NO,\r\n\t\t\tCASE WHEN PRODUCT_CODE_NO IN ('1','2','3','4','5','6','7','21' ) THEN 'SC'\r\n\t\t\t\t\tWHEN PRODUCT_CODE_NO ='20' THEN 'CC' END AS STORE_CC_FLAG\r\n\tFROM analytics.FND_CUSTOMER_CARD)$[vLimit];\r\n-- Execution time: 59.26s\r\n\r\ndelete from #wns_nm_DD_FND_CUSTOMER_CARD_TEMP where STORE_CC_FLAG is null;\r\n-- 8,924,491 rows affected\r\n-- Execution time: 4.76s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT LOCATION_NO, TILL_NO, TRAN_NO, TRAN_DATE,\r\n\t\t\t\tTENDER_TYPE_DETAIL_CODE1 AS TENDER_TYPE_DETAIL_CODE,\r\n\t\t\t\tTENDER_NO, TENDER_SELLING, CHANGE_SELLING, STORE_CC_FLAG\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP A\r\n\t\tLEFT JOIN #wns_nm_DD_FND_CUSTOMER_CARD_TEMP B\r\n\t\t\t\tON A.TENDER_NO=B.CARD_NO)$[vLimit];\r\n-- Execution time: 31.72s\r\n\r\nCREATE TABLE #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.LOCATION_NO, A.TILL_NO, A.TRAN_NO, A.TRAN_DATE, A.TENDER_TYPE_DETAIL_CODE, A.TENDER_NO, A.TENDER_SELLING, A.CHANGE_SELLING, A.STORE_CC_FLAG,\r\n\t\t\t\tB.TENDER_TYPE_FOR_BASE_TABLE,\r\n\t\t\t\tCASE WHEN STORE_CC_FLAG IS NULL\r\n\t\t\t\t\t\tTHEN\r\n\t\t\t\t\t\tCASE WHEN TENDER_TYPE_FOR_BASE_TABLE='WW VISA CARD' THEN 'CC'\r\n\t\t\t\t\t\t\t WHEN TENDER_TYPE_FOR_BASE_TABLE='WW STORE CARD' THEN 'SC'\r\n\t\t\t\t\t\t\t ELSE TENDER_TYPE_FOR_BASE_TABLE\r\n\t\t\t\t\t\tEND\r\n\t\t\t\t\t\tELSE STORE_CC_FLAG\r\n\t\t\t\t\tEND AS TENDER_TYPE_FOR_BASE_TABLE1\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG A\r\n\t\tLEFT JOIN (SELECT CASE WHEN TENDER_TYPE_DETAIL_CODE IS NULL THEN 'NULL_VALUE' ELSE TENDER_TYPE_DETAIL_CODE END AS TENDER_TYPE_DETAIL_CODE1,\r\n\t\t\t\t\t\t\tTENDER_TYPE_FOR_BASE_TABLE FROM DEVELOPMENT.SD_TENDER_TYPE_MAPPING_06APR) B\r\n\t\t\t\tON A.TENDER_TYPE_DETAIL_CODE=B.TENDER_TYPE_DETAIL_CODE1)$[vLimit];\r\n-- Execution time: 32.8s\r\n\r\nCREATE TABLE #wns_nm_WNS_SD_TEMP1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT TRAN_NO, LOCATION_NO, TILL_NO , TRAN_DATE,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1='SC' THEN TENDER_NO END) AS STORE_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='SC' THEN TENDER_SELLING END) AS STORE_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Gift Card' THEN TENDER_NO END) AS GIFT_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Gift Card' THEN TENDER_SELLING END) AS GIFT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Voucher' THEN TENDER_NO END) AS VOUCHER_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='WW Voucher' THEN TENDER_SELLING END) AS VOUCHER_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Alien Bank Card' THEN TENDER_NO END) AS ALIEN_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Alien Bank Card' THEN TENDER_SELLING END) AS ALIEN_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='CC' THEN TENDER_NO END) AS CREDIT_CARD_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='CC' THEN TENDER_SELLING END) AS CREDIT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Cash' THEN 1 ELSE 0 END) AS CASH_TENDER_IND,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Cash' THEN TENDER_SELLING-CHANGE_SELLING END) AS CASH_TRAN_TENDER_SELLING,\r\n\t\t\t\tCOUNT(DISTINCT CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Other' THEN TENDER_NO END) AS OTHER_TENDER_COUNT,\r\n\t\t\t\tSUM(CASE WHEN TENDER_TYPE_FOR_BASE_TABLE1 ='Other' THEN TENDER_SELLING END) AS OTHER_TRAN_TENDER_SELLING\r\n\t\tFROM #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE\r\n\t\tGROUP BY 1,2,3,4)$[vLimit];\r\n-- Execution time: 2m 57s\r\n\r\nCREATE TABLE #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,FIN_YEAR_NO, FIN_HALF_NO, FIN_QUARTER_NO, FIN_MONTH_NO, FIN_WEEK_NO, FIN_DAY_NO, SEASON_NO\r\n\t\t        ,CASE WHEN DAY_NAME IN ('SATURDAY','SUNDAY') THEN 2   --added the weekday_weekend_code - new column\r\n\t\t\t\t ELSE 1 END AS WEEKDAY_WEEKEND_CODE,\r\n\t\t\t\tC.GIFT_CARD_TENDER_COUNT, C.GIFT_CARD_TRAN_TENDER_SELLING, C.VOUCHER_TENDER_COUNT, C.VOUCHER_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.ALIEN_CARD_TENDER_COUNT, C.ALIEN_CARD_TRAN_TENDER_SELLING, C.CASH_TENDER_IND, C.CASH_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.STORE_CARD_TENDER_COUNT, C.STORE_CARD_TRAN_TENDER_SELLING, C.CREDIT_CARD_TENDER_COUNT, C.CREDIT_CARD_TRAN_TENDER_SELLING,\r\n\t\t\t\tC.OTHER_TENDER_COUNT, C.OTHER_TRAN_TENDER_SELLING\r\n\t\tFROM #wns_nm_DD_CA_TRAN_LEVEL_C2 A\r\n\t\tLEFT JOIN ANALYTICS.FND_CALENDAR B\r\n\t\t\t\tON A.TRAN_DATE=B.CALENDAR_DATE\r\n\t\tLEFT JOIN #wns_nm_WNS_SD_TEMP1 C\r\n\t\t\t\tON A.TRAN_DATE=C.TRAN_DATE\r\n\t\t\t\tAND A.LOCATION_NO=C.LOCATION_NO\r\n\t\t\t\tAND A.TILL_NO=C.TILL_NO\r\n\t\t\t\tAND A.TRAN_NO=C.TRAN_NO)$[vLimit];\r\n-- Execution time: 1m 23s\r\n-- 60GB\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName];\r\ncreate table DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName]\r\ndiststyle all as\r\n(select * from #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ) $[vLimit];\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID_TYPE_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CUST_BASKET_UCID_TYPE;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_FV_VOUCHER_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_VOUCHER_FLAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_UCID_LEVEL_CUST_ACQ;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_CUST_ACQ;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_CARD_MAPPING_SUB;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2_1;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2_2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_TRAN_LEVEL_C2;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUSTOMER_CARD_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_FND_CUST_BASKET_TENDER_TEMP_STORE_CC_FLAG_BASE_TABLE;\r\nDROP TABLE IF EXISTS #wns_nm_WNS_SD_TEMP1;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT B - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************\r\n--TIER START\r\n*******************************************************************/\r\n---======================================================  START tier ====================================================\r\n-- year ,half_year,fin_qy,fin_month_no based tier calculation and creating a single table\r\n--  ''development.wns_adj_tier_wise$[vDayName]''\r\n\r\nDROP TABLE IF EXISTS development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName];\r\n\r\nCREATE TABLE development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] AS\r\n  SELECT * FROM (\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+01 AS FIN_MONTH, MONTH_01_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+02 AS FIN_MONTH, MONTH_02_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+03 AS FIN_MONTH, MONTH_03_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+04 AS FIN_MONTH, MONTH_04_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+05 AS FIN_MONTH, MONTH_05_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+06 AS FIN_MONTH, MONTH_06_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+07 AS FIN_MONTH, MONTH_07_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+08 AS FIN_MONTH, MONTH_08_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+09 AS FIN_MONTH, MONTH_09_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+10 AS FIN_MONTH, MONTH_10_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+11 AS FIN_MONTH, MONTH_11_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n                SELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+12 AS FIN_MONTH, MONTH_12_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL) $[vLimit];\r\n\r\n\r\nDROP TABLE if exists development.wns_kr_tier_year_wise_$[vDayName];\r\n\r\nCreate Table development.wns_kr_tier_year_wise_$[vDayName] diststyle all as\r\n(select *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as numeric(5,0)) as fin_year_no,nvl(tier,0) as tier_, b.perm_ucid_hashed as UCID\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no ORDER BY tier_ DESC) AS MAX_TIER_RANK\r\n      from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b\r\n      on a.customer_no = b.customer_no\r\n      where mod(FIN_MONTH,100) = 12\r\n      )\r\nwhere MAX_TIER_RANK = 1\r\n);\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_fh_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fh_wise_UCID_$[vDayName] as\r\nselect *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fh, b.perm_ucid_hashed as UCID\r\n            ,case when mod(fin_month,100)/2 = 1 then 1\r\n                  when mod(fin_month,100)/2 = 2 then 2\r\n             else '0'\r\n             end as half_year\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,half_year ORDER BY tier_fh DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n      where half_year in (1,2)\r\n      )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null\r\n;\r\n\r\n\r\nDrop table IF Exists development.wns_adj_tier_fq_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fq_wise_UCID_$[vDayName] as\r\nselect *\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fq, b.perm_ucid_hashed as UCID\r\n            ,case when mod(fin_month,100)/3 = 1 then 1\r\n                  when mod(fin_month,100)/3 = 2 then 2\r\n                  when mod(fin_month,100)/3 = 3 then 3\r\n                  when mod(fin_month,100)/3 = 4 then 4\r\n             else '0'\r\n             end as quarter\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,quarter ORDER BY tier_fq DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n      where quarter in (1,2,3,4)\r\n      )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null\r\n;\r\n\r\n\r\n\r\nDrop table IF Exists development.wns_adj_tier_fm_wise_UCID_$[vDayName];\r\nCreate Table development.wns_adj_tier_fm_wise_UCID_$[vDayName]\r\ndiststyle all as\r\nselect UCID,fin_year_no,fin_month_no,tier_fm\r\nfrom (\r\n      select cast(FIN_MONTH/100 as integer) as fin_year_no,nvl(tier,0) as tier_fm, b.perm_ucid_hashed as UCID\r\n           ,mod(FIN_MONTH,100) as fin_month_no\r\n            ,ROW_NUMBER() OVER(PARTITION BY b.perm_ucid_hashed,fin_year_no,fin_month_no ORDER BY tier_fm DESC) AS MAX_TIER_RANK\r\n                                                from development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName] a\r\n      left join development.dim_customer_card_mapping b --change the mapping table accordingly\r\n      on a.customer_no = b.customer_no\r\n        )\r\nwhere MAX_TIER_RANK = 1 and UCID is not null ;\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_wise$[vDayName];\r\nCREATE TABLE IF NOT EXISTS development.wns_adj_tier_wise$[vDayName]\r\n(\r\n                ucid VARCHAR(100)   ENCODE lzo\r\n                ,fin_year_no smallint   ENCODE az64\r\n                ,fin_month_no smallint   ENCODE az64\r\n                ,tier_fm smallint   ENCODE az64\r\n                ,tier_fq smallint   ENCODE az64\r\n                ,tier_fh smallint   ENCODE az64\r\n                ,tier_fy smallint   ENCODE az64\r\n)\r\nDISTSTYLE ALL\r\n;\r\n\r\n\r\ngrant select on table development.wns_adj_tier_wise$[vDayName] to public;\r\n\r\n\r\ninsert into development.wns_adj_tier_wise$[vDayName] (\r\nselect\r\n   A.ucid,A.fin_year_no,A.fin_month_no,A.tier_fm\r\n   ,  b.tier_fq,\r\n   C.tier_fh,\r\n   D.tier_ as tier_fy\r\nfrom\r\n   (\r\n      select\r\n         ucid,\r\n         fin_year_no,\r\n         fin_month_no,\r\n         tier_fm,\r\n         case\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '1',\r\n                  '2',\r\n                  '3'\r\n               )\r\n            then\r\n               1\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '4', '5', '6'\r\n               )\r\n            then\r\n               2\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '7', '8', '9'\r\n               )\r\n            then\r\n               3\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '10', '11', '12'\r\n               )\r\n            then\r\n               4\r\n         end\r\n         as fin_qy,\r\n         case\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '1', '2', '3', '4', '5', '6'\r\n               )\r\n            then\r\n               1\r\n            when\r\n               fin_month_no in\r\n               (\r\n                  '7', '8', '9', '10', '11', '12'\r\n               )\r\n            then\r\n               2\r\n         end\r\n         as fin_hy\r\n      from\r\n         development.wns_adj_tier_fm_wise_UCID_$[vDayName]\r\n   )\r\n   A\r\n   left join\r\n      development.wns_adj_tier_fq_wise_UCID_$[vDayName] B\r\n      on A.fin_year_no = B.fin_year_no\r\n      and A.fin_qy = B.quarter\r\n      and A.ucid = b.ucid\r\n   LEFT JOIN\r\n      development.wns_adj_tier_fh_wise_UCID_$[vDayName] C\r\n      on A.fin_year_no = C.fin_year_no\r\n      and A.fin_hy = C.half_year\r\n      and A.ucid = C.ucid\r\n   LEFT JOIN\r\n      development.wns_kr_tier_year_wise_$[vDayName] D\r\n      on A.fin_year_no = D.fin_year_no\r\n      and A.ucid = D.ucid  where A.fin_year_no >='2018');\r\n\r\n\r\ndrop table if exists development.wns_nm_DD_SHK_TIER_LAST_TIER_RAW_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fm_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fq_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_adj_tier_fh_wise_UCID_$[vDayName];\r\ndrop table if exists development.wns_kr_tier_year_wise_$[vDayName];\r\n\r\n---=============================================================  END tier ====================================================\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT C - Preparing Tier Details *******************************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- EXTRACT RAW DATA FROM THE TIER TABLE AND PIVOT THE MONTHLY TIER COLUMNS IN TO A SINGLE COLUMN\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_LAST_TIER_RAW AS\r\n  SELECT * FROM (\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+01 AS FIN_MONTH, MONTH_01_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+02 AS FIN_MONTH, MONTH_02_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+03 AS FIN_MONTH, MONTH_03_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+04 AS FIN_MONTH, MONTH_04_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+05 AS FIN_MONTH, MONTH_05_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+06 AS FIN_MONTH, MONTH_06_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+07 AS FIN_MONTH, MONTH_07_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+08 AS FIN_MONTH, MONTH_08_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+09 AS FIN_MONTH, MONTH_09_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+10 AS FIN_MONTH, MONTH_10_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+11 AS FIN_MONTH, MONTH_11_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL UNION\r\n\tSELECT PRIMARY_CUSTOMER_IDENTIFIER AS CUSTOMER_NO, (FIN_YEAR_NO*100)+12 AS FIN_MONTH, MONTH_12_TIER AS TIER FROM ANALYTICS.FND_WOD_TIER_MTH_DETAIL)$[vLimit];\r\n-- Execution time: 20.28s\r\n\r\n-- GENERATE PREVIOUS MONTH TIER AT A MONTH LEVEL FOR EVERY CUSTOMER\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_LAST_TIER_LAG AS (\r\n\tSELECT CUSTOMER_NO, FIN_MONTH, TIER,\r\n\t\t   LAG(TIER) OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH) AS PREV_MNTH_TIER\r\n\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_RAW)$[vLimit];\r\n-- Execution time: 19.82s\r\n\r\n--TAKE ALL CUSTOMERS CURRENT TIER ONLY\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER AS (\r\n\tSELECT CUSTOMER_NO, CUSTOMER_CURRENT_TIER_CODE\r\n\tFROM (SELECT CUSTOMER_NO, FIN_MONTH, TIER AS CUSTOMER_CURRENT_TIER_CODE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH DESC) AS LATEST_TIER_RANK\r\n\t\t\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_LAG)\r\n\tWHERE LATEST_TIER_RANK = 1\r\n\tGROUP BY 1,2)$[vLimit];\r\n-- Execution time: 19.82s\r\n\r\n--TAKE ALL CUSTOMERS ALONG WITH THEIR PREVIOUS TIER AND THE MONTH IN WHICH THE TIER CHANGE OCCURRED\r\nCREATE TABLE #wns_nm_DD_SHK_TIER_CHNG_MNTH AS (\r\n\tSELECT CUSTOMER_NO, FIN_MONTH AS LAST_TIER_CHANGE_MONTH, PREV_MNTH_TIER AS LAST_TIER, TIER AS CUSTOMER_CURRENT_TIER_CODE\r\n\tFROM (\r\n\t\tSELECT CUSTOMER_NO, FIN_MONTH, TIER, PREV_MNTH_TIER,\r\n\t\t\t   ROW_NUMBER() OVER(PARTITION BY CUSTOMER_NO ORDER BY FIN_MONTH DESC) AS LAST_CHNG_MNTH_RANK\r\n\t\tFROM #wns_nm_DD_SHK_TIER_LAST_TIER_LAG\r\n\t\tWHERE PREV_MNTH_TIER-TIER<>0)\r\n\tWHERE LAST_CHNG_MNTH_RANK=1\r\n\tGROUP BY 1,2,3,4)$[vLimit];\r\n-- Execution time: 15.26s\r\n\r\n--ADD LAST TIER AND TIER CHANGE MONTH INFORMATION TO THE TABLE WITH CURRENT TIER\r\nCREATE TABLE #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS AS\r\n\tSELECT A.CUSTOMER_NO, A.CUSTOMER_CURRENT_TIER_CODE, LAST_TIER, LAST_TIER_CHANGE_MONTH\r\n\tFROM #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER A\r\n\tLEFT JOIN #wns_nm_DD_SHK_TIER_CHNG_MNTH B\r\n\tON A.CUSTOMER_NO = B.CUSTOMER_NO$[vLimit];\r\n-- Execution time: 7.58s\r\n\r\n-- PREPARE LIST OF ALL UCIDS FROM TENDER TRIANGULATION OUTPUT DATA\r\nCREATE TABLE #wns_nm_DD_CA_UCID_LIST AS (\r\n\tSELECT perm_ucid_hashed as UCID, CUSTOMER_NO\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tWHERE CUSTOMER_NO IS NOT NULL AND UCID_TYPE = 'KNOWN'\r\n\tGROUP BY 1,2 )$[vLimit];\r\n-- Execution time: 4.43s\r\n\r\n-- ATTACH THE ABOVE CREATED TIER INFORMATION TO THE UCID LIST OF ALL CUSTOMERS\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName]\r\n\tDISTSTYLE ALL AS (\r\n\t\tSELECT UCID, LAST_TIER_CHANGE_MONTH, LAST_TIER, CUSTOMER_CURRENT_TIER_CODE\r\n\t\tFROM (\r\n\t\t\tSELECT CAST(A.UCID AS CHARACTER VARYING(30)), A.CUSTOMER_NO, B.LAST_TIER_CHANGE_MONTH, B.LAST_TIER, B.CUSTOMER_CURRENT_TIER_CODE,\r\n\t\t\t\t   ROW_NUMBER() OVER(PARTITION BY A.UCID ORDER BY B.CUSTOMER_CURRENT_TIER_CODE DESC, B.LAST_TIER_CHANGE_MONTH DESC, B.LAST_TIER DESC) AS TIER_RANK\r\n\t\t\tFROM #wns_nm_DD_CA_UCID_LIST A\r\n\t\t\tINNER JOIN #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS B\r\n\t\t\t\tON A.CUSTOMER_NO=B.CUSTOMER_NO)\r\n\t\tWHERE TIER_RANK=1)$[vLimit];\r\n-- Execution time: 13.89s\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName]\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT A.*,\r\n\t\t\t\tB.LOCATION_NAME, B.AREA_NO,\tB.AREA_NAME, B.REGION_NO, B.REGION_NAME, B.CHAIN_NO,\r\n\t\t\t\tD.ST_S4S_SHAPE_OF_CHAIN_DESC AS SHAPE_OF_CHAIN_DESC,\r\n\t\t\t\tC.LAST_TIER_CHANGE_MONTH, C.LAST_TIER, C.CUSTOMER_CURRENT_TIER_CODE,H.tier_fy\r\n\t\t\t\t,H.tier_fq,H.tier_fh,H.tier_fm\r\n\t\tFROM #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN A\r\n\t\tLEFT JOIN DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName] C\r\n\t\t\t\tON A.UCID = C.UCID\r\n\t\tLEFT JOIN ANALYTICS.FND_LOCATION B\r\n\t\t\t\tON A.LOCATION_NO = B.LOCATION_NO\r\n\t\tLEFT JOIN DEVELOPMENT.FND_ROG_SOC_LOCATION D\r\n\t\t\t\tON A.LOCATION_NO = D.LOCATION_NO\r\n\t/*\tLEFT JOIN #wns_kr_tier_year_wise E\r\n\t\t\t\tON A.fin_year_no = E.fin_year_no\r\n\t\t\t\t\tand A.UCID = E.UCID\r\n\t\tLEFT JOIN #wns_adj_tier_fq_wise_UCID F\r\n\t\t        ON A.fin_year_no = F.fin_year_no\r\n\t\t        and A.fin_quarter_no = F.quarter\r\n\t\t\t\t\tand A.UCID = F.UCID\r\n        LEFT JOIN #wns_adj_tier_fh_wise_UCID G\r\n\t\t        ON A.fin_year_no = G.fin_year_no\r\n\t\t        and A.fin_half_no = G.half_year\r\n\t\t\t\t\tand A.UCID = G.UCID*/\r\n        LEFT JOIN (select * from development.wns_adj_tier_wise$[vDayName] where fin_year_no>=2021 and fin_month_no>=3) H\r\n\t\t        ON A.fin_year_no = H.fin_year_no\r\n\t\t        and A.fin_month_no = H.fin_month_no\r\n\t\t\t\t\tand A.UCID = H.UCID\r\n\r\n\t)$[vLimit];\r\n-- Execution time: 1m 42s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_LAST_TIER_RAW;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_LAST_TIER_LAG;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_CURRENT_TIER;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_TIER_CHNG_MNTH;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUSTOMER_TIER_DETAILS;\r\nDROP TABLE IF EXISTS #wns_nm_DD_CA_UCID_LIST;\r\nDROP TABLE IF EXISTS #wns_nm_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT C - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT D - Creating base table from $[vCBI] data with product & category details **********************************************/\r\n/******************************************************************************************************************************************/\r\n\r\nCREATE TABLE #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) AS (\r\n\t\tSELECT\r\n\t\tlocation_no\r\n\t\t,till_no\r\n\t\t,tran_no\r\n\t\t,tran_date\r\n\t\t,tran_time\r\n\t\t,item_seq_no\r\n\t\t,item_no\r\n\t\t,tran_type\r\n\t\t,item_tran_selling\r\n\t\t,case when vat_rate_perc is null then 0 else vat_rate_perc end as vat_rate_perc1\r\n\t\t,item_tran_qty\r\n\t\t,discount_selling\r\n\t\t,customer_no\r\n\t\t,waste_discount_selling\r\n\t\t,ROW_NUMBER() OVER(PARTITION BY TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO, ITEM_NO ORDER BY LAST_UPDATED_DATE DESC) AS LATEST_FLAG\r\n\t    ,vitality_uda_value\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_ITEM\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]')$[vLimit];\r\n-- Execution time: 15m 26s\r\n\r\n--deleting redundant rows\r\nDELETE FROM #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1 WHERE LATEST_FLAG>1;\r\n\r\n--+++++++++++++++++++++++++++++++++++++++++Start of Addition Of Markdown_seq_no++++++++++++++++++++++++++++++----\r\n-- TEMPORARY table for rtl_clearance for zone =1 filter and nxt_active_date logic\r\ndrop table if exists #wns_adj_rtl_lag_temp;\r\ncreate table #wns_adj_rtl_lag_temp as\r\nselect * from (\r\n                select item_no,markdown_seq_no,active_date,reset_date,ruling_rsp,\r\n                lag(active_date-1) over (partition by item_no order by active_date desc) as nxt_active_date\r\n                from analytics.fnd_rtl_clearance where zone_no=1\r\n)$[vLimit];\r\n-- joining both above table and making a decision of last next_active_date data which is null.\r\ndrop table if exists #wns_adj_cbi_rtl_join;\r\ncreate table #wns_adj_cbi_rtl_join\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,item_seq_no,item_no) as\r\nselect location_no,till_no,tran_no,tran_date,item_seq_no,A.item_no ,markdown_seq_no,active_date ,reset_date,ruling_rsp,\r\ncase when ruling_rsp>.01 then nvl(nxt_active_date ,reset_date-1) end as nxt_active_date\r\nfrom (\r\n      #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1 a\r\n      left join\r\n      #wns_adj_rtl_lag_temp b\r\n      on a.item_no=b.item_no\r\n      )$[vLimit];\r\n\r\ndrop table if exists #wns_adj_rtl_lag_temp;\r\n-- Main logic of Markdown\r\ndrop table if exists #wns_adj_markdown_seq;\r\ncreate table #wns_adj_markdown_seq\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,item_seq_no,item_no) as\r\nselect location_no,till_no,tran_no,tran_date,item_seq_no,item_no  ,nvl(markdown_seq_no,0) as markdown_seq_no from (\r\n                select location_no,till_no,tran_no,tran_date,item_seq_no,item_no  ,max(markdown_seq_no) as markdown_seq_no\r\n                from(\r\n                    select location_no,till_no,tran_no,tran_date,item_seq_no,item_no ,\r\n                    case when reset_date <= nxt_active_date\r\n                              and tran_date between active_date and reset_date-1\r\n                              and ruling_rsp>0.01\r\n                              then markdown_seq_no else\r\n                    case when reset_date > nxt_active_date\r\n                              and tran_date between active_date and nxt_active_date\r\n                              and ruling_rsp>0.01\r\n                              then markdown_seq_no  end\r\n                    end as markdown_seq_no\r\n                    from #wns_adj_cbi_rtl_join\r\n                    )\r\n                group by location_no,till_no,tran_no,tran_date,item_seq_no,item_no\r\n                )$[vLimit];\r\n\r\n\r\ndrop table if exists #wns_adj_cbi_rtl_join;\r\n--+++++++++++++++++++++++++++++++++++++++++End of Addition Of Markdown_seq_no++++++++++++++++++++++++++++++----\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\ncreate table #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect A.*,B.tran_qty\r\nfrom(\r\n(select * from #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1) A\r\nleft join\r\n(select * from(\r\nselect location_no,till_no,tran_no,tran_date,sum(item_tran_qty) as tran_qty from #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1\r\ngroup by location_no,till_no,tran_no,tran_date\r\n)\r\n) B\r\nON A.TRAN_DATE = B.TRAN_DATE\r\nAND A.LOCATION_NO = B.LOCATION_NO\r\nAND A.TILL_NO = B.TILL_NO\r\nAND A.TRAN_NO = B.TRAN_NO\r\n)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS  #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP1;\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item;\r\n--DROP TABLE IF EXISTS #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\n\r\n-- Total script execution time: 0.02s\r\n-- changed the code for phase2 promotion_no addition\r\nCREATE TABLE #wns_nm_DD_SHK_CA_AUX_SUBSET\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT LOCATION_NO, TRAN_DATE, TRAN_NO, TILL_NO, ITEM_NO, ITEM_SEQ_NO,\r\n\t\t\t\t1 AS PROMOTION_FLAG,\r\n\t\t\t\tTRAN_TYPE_CODE, sum(PROMOTION_DISCOUNT_AMOUNT) as PROMOTION_DISCOUNT_AMOUNT1\r\n\t\tFROM ANALYTICS.FND_CUST_BASKET_AUX\r\n\t\tWHERE last_updated_date = '$[vlast_updated_date]'\r\n\t\t\t\tAND PROMOTION_NO IS NOT NULL\r\n\t\t\t\tAND PROMOTION_NO <>''\r\n\t\t\t\tAND PROMOTION_DISCOUNT_AMOUNT > 0\r\n\t\t\t\t--AND TRAN_TYPE_CODE IN ('LOYALTY', 'WFS', 'RMS', 'ATG', 'ATGLOY', 'STAFF', 'EOL', 'FRANCHISE')\r\n\t\tGROUP BY 1,2,3,4,5,6,7,8)$[vLimit];\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1 ;\r\nCREATE TABLE #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT LOCATION_NO, TRAN_DATE, TRAN_NO, TILL_NO, ITEM_NO, ITEM_SEQ_NO,\r\n\t\t\t\tMAX(PROMOTION_FLAG) AS PROMOTION_FLAG,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'LOYALTY' THEN 1 ELSE 0 END) AS LOYALTY_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'LOYALTY' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS LOYALTY_DISCOUNT_SELLING,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'WFS' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS WFS_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'RMS' THEN 1 ELSE 0 END) AS RMS_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'RMS' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS RMS_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'ATG' THEN 1 ELSE 0 END) AS ATG_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'ATG' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS ATG_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'ATGLOY' THEN 1 ELSE 0 END) AS ATGLOY_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'ATGLOY' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS ATG_LOYALTY_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'STAFF' THEN 1 ELSE 0 END) AS STAFF_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'STAFF' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS STAFF_DISCOUNT_SELLING,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'CTV' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS VOUCHER_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'EOL' THEN 1 ELSE 0 END) AS EOL_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE = 'EOL' THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS EOL_DISCOUNT_SELLING,\r\n\t\t\t\tMAX(CASE WHEN TRAN_TYPE_CODE = 'FRANCHISE' THEN 1 ELSE 0 END) AS FRANCHISE_PROMO_FLAG,\r\n\t\t\t\tSUM(CASE WHEN TRAN_TYPE_CODE NOT IN ('ATG', 'LOYALTY', 'ATGLOY', 'STAFF', 'WFS', 'EOL', 'RMS') THEN PROMOTION_DISCOUNT_AMOUNT1 ELSE 0 END) AS OTHER_DISCOUNT_SELLING,\r\n\t\t\t\tCASE WHEN (STAFF_DISCOUNT_SELLING = 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING = 0) THEN 0\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING > 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING > 0) THEN 1\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING > 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING = 0) THEN 2\r\n\t\t\t\t\t WHEN (STAFF_DISCOUNT_SELLING = 0 AND ATG_DISCOUNT_SELLING + ATG_LOYALTY_DISCOUNT_SELLING + RMS_DISCOUNT_SELLING + LOYALTY_DISCOUNT_SELLING + EOL_DISCOUNT_SELLING + WFS_DISCOUNT_SELLING + OTHER_DISCOUNT_SELLING > 0) THEN 3 END AS DISCOUNT_CODE\r\n\t\tFROM #wns_nm_DD_SHK_CA_AUX_SUBSET\r\n\t\tGROUP BY 1,2,3,4,5,6)$[vLimit];\r\n-- Execution time: 2m 54s\r\n\r\n\r\ndrop table if exists #WNS_ADJ_PROMOTION_NO ;\r\ncreate table #WNS_ADJ_PROMOTION_NO\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,ITEM_SEQ_NO,ITEM_NO) AS (\r\nselect location_no,till_no,tran_no,tran_date,item_no,item_seq_no,\r\n\t\tmax(case when tran_type_code='RMS'  then promotion_no else\r\n\t\t\t\tcase when tran_type_code='LOYALTY'\r\n\t\t\t\t-- check if any loyalty promotion_no is without prefixes also\r\n\t\t\t\t then trim(SUBSTRING(promotion_no ,4,len(promotion_no)))  else\r\n\t\t\t\t\t\tcase when tran_type_code='WFS' \tand trim(SUBSTRING(promotion_no ,0,4)) in ('WFS','888')\r\n\t\t\t\t\t\t\tthen trim(SUBSTRING(promotion_no ,4,len(promotion_no)))  else\r\n\t\t\t\t\t\tcase when tran_type_code='FRANCHISE'  then promotion_no\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t\t\t\tend end) as RMS_PROMOTION_NO,\r\n\t\tmax(case when tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,8))='bppromo' then trim(SUBSTRING(promotion_no ,8,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='cq' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='sp' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)\t))\r\n\t\t\t\twhen tran_type_code='ATG '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,3))='bp' then trim(SUBSTRING(promotion_no ,3,len(promotion_no)))\r\n\t\t\t\twhen tran_type_code='ATG '  then promotion_no\r\n\t\t\t\tend) as ATG_PROMOTION_NO ,\r\n\t -- ATGLOY does not have any promotion_no with out \"promo' prefix.\r\n\t\tmax(case when tran_type_code='ATGLOY '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no))) else\r\n\t\t\t\t\tcase when tran_type_code='WFS '\r\n\t\t\t\t\tand trim(SUBSTRING(promotion_no ,0,6))='promo' then trim(SUBSTRING(promotion_no ,6,len(promotion_no))) end\r\n\t\t\t\t\tend) as ATG_LOYALTY_PROMOTION_NO  ,\r\n\t\tmax(case when tran_type_code='EOL '  then promotion_no\r\n\t\tend) as EOL_PROMOTION_NO\r\nfrom (select * from\r\n\t\t(select location_no,till_no,tran_no,tran_date,item_no,item_seq_no,tran_type_code,aux_seq_no,promotion_no,\r\n          -- adding windowing function for find ing the min and then giving the flag for it.\r\n          row_number() over (partition by location_no,till_no,tran_no,tran_date,item_no,item_seq_no,tran_type_code order by aux_seq_no asc) as aux_seq_no_rank\r\n\t\t\tfrom  ANALYTICS.FND_CUST_BASKET_AUX\r\n      -- where location_no='1047' and till_no='11' and tran_no='43' and tran_date='2018-04-16'\r\n\t\t\tWHERE last_updated_date = '$[vlast_updated_date]'\r\n\t\t\t\tAND PROMOTION_NO IS NOT NULL\r\n\t\t\t\tAND PROMOTION_NO <>''\r\n\t\t\t\tAND PROMOTION_DISCOUNT_AMOUNT > 0\r\n\t\t\t\tAND TRAN_TYPE_CODE IN ('LOYALTY', 'WFS', 'RMS', 'ATG', 'ATGLOY', 'STAFF', 'EOL', 'FRANCHISE'))\r\n       where  aux_seq_no_rank=1\r\n\t   )\r\ngroup by location_no,till_no,tran_no,tran_date,item_no,item_seq_no)$[vLimit];\r\n\r\ndrop table if exists #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED;\r\ncreate table #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO,ITEM_SEQ_NO,ITEM_NO) as\r\n\tselect A.*,RMS_PROMOTION_NO,ATG_PROMOTION_NO,ATG_LOYALTY_PROMOTION_NO,EOL_PROMOTION_NO from (\r\n\t#wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED1 A\r\n\tleft join\r\n\t#WNS_ADJ_PROMOTION_NO B\r\n\tON A.TRAN_DATE=B.TRAN_DATE\r\n\tAND A.LOCATION_NO=B.LOCATION_NO\r\n\tAND A.TILL_NO=B.TILL_NO\r\n\tAND A.TRAN_NO=B.TRAN_NO\r\n\tAND A.item_seq_no=B.item_seq_no\r\n\tAND A.item_no=B.item_no)$[vLimit];\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CA_AUX_SUBSET;\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName]\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS (\r\n\t\tSELECT A.*, LOYALTY_PROMO_FLAG, LOYALTY_DISCOUNT_SELLING, WFS_DISCOUNT_SELLING, RMS_PROMO_FLAG, RMS_DISCOUNT_SELLING, ATG_PROMO_FLAG,\r\n\t\t\t\tATG_DISCOUNT_SELLING, ATGLOY_PROMO_FLAG, ATG_LOYALTY_DISCOUNT_SELLING, STAFF_PROMO_FLAG, STAFF_DISCOUNT_SELLING,VOUCHER_DISCOUNT_SELLING, EOL_PROMO_FLAG,\r\n\t\t\t\tEOL_DISCOUNT_SELLING, FRANCHISE_PROMO_FLAG, OTHER_DISCOUNT_SELLING,\r\n\t\t\t\tCASE WHEN PROMOTION_FLAG = 1 THEN 1 ELSE 0 END AS PROMO_FLAG,\r\n\t\t\t\tB.DISCOUNT_CODE,RMS_PROMOTION_NO,ATG_PROMOTION_NO,ATG_LOYALTY_PROMOTION_NO,EOL_PROMOTION_NO,markdown_seq_no\r\n\t\tFROM #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP A\r\n\t\tLEFT JOIN #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED B\r\n\t\tON A.TRAN_DATE = B.TRAN_DATE\r\n\t\t\tAND A.LOCATION_NO = B.LOCATION_NO\r\n\t\t\tAND A.TILL_NO = B.TILL_NO\r\n\t\t\tAND A.TRAN_NO = B.TRAN_NO\r\n\t\t\tAND  A.ITEM_SEQ_NO = B.ITEM_SEQ_NO\r\n\t\t\tAND  A.ITEM_NO = B.ITEM_NO\r\n\t\tLEFT JOIN #wns_adj_markdown_seq C\r\n\t\tON A.TRAN_DATE = C.TRAN_DATE\r\n\t\t\tAND A.LOCATION_NO = C.LOCATION_NO\r\n\t\t\tAND A.TILL_NO = C.TILL_NO\r\n\t\t\tAND A.TRAN_NO = C.TRAN_NO\r\n\t\t\tAND A.ITEM_SEQ_NO = C.ITEM_SEQ_NO\r\n\t\t\tAND A.ITEM_NO = C.ITEM_NO)$[vLimit];\r\n-- Execution time: 19m 22s\r\n\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CUST_BASKET_ITEM_SUBSET_TEMP;\r\nDROP TABLE IF EXISTS #wns_nm_DD_SHK_CA_AUX_SUBSET_UNPIVOTTED;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT D - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT 0 - Removing previous week's Base Table *****************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- Moving previous week's Base Table to S3 Development External\r\n-- unload ('select * from development.wns_cust_basket_item') --this part will change for the next wednesday\r\n-- to 's3://woolworths-its-automation/marketing-automation/data/ttci/development/cust_basket_item_{3}'\r\n-- iam_role 'arn:aws:iam::102116558525:role/etl_sulaco'\r\n-- allowoverwrite\r\n-- parallel on\r\n-- partition by(tran_date)\r\n-- parquet;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT 0 - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT E - Final inner join of CUST_BASKET & $[vCBI] **************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\nCREATE TABLE #WNS_CUST_BASKET_ITEM_TEMP\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO, ITEM_SEQ_NO,ITEM_NO) AS\r\n\t (\r\n\t\tSELECT a.location_no, a.till_no, a.tran_no, a.tran_date,\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no, a.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\ta.location_name, a.area_no, a.area_name, a.region_no, a.region_name, a.shape_of_chain_desc as alternate_location_hierarchy1,\r\n\t\t\t\t-1 as alternate_location_hierarchy2, -1 as alternate_location_hierarchy3 , -1 as alternate_location_hierarchy4,\r\n\t\t\t\t-1 as alternate_location_hierarchy5 , -1 as alternate_location_hierarchy6,\r\n\t\t\t\ta.tran_time,\r\n\t\t\t\ta.tran_type, a.tran_ind,\r\n\t\t\t\ta.tran_selling,\r\n\t\t\t\ta.tran_selling/(1+(vat_rate_perc1/100)) as tran_selling_vat_excl,--p2\r\n\t\t\t\ta.discount_selling,\r\n\t\t\t\ta.discount_selling/(1+(vat_rate_perc1/100)) as DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.store_card_tender_count, a.store_card_tran_tender_selling,\r\n\t\t\t\ta.credit_card_tender_count, a.credit_card_tran_tender_selling,\r\n\t\t\t\ta.gift_card_tender_count, a.gift_card_tran_tender_selling,\r\n\t\t\t\ta.voucher_tender_count, a.voucher_tran_tender_selling,\r\n\t\t\t\ta.alien_card_tender_count, a.alien_card_tran_tender_selling,\r\n\t\t\t\ta.cash_tender_ind, a.cash_tran_tender_selling,\r\n\t\t\t\ta.other_tender_count, a.other_tran_tender_selling,\r\n\t\t\t\ta.wrewards_swipe_ind, a.myschool_swipe_ind,a.VMP_IND,\r\n\t\t\t\ta.ucid,\r\n\t\t\t\t/*case when a.ucid_type in ('KNOWN') AND a.customer_current_tier_code IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\twhen a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\tWHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\tWHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\t\telse 'CASH'\r\n\t\t\t\t\tEND AS CUSTOMER_COHORT,*/\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fy IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FY,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fh IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FH,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fq IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FQ,\r\n\t\t\t\tcase when a.ucid_type in ('KNOWN') AND a.tier_fm IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when a.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN a.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FM,\r\n\t\t\t\ta.acquisition_date,\r\n\t\t\t\t-1 as foods_life_cycle_code, -1 as fbh_life_cycle_code, -1 as ww_life_cycle_code,\r\n\t\t---1 as LAST_UPDATED_DATE,\r\n\t\t\t\ta.age,\r\n\t\t\t\tcase when a.AGE between 18 and 24 then '18-24'\r\n\t\t\t\t\t when a.AGE between 25 and 34 then '25-34'\r\n\t\t\t\t\t when a.AGE between 35 and 44 then '35-44'\r\n\t\t\t\t\t when a.AGE between 45 and 54 then '45-54'\r\n\t\t\t\t\t when a.AGE>55 then '55+' else 'No Value' end as AGE_BAND,\r\n\t\t\t\ta.race as derived_race, a.gender,\r\n\t\t\t\t-1 as HOUSEHOLD_INCOME_BAND_FY,\r\n\t\t\t\t-1 as MACRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as MICRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as EMPLOYEE_STATUS_CODE,-- @adj sep\r\n\t\t\t\tb.item_seq_no, b.item_no,\r\n\t\t\t\tb.tran_type as item_tran_type,\r\n\t\t\t\tb.item_tran_selling,\r\n\t\t\t\tb.discount_selling as item_discount_selling,\r\n\t\t\t\tb.waste_discount_selling as WASTE_DISCOUNT_PERC,\r\n\t\t\t\tb.item_tran_selling/(1+(vat_rate_perc1/100)) as ITEM_TRAN_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.discount_selling/(1+(vat_rate_perc1/100)) as ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.vat_rate_perc1 as vat_rate_perc,\r\n\t\t\t\tb.vitality_uda_value as VITALITY_UDA_VALUE_NO,\r\n\t\t\t\tb.tran_qty,\r\n\t\t\t\tb.item_tran_qty,\r\n\t\t\t\tb.discount_code,\r\n\t\t\t\tb.RMS_PROMOTION_NO,b.ATG_PROMOTION_NO,b.ATG_LOYALTY_PROMOTION_NO,b.EOL_PROMOTION_NO,\r\n\t\t\t\tb.loyalty_discount_selling,\r\n\t\t\t\tb.rms_discount_selling,\r\n\t\t\t\tb.atg_discount_selling,\r\n\t\t\t\tb.atg_loyalty_discount_selling,\r\n\t\t\t\tb.staff_discount_selling,b.VOUCHER_DISCOUNT_SELLING,\r\n\t\t\t\tb.eol_discount_selling,\r\n\t\t\t\tb.wfs_discount_selling,\r\n\t\t\t\tb.other_discount_selling,\r\n\t\t\t\tb.loyalty_discount_selling/(1+(vat_rate_perc1/100)) as LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.rms_discount_selling/(1+(vat_rate_perc1/100)) as RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.atg_discount_selling/(1+(vat_rate_perc1/100)) as ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.atg_loyalty_discount_selling/(1+(vat_rate_perc1/100)) as ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.VOUCHER_DISCOUNT_SELLING/(1+(vat_rate_perc1/100)) as VOUCHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.staff_discount_selling/(1+(vat_rate_perc1/100)) as STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.eol_discount_selling/(1+(vat_rate_perc1/100)) as EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.wfs_discount_selling/(1+(vat_rate_perc1/100)) as WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.other_discount_selling/(1+(vat_rate_perc1/100)) as OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tb.MARKDOWN_SEQ_NO\r\n\t\t\t\t\tFROM DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName] a\r\n\t\tINNER JOIN DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName] b\r\n\t\t\t\tON A.TRAN_DATE = B.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = B.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = B.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = B.TRAN_NO\r\n\t\tWHERE a.chain_no<>30\r\n\t\t\t\tAND a.tran_type in ('S','V','R','Q'))$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_SHK_CA_TRAN_ITEM_LEVEL_CAL_JOIN_BU_$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_DD_CA_TRAN_LEVEL_CAL_JOIN_$[vDayName];\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_kr_Tran_discount_selling_vat_exc;\r\nCreate Table #wns_kr_Tran_discount_selling_vat_exc\r\n\tDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect location_no,till_no,tran_no,tran_date , sum(ITEM_TRAN_SELLING_VAT_EXCL) as TRAN_SELLING_VAT_EXCL,\r\n\t\tsum(ITEM_DISCOUNT_SELLING_VAT_EXCL) as DISCOUNT_SELLING_VAT_EXCL\r\nfrom #WNS_CUST_BASKET_ITEM_TEMP\r\ngroup by 1,2,3,4\r\n$[vLimit];\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item ;\r\ncreate table #wns_nm_fnd_item diststyle all as (\r\n\tselect item_no, B.BUSINESS_UNIT_LONG_DESC,B.BUSINESS_UNIT_NO,B.GROUP_NO,B.SUBGROUP_NO,B.DEPARTMENT_NO\r\n\t\t\t,B.CLASS_NO,B.SUBCLASS_NO,B.BUSINESS_UNIT_NAME,B.GROUP_NAME,B.SUBGROUP_NAME,B.DEPARTMENT_NAME,B.CLASS_NAME\r\n\t\t\t,B.SUBCLASS_NAME,B.ITEM_LEVEL1_NO,upper(b.ITEM_SHORT_DESC) AS ITEM_SHORT_DESC\r\n\t\t\t,B.GROUP_LONG_DESC,B.SUBGROUP_LONG_DESC,B.DEPARTMENT_LONG_DESC\r\n\tfrom ANALYTICS.FND_ITEM b\r\n\tgroup by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS #wns_kr_uda_info ;\r\nCreate Table #wns_kr_uda_info\r\n\tdiststyle all as\r\n(\r\n\tselect item_no,\r\n\t\t UDA_104_VALUE_DESC\r\n\t\t,UDA_104_VALUE_NO\r\n\t\t,UDA_300_VALUE_DESC\r\n\t\t,UDA_300_VALUE_NO\r\n\t\t,UDA_306_VALUE_DESC\r\n\t\t,UDA_306_VALUE_NO\r\n\t\t,UDA_310_VALUE_DESC\r\n\t\t,UDA_310_VALUE_NO\r\n\t\t,UDA_316_VALUE_DESC\r\n\t\t,UDA_316_VALUE_NO\r\n\t\t,UDA_320_VALUE_DESC\r\n\t\t,UDA_320_VALUE_NO\r\n\t\t,UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t,UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t,UDA_2301_VALUE_DESC\r\n\t\t,UDA_2301_VALUE_NO\r\n\t\t,UDA_7702_VALUE_DESC\r\n\t\t,UDA_7702_VALUE_NO\r\n\t\t,UDA_7704_VALUE_DESC\r\n\t\t,UDA_7704_VALUE_NO\r\n\tfrom development.wns_hs_uda_value_and_desc\r\n)\r\n$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName];\r\nCREATE TABLE DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName](\r\nTRAN_DATE\tdate\tencode zstd\t,\r\nLOCATION_NO\tsmallint\tencode zstd\t,\r\nTILL_NO\tsmallint\tencode zstd\t,\r\nTRAN_NO\tinteger\tencode zstd\t,\r\nTRAN_TIME\tvarchar(8)\t\t,\r\nTRAN_IND\tsmallint\t\t,\r\nTRAN_TYPE\tvarchar(4)\t\t,\r\nTRAN_QTY\tinteger\t\t,\r\nTRAN_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nTRAN_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nDISCOUNT_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nDISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nFIN_YEAR_NO\tsmallint\t\t,\r\nFIN_HALF_NO\tsmallint\t\t,\r\nFIN_QUARTER_NO\tsmallint,\r\nFIN_MONTH_NO\tsmallint\t\t,\r\nFIN_WEEK_NO\tsmallint\t\t,\r\nFIN_DAY_NO\tsmallint\t\t,\r\nSEASON_NO\tsmallint\t\t,\r\nWEEKDAY_WEEKEND_CODE\tsmallint\t\t,\r\nTIME_OF_DAY_CODE\tsmallint\t\t,\r\nITEM_SEQ_NO\tsmallint\tencode zstd\t,\r\nITEM_NO\tnumeric(18)\tencode zstd\t,\r\nITEM_LEVEL1_NO\tbigint\tencode zstd\t,\r\nITEM_SHORT_DESC\tvarchar(60)\tencode zstd\t,\r\nITEM_TRAN_TYPE\tvarchar(4)\t\t,\r\nITEM_TRAN_QTY\tinteger\t\t,\r\nITEM_TRAN_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nITEM_TRAN_SELLING_VAT_EXCL\tnumeric(14,2)\tencode zstd\t,\r\nITEM_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nITEM_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nWASTE_DISCOUNT_PERC\tnumeric(14,2)\t\t,\r\nVAT_RATE_PERC\tnumeric(4,2)\t\t,\r\nCOLOUR_FAMILY\tvarchar(50)\t\t,\r\nBUSINESS_UNIT_NO\tsmallint\t\t,\r\nBUSINESS_UNIT_NAME\tvarchar(40)\t\t,\r\nGROUP_NO\tsmallint\t\t,\r\nGROUP_NAME\tvarchar(40)\tencode zstd\t,\r\nSUBGROUP_NO\tsmallint\t\t,\r\nSUBGROUP_NAME\tvarchar(40)\tencode zstd\t,\r\nDEPARTMENT_NO\tsmallint\t\t,\r\nDEPARTMENT_NAME\tvarchar(40)\tencode zstd\t,\r\nCLASS_NO\tsmallint\tencode zstd\t,\r\nCLASS_NAME\tvarchar(40)\tencode zstd\t,\r\nSUBCLASS_NO\tsmallint\tencode zstd\t,\r\nSUBCLASS_NAME\tvarchar(40)\tencode zstd\t,\r\nALTERNATE_PRODUCT_HIERARCHY1\tvarchar(15)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY2\tvarchar(9)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY3\tvarchar(31)\tencode zstd\t,\r\nALTERNATE_PRODUCT_HIERARCHY4\tvarchar(35)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY5\tvarchar(6)\t\t,\r\nALTERNATE_PRODUCT_HIERARCHY6\tvarchar(36)\t\t,\r\nSALES_CHANNEL_CODE\tsmallint\t\t,\r\nAREA_NO\tsmallint\t\t,\r\nAREA_NAME\tvarchar(40)\t\t,\r\nREGION_NO\tsmallint\t\t,\r\nREGION_NAME\tvarchar(40)\t\t,\r\nLOCATION_NAME\tvarchar(40)\t\t,\r\nALTERNATE_LOCATION_HIERARCHY1\tvarchar(40)\t\t,\r\nALTERNATE_LOCATION_HIERARCHY2\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY3\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY4\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY5\tsmallint\t\t,\r\nALTERNATE_LOCATION_HIERARCHY6\tsmallint\t\t,\r\nDISCOUNT_CODE\tsmallint\t\t,\r\nRMS_PROMOTION_NO\tvarchar(25)\t\t,\r\nATG_PROMOTION_NO\tvarchar(25)\t\t,\r\nATG_LOYALTY_PROMOTION_NO\tvarchar(25)\t\t,\r\nEOL_PROMOTION_NO\tvarchar(25)\t\t,\r\nRMS_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nRMS_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nLOYALTY_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nLOYALTY_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nATG_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nATG_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nATG_LOYALTY_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nEOL_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nEOL_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nWFS_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nWFS_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nSTAFF_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nSTAFF_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nVOUCHER_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nVOUCHER_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nOTHER_DISCOUNT_SELLING\tnumeric(14,2)\t\t,\r\nOTHER_DISCOUNT_SELLING_VAT_EXCL\tnumeric(14,2)\t\t,\r\nMARKDOWN_SEQ_NO\tsmallint\t\t,\r\nSTORE_CARD_TENDER_COUNT\tsmallint\t\t,\r\nSTORE_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nCREDIT_CARD_TENDER_COUNT\tsmallint\t\t,\r\nCREDIT_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nGIFT_CARD_TENDER_COUNT\tsmallint\t\t,\r\nGIFT_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nALIEN_CARD_TENDER_COUNT\tsmallint\t\t,\r\nALIEN_CARD_TRAN_TENDER_SELLING\tnumeric(14,2)\tencode zstd\t,\r\nCASH_TENDER_IND\tinteger\t\t,\r\nCASH_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nOTHER_TENDER_COUNT\tsmallint\t\t,\r\nOTHER_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\n--VOUCHER_NO\tinteger\t,\r\nVOUCHER_TENDER_COUNT\tsmallint\t\t,\r\nVOUCHER_TRAN_TENDER_SELLING\tnumeric(14,2)\t\t,\r\nUCID\tvarchar(100)\tencode zstd\t,\r\nCUSTOMER_COHORT_FY\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FH\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FQ\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FM\tvarchar(19)\t\t,\r\nCUSTOMER_COHORT_FW\tvarchar(19)\t\t,\r\nAGE\tsmallint\t\t,\r\nAGE_BAND_FY\tvarchar(8)\t\t,\r\nAGE_BAND_FH\tvarchar(8)\t\t,\r\nAGE_BAND_FQ\tvarchar(8)\t\t,\r\nAGE_BAND_FM\tvarchar(8)\t\t,\r\nAGE_BAND_FW\tvarchar(8)\t\t,\r\nGENDER\tvarchar(8)\t\t,\r\nDERIVED_RACE\tvarchar(30)\t\t,\r\nACQUISITION_DATE\tdate\tencode zstd\t,\r\nHOUSEHOLD_INCOME_BAND_FY\tsmallint\t\t,\r\nMACRO_SEGMENT_FY \tsmallint\t\t,\r\nMICRO_SEGMENT_FY \tsmallint\t\t,\r\nEMPLOYEE_STATUS_CODE\tsmallint\t\t,\r\nSTORE_CARD_COUNT\tsmallint\t\t,\r\nWREWARDS_CARD_COUNT\tsmallint\t\t,\r\nMYSCHOOL_CARD_COUNT\tsmallint\t\t,\r\nCREDIT_CARD_COUNT\tsmallint\t\t,\r\nLITTLEWORLD_MEMBERSHIP_COUNT\tsmallint\t\t,\r\nVITALITY_MEMBERSHIP_COUNT\tsmallint\t\t,\r\nNON_REWARDS_CARD_COUNT\tsmallint\t\t,\r\nUDA_104_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_104_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_300_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_300_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_306_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_306_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_310_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_310_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_316_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_316_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_320_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_320_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_327_7703_7707_7708_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_327_7703_7707_7708_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_2301_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_2301_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_7702_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_7702_VALUE_DESC\tvarchar(100)\t\t,\r\nUDA_7704_VALUE_NO\tvarchar(100)\t\t,\r\nUDA_7704_VALUE_DESC\tvarchar(100)\t\t,\r\nVITALITY_UDA_VALUE_NO\tsmallint\t\t,\r\nWREWARDS_SWIPE_IND\tboolean\t\t,\r\nMYSCHOOL_SWIPE_IND\tboolean\t\t,\r\nVMP_IND\t\t\tsmallint,\r\nBASKET_ID\tvarchar(118)\t\t,\r\nLAST_UPDATED_DATE\tdate\r\n\r\n)\r\nDISTSTYLE KEY\r\nDISTKEY (tran_date)\r\nSORTKEY (tran_date, location_no, till_no, tran_no, item_seq_no, item_no)  ;\r\n-- end of schema\r\nINSERT INTO DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName]\r\n (\r\n\t\tSELECT a.tran_date, a.location_no, a.till_no, a.tran_no,\r\n\t\t\t\ta.tran_time,a.tran_ind,a.tran_type,nvl(a.tran_qty,0) as TRAN_QTY,\r\n\t\t\t\tnvl(a.tran_selling,0) as tran_selling ,nvl(e.tran_selling_vat_excl,0) as tran_selling_vat_excl ,--p2\r\n\t\t\t\tnvl(a.discount_selling,0) as discount_selling,nvl(e.DISCOUNT_SELLING_VAT_EXCL,0) as DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no,\r\n\t\t\t\ta.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\tcase when TRAN_TIME between '07:00:00' and '08:59:59' then 1\r\n\t\t\t\t\t when TRAN_TIME between '09:00:00' and '11:59:59' then 2\r\n\t\t\t\t\t when TRAN_TIME between '12:00:00' and '14:59:59' then 3\r\n\t\t\t\t\t when TRAN_TIME between '15:00:00' and '17:59:59' then 4\r\n\t\t\t\t\t when TRAN_TIME between '18:00:00' and '20:59:59' then 5\r\n\t\t\t\t\t when TRAN_TIME between '21:00:00' and '23:59:59' then 6\r\n\t\t\t\t\t when TRAN_TIME between '00:00:00' and '06:59:59' then 6\r\n\t\t\t\t\telse -1 --[KR]:else condition as 'No Value'\r\n\t\t\t\tend as TIME_OF_DAY_CODE,a.item_seq_no,\r\n\t\t\t\tnvl(a.item_no,0) as item_no, nvl(b.item_level1_no,0) as item_level1_no,\r\n\t\t\t\tnvl(b.ITEM_SHORT_DESC,'NO VALUE') as ITEM_SHORT_DESC,\r\n\t\t\t\ta.item_tran_type,nvl(a.item_tran_qty,0) as item_tran_qty,\r\n\t\t\t\tnvl(a.item_tran_selling,0) as item_tran_selling,nvl(a.ITEM_TRAN_SELLING_VAT_EXCL,0) as ITEM_TRAN_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.item_discount_selling,0) as item_discount_selling, nvl(a.ITEM_DISCOUNT_SELLING_VAT_EXCL,0) as ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.WASTE_DISCOUNT_PERC,0) as WASTE_DISCOUNT_PERC,nvl(a.vat_rate_perc,0) as vat_rate_perc,\r\n\t\t\t\tnvl(c.DIFF_RANGE_DESC,'NO VALUE') as colour_family ,nvl(B.BUSINESS_UNIT_NO,0) as BUSINESS_UNIT_NO,\r\n\t\t\t\tnvl(B.BUSINESS_UNIT_NAME,'NO VALUE') as BUSINESS_UNIT_NAME ,nvl(B.GROUP_NO,0) as GROUP_NO,\r\n\t\t\t\tnvl(B.GROUP_NAME,'NO VALUE') as GROUP_NAME,nvl(B.SUBGROUP_NO,0) as SUBGROUP_NO,nvl(B.SUBGROUP_NAME,'NO VALUE') as SUBGROUP_NAME, nvl(B.DEPARTMENT_NO,0) as DEPARTMENT_NO,nvl(B.DEPARTMENT_NAME,'NO VALUE') as DEPARTMENT_NAME,nvl(B.CLASS_NO,0) as CLASS_NO,nvl(B.CLASS_NAME,'NO VALUE') as CLASS_NAME,nvl(B.SUBCLASS_NO,0) as SUBCLASS_NO,nvl(B.SUBCLASS_NAME,'NO VALUE') as SUBCLASS_NAME,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Food'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO in (51,52,53,54,55) then 'FBH'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=70 then 'Non-Merchandise'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY1 ,\r\n\t\t\t\tcase when GROUP_NO in (9000,9001,9002,9010,9041) then 'Long-Life'\r\n\t\t\t\t\t when GROUP_NO in (9004,9005,9006,9007,9008,9009) then 'Fresh'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=51 then 'Fashion'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=52 and SUBGROUP_NO<>715 then 'Home'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=53 then 'Connect'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=54 then 'Beauty'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=55 then 'CRG'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY2 ,\r\n\t\t\t\tcase when GROUP_NO=1 then 'Womens Outerwear'\r\n\t\t\t\t\t when GROUP_NO=2 then 'Womens Lingerie'\r\n\t\t\t\t\t when GROUP_NO=3 then 'Kidswear'\r\n\t\t\t\t\t when GROUP_NO=4 then 'Trenery'\r\n\t\t\t\t\t when GROUP_NO=5 then 'Menswear'\r\n\t\t\t\t\t when GROUP_NO=6 then 'Womens Footwear and Accessories'\r\n\t\t\t\t\t when DEPARTMENT_NO=172 then 'Bathroom'\r\n\t\t\t\t\t when DEPARTMENT_NO=173 then 'Bedroom'\r\n\t\t\t\t\t when DEPARTMENT_NO=174 then 'Soft Furnishing'\r\n\t\t\t\t\t when DEPARTMENT_NO=176 then 'Kitchen'\r\n\t\t\t\t\t when DEPARTMENT_NO=521 then 'Dining'\r\n\t\t\t\t\t when DEPARTMENT_NO=544 then 'Wrapping Solutions'\r\n\t\t\t\t\t when DEPARTMENT_NO in (695,696) then 'Home Brands'\r\n\t\t\t\t\t when DEPARTMENT_NO=697 then 'Events'\r\n\t\t\t\t\t when SUBGROUP_NO=280 then 'Beauty Private Label'\r\n\t\t\t\t\t when SUBGROUP_NO=233 then 'Beauty Brands'\r\n\t\t\t\t\t when SUBGROUP_NO=212 then 'Airtime'\r\n\t\t\t\t\t when SUBGROUP_NO=446 then 'Cellular'\r\n\t\t\t\t\t when GROUP_NO=12 then 'Country Road'\r\n\t\t\t\t\t when GROUP_NO=13 then 'Witchery'\r\n\t\t\t\t\t when GROUP_NO=14 then 'Mimco'\r\n\t\t\t\t\t when GROUP_NO=9000 then 'Groceries'\r\n\t\t\t\t\t when GROUP_NO=9001 then 'Wine/Beverages/Liquor'\r\n\t\t\t\t\t when GROUP_NO=9002 then 'Snacking/Gifting'\r\n\t\t\t\t\t when GROUP_NO=9004 then 'Prepaded/Deli'\r\n\t\t\t\t\t when GROUP_NO=9005 then 'Bakery'\r\n\t\t\t\t\t when GROUP_NO=9006 then 'Produce/Horti'\r\n\t\t\t\t\t when GROUP_NO=9007 then 'Protein'\r\n\t\t\t\t\t when GROUP_NO=9008 then 'Dairy'\r\n\t\t\t\t\t when GROUP_NO=9009 then 'Foodservices'\r\n\t\t\t\t\t when GROUP_NO=9010 then 'Home/Personal/Pet'\r\n\t\t\t\t\t when GROUP_NO=9041 then 'Frozens'\r\n\t\t\t\t\t when BUSINESS_UNIT_NO=70 then 'Non-Merchandise'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY3 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO=4 then 'Trenery'\r\n\t\t\t\t\t when GROUP_NO=12 then 'Country Road'\r\n\t\t\t\t\t when GROUP_NO=13 then 'Witchery'\r\n\t\t\t\t\t when GROUP_NO=14 then 'Mimco'\r\n\t\t\t\t\t when SUBGROUP_NO in (93,261) then 'Classic Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO=684 then 'Classic Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO in (105,110,147,665,678,682,692,712) then 'EDITION.'\r\n\t\t\t\t\t when DEPARTMENT_NO in (107,139,519,658,685,695) then 'studio.w'\r\n\t\t\t\t\t when DEPARTMENT_NO in (109,150,659) then 'RE:'\r\n\t\t\t\t\t when DEPARTMENT_NO=512 then 'jtone'\r\n\t\t\t\t\t when DEPARTMENT_NO=698 then 'Distraction'\r\n\t\t\t\t\t when DEPARTMENT_NO=664 then 'Soft and Flexy'\r\n\t\t\t\t\t when DEPARTMENT_NO=123 then 'Modern'\r\n\t\t\t\t\t when DEPARTMENT_NO in (702,704) then 'SAF'\r\n\t\t\t\t\t when DEPARTMENT_NO in (163,687,158) then '(&US)'\r\n\t\t\t\t\t when DEPARTMENT_NO=650 then 'Early Learning Centre'\r\n\t\t\t\t\t when DEPARTMENT_NO in (159,548) and SUBCLASS_NO not in (1274,1987,9229) then 'Schoolwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (119,121,126,696) then 'W Collection'\r\n\t\t\t\t\t when DEPARTMENT_NO=526 then 'Sanctuary'\r\n\t\t\t\t\t when DEPARTMENT_NO=651 then 'Eye Candy'\r\n\t\t\t\t\t when DEPARTMENT_NO=654 then 'Fox Box'\r\n\t\t\t\t\t when DEPARTMENT_NO=707 then 'Clarins'\r\n\t\t\t\t\t when DEPARTMENT_NO=193 then 'MTN'\r\n\t\t\t\t\t when DEPARTMENT_NO=194 then 'Vodacom'\r\n\t\t\t\t\t when DEPARTMENT_NO=195 then 'Cell C'\r\n\t\t\t\t\t when DEPARTMENT_NO=532 then 'Telkom'\r\n\t\t\t\t\t when CLASS_NO in (1701,3227,3576,4976,5602) then 'Classic Collection'\r\n\t\t\t\t\t when CLASS_NO in (1136,1706,2686,3232,4384,4973,5120,5607) then 'Modern'\r\n\t\t\t\t\t when CLASS_NO in (2229,1285) then 'studio.w'\r\n\t\t\t\t\t when CLASS_NO in (1255,1266) then 'AU'\r\n\t\t\t\t\t when CLASS_NO=1132 then 'Lingerie Collection'\r\n\t\t\t\t\t when CLASS_NO=1608 then 'Premium Collection'\r\n\t\t\t\t\t when CLASS_NO in (1090,1278) then '(&US)'\r\n\t\t\t\t\t when CLASS_NO in (1859,1882) then 'Walkmates'\r\n\t\t\t\t\t when CLASS_NO in (1455,1459,1460) and SUBCLASS_NO not in (3954,9049) then 'W Beauty'\r\n\t\t\t\t\t when CLASS_NO=1797 then 'Longmarket'\r\n\t\t\t\t\t when CLASS_NO=4716 then 'QVS'\r\n\t\t\t\t\t when CLASS_NO=5345 then 'SAVI'\r\n\t\t\t\t\t when CLASS_NO=1013 then 'Payot'\r\n\t\t\t\t\t when CLASS_NO=1035 then 'Ciate'\r\n\t\t\t\t\t when CLASS_NO=1070 then 'MSLONDON'\r\n\t\t\t\t\t when CLASS_NO=1078 then 'Billion Dollar Brows'\r\n\t\t\t\t\t when CLASS_NO=1146 then 'Chanel'\r\n\t\t\t\t\t when CLASS_NO=1170 then 'Glam Glow'\r\n\t\t\t\t\t when CLASS_NO=1183 then 'Estee Lauder'\r\n\t\t\t\t\t when CLASS_NO=1188 then 'Clinique'\r\n\t\t\t\t\t when CLASS_NO=1198 then 'Bobbi Brown'\r\n\t\t\t\t\t when CLASS_NO=1383 then 'Alaia'\r\n\t\t\t\t\t when CLASS_NO=1400 then 'Bvlgari'\r\n\t\t\t\t\t when CLASS_NO=1411 then 'Burberry'\r\n\t\t\t\t\t when CLASS_NO=1416 then 'Issey Miyake'\r\n\t\t\t\t\t when CLASS_NO=1436 then 'Coach'\r\n\t\t\t\t\t when CLASS_NO=1443 then 'Elie Saab'\r\n\t\t\t\t\t when CLASS_NO=1453 then 'Hermes'\r\n\t\t\t\t\t when CLASS_NO=1461 then 'Narciso Rodriguez'\r\n\t\t\t\t\t when CLASS_NO=1474 then 'Clarins'\r\n\t\t\t\t\t when CLASS_NO=1540 then 'Elizabeth Arden'\r\n\t\t\t\t\t when CLASS_NO=1550 then 'Lancome'\r\n\t\t\t\t\t when CLASS_NO=1557 then 'La Prairie'\r\n\t\t\t\t\t when CLASS_NO=1563 then 'Dr. Hauschka'\r\n\t\t\t\t\t when CLASS_NO=1568 then 'Hugo Boss'\r\n\t\t\t\t\t when CLASS_NO=1572 then 'Lacoste'\r\n\t\t\t\t\t when CLASS_NO=1576 then 'Gucci'\r\n\t\t\t\t\t when CLASS_NO=1580 then 'Mugler'\r\n\t\t\t\t\t when CLASS_NO=1584 then 'Azzaro'\r\n\t\t\t\t\t when CLASS_NO=1588 then 'Calvin Klein'\r\n\t\t\t\t\t when CLASS_NO=1592 then 'Cartier'\r\n\t\t\t\t\t when CLASS_NO=1596 then 'Davidoff'\r\n\t\t\t\t\t when CLASS_NO=1604 then 'Givenchy'\r\n\t\t\t\t\t when CLASS_NO=1610 then 'Marc Jacobs'\r\n\t\t\t\t\t when CLASS_NO=1617 then 'Chloe'\r\n\t\t\t\t\t when CLASS_NO=1627 then 'Joop'\r\n\t\t\t\t\t when CLASS_NO=1633 then 'Missoni'\r\n\t\t\t\t\t when CLASS_NO=1657 then 'Paco Rabanne'\r\n\t\t\t\t\t when CLASS_NO=1661 then 'Valentino'\r\n\t\t\t\t\t when CLASS_NO=1665 then 'Versace'\r\n\t\t\t\t\t when CLASS_NO=1669 then 'Donna Karan'\r\n\t\t\t\t\t when CLASS_NO=1673 then 'Aramis'\r\n\t\t\t\t\t when CLASS_NO=1676 then 'Michael Kors'\r\n\t\t\t\t\t when CLASS_NO=1681 then 'Zegna'\r\n\t\t\t\t\t when CLASS_NO=1684 then 'Lab Series'\r\n\t\t\t\t\t when CLASS_NO=1688 then 'Jean Paul Gaultier'\r\n\t\t\t\t\t when CLASS_NO=1692 then 'Zadig&Voltaire'\r\n\t\t\t\t\t when CLASS_NO=1696 then 'Van Cleef & Arpels'\r\n\t\t\t\t\t when CLASS_NO=1703 then 'Stella Mccartney'\r\n\t\t\t\t\t when CLASS_NO=1709 then 'Alexander Mcqueen'\r\n\t\t\t\t\t when CLASS_NO=1712 then 'Carolina Herrera'\r\n\t\t\t\t\t when CLASS_NO=1722 then 'Roberto Cavalli'\r\n\t\t\t\t\t when CLASS_NO=1777 then 'Yves Saint Laurent'\r\n\t\t\t\t\t when CLASS_NO=1781 then 'Giorgio Armani'\r\n\t\t\t\t\t when CLASS_NO=1785 then 'Dolce&Gabanna'\r\n\t\t\t\t\t when CLASS_NO=1801 then 'La Mer'\r\n\t\t\t\t\t when CLASS_NO=1806 then 'Tom Ford Beauty'\r\n\t\t\t\t\t when CLASS_NO=1815 then 'Jo Malone London'\r\n\t\t\t\t\t when CLASS_NO=1825 then 'Salvatore Ferragamo'\r\n\t\t\t\t\t when CLASS_NO=1848 then 'Cowshed'\r\n\t\t\t\t\t when CLASS_NO=1855 then 'LOCCITANE'\r\n\t\t\t\t\t when CLASS_NO=2024 then 'Mont Blanc'\r\n\t\t\t\t\t when CLASS_NO=2028 then 'Dunhill'\r\n\t\t\t\t\t when CLASS_NO=2083 then 'Charlotte Rhys'\r\n\t\t\t\t\t when CLASS_NO=2135 then 'Suki Suki Naturals'\r\n\t\t\t\t\t when CLASS_NO=2137 then 'Skin Creamery'\r\n\t\t\t\t\t when CLASS_NO=2139 then 'Acqua Di Parma'\r\n\t\t\t\t\t when CLASS_NO=2144 then 'Vita Liberata'\r\n\t\t\t\t\t when CLASS_NO=3527 then 'Nesti Soaps'\r\n\t\t\t\t\t when CLASS_NO=4118 then 'Dior'\r\n\t\t\t\t\t when CLASS_NO=4804 then 'Revlon'\r\n\t\t\t\t\t when CLASS_NO=4820 then 'Stila'\r\n\t\t\t\t\t when CLASS_NO=5413 then 'Morgan Taylor'\r\n\t\t\t\t\t when CLASS_NO=5472 then 'Opi'\r\n\t\t\t\t\t when CLASS_NO=5927 then 'Nuxe'\r\n\t\t\t\t\t when CLASS_NO=5951 then 'Sampar'\r\n\t\t\t\t\t when CLASS_NO=9068 then 'Ren'\r\n\t\t\t\t\t when CLASS_NO=9070 then 'Decleor'\r\n\t\t\t\t\t when CLASS_NO=9071 then 'Gatineau'\r\n\t\t\t\t\t when CLASS_NO=9085 then 'Mavala'\r\n\t\t\t\t\t when CLASS_NO=9122 then 'Vichy'\r\n\t\t\t\t\t when CLASS_NO=9147 then 'Smashbox'\r\n\t\t\t\t\t when CLASS_NO=9159 then 'Tommy Hilfiger'\r\n\t\t\t\t\t when CLASS_NO=9369 then 'Yves Rocher'\r\n\t\t\t\t\t when CLASS_NO in (5306,5321,5324) then 'Telkom'\r\n\t\t\t\t\t when CLASS_NO=5310 then 'Cell C'\r\n\t\t\t\t\t when CLASS_NO=5314 then 'MTN'\r\n\t\t\t\t\t when CLASS_NO=5318 then 'Neotel'\r\n\t\t\t\t\t when CLASS_NO=5327 then 'Virgin'\r\n\t\t\t\t\t when CLASS_NO=5331 then 'Vodacom'\r\n\t\t\t\t\t when SUBCLASS_NO in (1302,1307,1324,2547,2552,2553,2554,2680,2685,3301,3303,3429,3766,5876,3860,3863,3867,4621,4754,4856,\r\n\t\t\t\t\t\t\t\t\t\t\t 4868,4870,5128,5129,5728,7141) then 'Classic Collection'\r\n\t\t\t\t\t when SUBCLASS_NO in (2378,2681,2683,2684,3096,3393,3765,3811,3861,3864,3868,3978,4304,5609,5611,5875,7015) then 'Modern'\r\n\t\t\t\t\t when SUBCLASS_NO in (2548,2550,2551,3012,3010,5126,5125,5132,7146) then 'EDITION.'\r\n\t\t\t\t\t when SUBCLASS_NO in (1121,1129,1134,1138,1140,1308,1317,1811,2465,3009,4622,5062) then 'studio.w'\r\n\t\t\t\t\t when SUBCLASS_NO in (1125,1130,1137,1139,1142,1316,1318,1812,2467,3453,7179) then 'RE:'\r\n\t\t\t\t\t when SUBCLASS_NO in (3954,4214,4467,9163,9049) then 'jtone'\r\n\t\t\t\t\t when SUBCLASS_NO in (1274,1987,9229) then 'Walkmates'\r\n\t\t\t\t\t when SUBCLASS_NO in (5157,5158,5159,5160) then 'Heatgen'\r\n\t\t\t\t\t when SUBCLASS_NO=1814 then 'Branded Kitchen Appliances'\r\n\t\t\t\t\t when SUBCLASS_NO=5989 then 'Branded Kitchen Cookware'\r\n\t\t\t\t\t when SUBCLASS_NO=5990 then 'Branded Kitchen Kitchen Accessories'\r\n\t\t\t\t\t when SUBCLASS_NO=5991 then 'Branded Kitchen Knives'\r\n\t\t\t\t\t when SUBCLASS_NO=5993 then 'Branded Dining Drinkware'\r\n\t\t\t\t\t when SUBCLASS_NO=5994 then 'Branded Dining Cutlery'\r\n\t\t\t\t\t when SUBCLASS_NO=1833 then 'Bath Time'\r\n\t\t\t\t\t when SUBCLASS_NO=2034 then 'Le Bain'\r\n\t\t\t\t\t when SUBCLASS_NO=2207 then 'Every Day'\r\n\t\t\t\t\t when SUBCLASS_NO=3100 then 'Unwind'\r\n\t\t\t\t\t when SUBCLASS_NO=3403 then 'African'\r\n\t\t\t\t\t when SUBCLASS_NO=4536 then 'Ingredients'\r\n\t\t\t\t\t when SUBCLASS_NO=4537 then 'Fresh Delights'\r\n\t\t\t\t\t when SUBCLASS_NO=4774 then 'Love Your Skin'\r\n\t\t\t\t\t when SUBCLASS_NO=9025 then 'Extracts From Nature'\r\n\t\t\t\t\t when SUBCLASS_NO=1253 then 'Simply Florals'\r\n\t\t\t\t\t when SUBCLASS_NO=2021 then 'Belle Maison'\r\n\t\t\t\t\t when SUBCLASS_NO=2896 then 'Classic Collection'\r\n\t\t\t\t\t when SUBCLASS_NO=5154 then 'Bliss'\r\n\t\t\t\t\t when SUBCLASS_NO=5861 then 'AG Mobile'\r\n\t\t\t\t\t when SUBCLASS_NO=5862 then 'Mobicel'\r\n\t\t\t\t\t when SUBCLASS_NO=5955 then 'Hisense'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY4 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO in (1,2,6,14) then 'Women'\r\n\t\t\t\t\t when GROUP_NO=5 then 'Men'\r\n\t\t\t\t\t when GROUP_NO=3 then 'Kids'\r\n\t\t\t\t\t when SUBGROUP_NO in (392,422,426) then 'Women'\r\n\t\t\t\t\t when SUBGROUP_NO in (423,427) then 'Men'\r\n\t\t\t\t\t when SUBGROUP_NO in (337,393,424) then 'Kids'\r\n\t\t\t\t\t when DEPARTMENT_NO in (108,112,113,119,121,126,139,514,526,554,610,651,654,683,707) then 'Women'\r\n\t\t\t\t\t when DEPARTMENT_NO in (141,552,642) then 'Men'\r\n\t\t\t\t\t when DEPARTMENT_NO=136 then 'Kids'\r\n\t\t\t\t\t when CLASS_NO in (1013,1035,1070,1078,1170,1198,1383,1421,1443,1451,1455,1540,1550,1557,1563,1610,1617,1633,1703,1709,\r\n\t\t\t\t\t\t\t\t\t\t 1797,1801,1855,2135,2137,2144,3527,4118,4820,5413,5472,5927,5951,9068,9071,9085,9147,9369) then 'Women'\r\n\t\t\t\t\t when CLASS_NO in (1673,1681,1684,2028) then 'Men'\r\n\t\t\t\t\t when CLASS_NO in (1714,2044,4014,2035,2047) then 'Kids'\r\n\t\t\t\t\t when SUBCLASS_NO in (1406,1413,1427,1442,1457,1549,1556,1562,1567,1844,1966,2401,2756,3471,4214,4463,4467,4725,4805,4806,\r\n\t\t\t\t\t\t\t\t\t\t4807,4808,4809,4810,5293,5857,8698,9020,9021,9022,9049,9081,9082,9126,9163,1467,1570,1574,1578,1582,1586,1590,1594,1606,\r\n\t\t\t\t\t\t\t\t\t\t1599,1690,1694,1699,1720,1754,1779,1783,1787,1826,2026,1629,1659,1663,1667,1671,1678,3677,1147,1148,1154,1160,1184,1185,\r\n\t\t\t\t\t\t\t\t\t\t1794,1190,1191,1195,1490,1507,1522,1523,1807,1823,1834) then 'Women'\r\n\t\t\t\t     when SUBCLASS_NO in (1410,1415,1435,1458,1824,2402,2757,4038,4469,4811,5858,8687,9032,9083,1468,1571,1575,1579,1583,1587,\r\n\t\t\t\t\t\t\t\t\t\t\t1591,1595,1607,1601,1691,1695,1702,1721,1776,1780,1784,1788,1827,2027,1632,1660,1664,1668,1672,1680,3680,1162,1186,1196,\r\n\t\t\t\t\t\t\t\t\t\t\t1537,1809) then 'Men'\r\n\t\t\t\t     when SUBCLASS_NO in (2384,4799,6043,9034,9051) then 'Kids'\r\n                else 'Others' end as ALTERNATE_PRODUCT_HIERARCHY5 ,\r\n\t\t\t\tcase when BUSINESS_UNIT_NO=50 then 'Others'\r\n\t\t\t\t\t when GROUP_NO=1 then 'Outerwear'\r\n\t\t\t\t\t when GROUP_NO=14 and CLASS_NO<>5248 then 'Accessories'\r\n\t\t\t\t\t when GROUP_NO=7 then 'Homeware'\r\n\t\t\t\t\t when GROUP_NO=9 then 'Cellular and Airtime'\r\n\t\t\t\t\t when SUBGROUP_NO in (261,750) and CLASS_NO not in (1790,4296,4588) then 'Outerwear'\r\n\t\t\t\t\t when SUBGROUP_NO=200 then 'Footwear'\r\n\t\t\t\t\t when SUBGROUP_NO=366 then 'Accessories'\r\n\t\t\t\t\t when SUBGROUP_NO=290 then 'Underwear'\r\n\t\t\t\t\t when SUBGROUP_NO in (425,753) then 'Homeware'\r\n\t\t\t\t\t when SUBGROUP_NO=754 then 'Beauty Services'\r\n\t\t\t\t\t when DEPARTMENT_NO in (108,112,113,119,121,130,136,141,157,158,159,162,163,514,523,528,537,548,551,552,554,566,570,575,\r\n\t\t\t\t\t\t\t\t\t\t\t 576,577,578,580,583,589,590,610,642,670,673,674,683,687)\r\n\t\t\t\t\t and CLASS_NO not in (1270,1275,1329,1330,4401,5918,9192,9391,\r\n\t\t\t\t\t\t\t\t\t\t\t 9478,9479,9494,9495,9531,9533,9551,9555) then 'Outerwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (123,153,160,165,684) and SUBCLASS_NO not in (4072,4183,6529,6546) then 'Sleepwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (128,171,179,185,663,672,711) then 'Footwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (124,126,139,154,620) then 'Underwear'\r\n\t\t\t\t\t when DEPARTMENT_NO in (129,155) then 'Hosiery and Socks'\r\n\t\t\t\t\t when DEPARTMENT_NO in (555,562,650) then 'Homeware'\r\n\t\t\t\t\t when DEPARTMENT_NO in (115,116,567,571,581,585,586,653,671,675,677) and CLASS_NO not in (2995,2996,3318,3327,3338,3343,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 5274,5349,9451,9453) and SUBCLASS_NO<>5410 then 'Accessories'\r\n\t\t\t\t\t when CLASS_NO in (1338,1360,4859,5622) then 'Outerwear'\r\n\t\t\t\t\t when CLASS_NO in (1270,1329,2995,3327,3338,5248,5639,9192,9451) then 'Footwear'\r\n\t\t\t\t\t when CLASS_NO in (1275,1790,4296,4588,9479,9495,9533,9555) then 'Accessories'\r\n\t\t\t\t\t when CLASS_NO in (1773,1995,2010,2655,2661,4401,4887,4890,4892,4903,4906,5633,5773) then 'Underwear'\r\n\t\t\t\t\t when CLASS_NO in (1330,2002,2012,2996,3318,3343,4899,5274,5349,5918,9453) then 'Hosiery and Socks'\r\n\t\t\t\t\t when CLASS_NO in (1361,1771,2650,5484,5766,9391,9478,9494,9531,9551) then 'Sleepwear'\r\n\t\t\t\t\t when CLASS_NO=1459 then 'Beauty Skin'\r\n\t\t\t\t\t when CLASS_NO=1455 then 'Beauty Colour'\r\n\t\t\t\t\t when CLASS_NO in (2392,9033) then 'Beauty Gifting and Special Occasions'\r\n\t\t\t\t\t when CLASS_NO in (1763,1764,4716,5345) then 'Beauty Accessories and Bags'\r\n\t\t\t\t\t when SUBCLASS_NO in (1895,4529,4931,4933,6423,6424) then 'Outerwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (1352,4072,4183,5410,5620,6529,6546) then 'Footwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (1359,1852,3740,4932,5621,6421) then 'Accessories'\r\n\t\t\t\t\t when SUBCLASS_NO in (4525,4526) then 'Underwear'\r\n\t\t\t\t\t when SUBCLASS_NO in (4078) then 'Hosiery and Socks'\r\n\t\t\t\t\t when SUBCLASS_NO in (1014,1178,1802,2138,2145,5928,5952,9078,9081,9084,9126,9323,4315,1818,1147,1184,1190,1507,1547,1553,\r\n\t\t\t\t\t\t\t\t\t\t\t 1560,1564,1834,4774,1966,9020,9032,1021,1839,1843,2136,1362,1366,9079,9082,9083,1368,1369,1371,4038,4725,1537) then 'Beauty Skin'\r\n\t\t\t\t\t when SUBCLASS_NO in (1182,1803,4316,1067,4807,5418,5473,9090,9325,1148,1794,1191,1523,1545,1554,1559,1566,1823,9644,1038,\r\n\t\t\t\t\t\t\t\t\t\t\t 1040,1042,1069,1071,1077,1113,1079,1202,1203,1205,1206,1207,1840,1373,4805,4806,4808,4809,5293,1374,4821,4822,4823,4824,\r\n\t\t\t\t\t\t\t\t\t\t\t 1375,5417,5474,5476,5478,5479,1854,9088,9089,1381,2848,2850,2851,9150) then 'Beauty Colour'\r\n\t\t\t\t\t when SUBCLASS_NO in (4317,1847,4810,4811,1856,2086,1816,2141,1160,1162,1185,1186,1195,1196,1490,1546,1551,1558,8687,8698,\r\n\t\t\t\t\t\t\t\t\t\t\t 9049,1388,1397,1402,1406,1410,1412,1413,1415,1422,1427,1435,1441,1442,1824,1446,1452,1456,1457,1458,1462,1467,1468,1569,\r\n\t\t\t\t\t\t\t\t\t\t\t 1570,1571,1573,1574,1575,1577,1578,1579,1581,1582,1583,1585,1586,1587,1589,1590,1591,1593,1594,1595,1605,1606,1607,1598,\r\n\t\t\t\t\t\t\t\t\t\t\t 1599,1601,1614,1615,1621,1622,1628,1629,1632,1641,1643,1658,1659,1660,1662,1663,1664,1666,1667,1668,1670,1671,1672,1674,\r\n\t\t\t\t\t\t\t\t\t\t\t 1675,1677,1678,1680,1682,1683,1685,1686,1687,1689,1690,1691,1693,1694,1695,1698,1699,1702,1704,1708,1710,1711,1715,1720,\r\n\t\t\t\t\t\t\t\t\t\t\t 1721,1753,1754,1776,1778,1779,1780,1782,1783,1784,1786,1787,1788,1817,1819,1820,1826,1827,1828,2025,2026,2027,2030,2031,\r\n\t\t\t\t\t\t\t\t\t\t\t 2142,4123,9099,3677,3680,9161,9383,1807,1809) then 'Beauty Fragrance'\r\n\t\t\t\t\t when SUBCLASS_NO in (1849,1850,1851,1945,2085,2087,3528,4287,9327,1833,2034,2207,3100,3403,4536,4537,9025,1253,2021,2896,\r\n\t\t\t\t\t\t\t\t\t\t\t 5154,7797,4207,4208,2211,4214,1798,1799,1800,1154,1522,1548,1555,1561,1565) then 'Beauty Bath and Body'\r\n\t\t\t\t     when SUBCLASS_NO in (1169,1187,1197,1539,1549,1556,1562,1567,1796,1810) then 'Beauty Gifting and Special Occasions'\r\n\t\t\t\telse 'Others' end as ALTERNATE_PRODUCT_HIERARCHY6,\r\n\t\t\t\tcase when a.TILL_NO=997 then 3\r\n\t\t\t\t\twhen a.TILL_NO=999 then 2\r\n\t\t\t\telse 1 end as SALES_CHANNEL_CODE,\r\n\t\t\t\ta.area_no,a.area_name,a.region_no,a.region_name,a.location_name,nvl(a.alternate_location_hierarchy1,'No Value') as alternate_location_hierarchy1,\r\n\t\t\t\ta.alternate_location_hierarchy2, a.alternate_location_hierarchy3 , a.alternate_location_hierarchy4,\r\n\t\t\t\ta.alternate_location_hierarchy5 , a.alternate_location_hierarchy6,\r\n\t\t\t\tnvl(a.discount_code,0) as discount_code,nvl(a.RMS_PROMOTION_NO,'No Value') as RMS_PROMOTION_NO,nvl(a.ATG_PROMOTION_NO,'No Value') as ATG_PROMOTION_NO ,nvl(a.ATG_LOYALTY_PROMOTION_NO,'No Value') as ATG_LOYALTY_PROMOTION_NO,nvl(a.EOL_PROMOTION_NO,'No Value') as EOL_PROMOTION_NO,\r\n\t\t\t\tnvl(a.rms_discount_selling,0) as rms_discount_selling,  nvl(a.RMS_DISCOUNT_SELLING_VAT_EXCL,0) as RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.loyalty_discount_selling,0) as loyalty_discount_selling, nvl(a.LOYALTY_DISCOUNT_SELLING_VAT_EXCL,0) as LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.atg_discount_selling,0) as atg_discount_selling,  nvl(a.ATG_DISCOUNT_SELLING_VAT_EXCL,0) as ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.atg_loyalty_discount_selling,0) as atg_loyalty_discount_selling, nvl(a.ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,0) as ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.eol_discount_selling,0) as eol_discount_selling, nvl(a.EOL_DISCOUNT_SELLING_VAT_EXCL,0) as EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.wfs_discount_selling,0) as wfs_discount_selling,  nvl(a.WFS_DISCOUNT_SELLING_VAT_EXCL,0) as WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.staff_discount_selling,0) as staff_discount_selling, nvl(a.STAFF_DISCOUNT_SELLING_VAT_EXCL,0) as STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.VOUCHER_DISCOUNT_SELLING,0) as VOUCHER_DISCOUNT_SELLING, nvl(a.VOUCHER_DISCOUNT_SELLING_VAT_EXCL,0) as VOUCHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.other_discount_selling,0) as other_discount_selling,nvl(a.OTHER_DISCOUNT_SELLING_VAT_EXCL,0) as OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\tnvl(a.MARKDOWN_SEQ_NO,0) as MARKDOWN_SEQ_NO,nvl(a.store_card_tender_count,0) as store_card_tender_count,nvl(a.store_card_tran_tender_selling,0) as store_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.credit_card_tender_count,0) as credit_card_tender_count, nvl(a.credit_card_tran_tender_selling,0) as credit_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.gift_card_tender_count,0) as gift_card_tender_count, nvl(a.gift_card_tran_tender_selling,0) as gift_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.alien_card_tender_count,0) as alien_card_tender_count, nvl(a.alien_card_tran_tender_selling,0) as alien_card_tran_tender_selling,\r\n\t\t\t\tnvl(a.cash_tender_ind,0) as cash_tender_ind, nvl(a.cash_tran_tender_selling,0) as cash_tran_tender_selling,\r\n\t\t\t\tnvl(a.other_tender_count,0) as other_tender_count, nvl(a.other_tran_tender_selling,0) as other_tran_tender_selling,\r\n\t\t\t\t---1 as voucher_no,\r\n\t\t\t\tnvl(a.voucher_tender_count,0) as voucher_tender_count, nvl(a.voucher_tran_tender_selling,0) as voucher_tran_tender_selling,\r\n\t\t\t\tnvl(a.ucid,'No Value') as ucid,\r\n\t\t\t    a.CUSTOMER_COHORT_FY,\r\n\t\t\t\ta.customer_cohort_fh,\r\n                a.customer_cohort_fq,\r\n                a.customer_cohort_fm,\r\n                'No Value' as customer_cohort_fw,\r\n\t\t\t\tnvl(a.age,0) as age,\r\n\t\t\t\ta.age_band as age_band_fy,\r\n\t\t\t\t'No Value' as age_band_fh,\r\n\t\t\t    'No Value' as age_band_fq,\r\n\t\t\t    'No Value' as age_band_fm,\r\n\t\t\t    'No Value' as age_band_fw,\r\n\t\t\t\tcase when a.gender='u' or a.gender is null then 'NO VALUE' else a.gender end as gender,\r\n\t\t\t\tcase when a.derived_race='RACE UNKNOWN' or a.derived_race is null then 'NO VALUE' else a.derived_race end as derived_race,a.acquisition_date,\r\n\t\t\t\ta.HOUSEHOLD_INCOME_BAND_FY, a.MACRO_SEGMENT_FY , a.MICRO_SEGMENT_FY ,\r\n\t\t\t\t-1 as EMPLOYEE_STATUS_CODE,\r\n\t\t\t\t-1 as store_card_count,             --p2\r\n\t\t\t\t-1 as wrewards_card_count,          --p2\r\n\t\t\t\t-1 as myschool_card_count,          --p2\r\n\t\t\t\t-1 as credit_card_count,            --p2\r\n\t\t\t\t-1 as littleworld_membership_count, --p2\r\n\t\t\t\t-1 as vitality_membership_count,    --p2\r\n\t\t\t\t-1 as non_rewards_card_count       --p2\r\n\t\t\t\t,nvl(d.UDA_104_VALUE_NO,'0') as UDA_104_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_104_VALUE_DESC,'No Value') as UDA_104_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_300_VALUE_NO,'0') as UDA_300_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_300_VALUE_DESC,'No Value') as UDA_300_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_306_VALUE_NO,'0') as UDA_306_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_306_VALUE_DESC,'No Value') as UDA_306_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_310_VALUE_NO,'0') as UDA_310_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_310_VALUE_DESC,'No Value') as UDA_310_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_316_VALUE_NO,'0') as UDA_316_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_316_VALUE_DESC,'No Value') as UDA_316_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_320_VALUE_NO,'0') as UDA_320_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_320_VALUE_DESC,'No Value') as UDA_320_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_327_7703_7707_7708_VALUE_NO,'0') as UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_327_7703_7707_7708_VALUE_DESC,'No Value') as UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_2301_VALUE_NO,'0') as UDA_2301_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_2301_VALUE_DESC,'No Value') as UDA_2301_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_7702_VALUE_NO,'0') as UDA_7702_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_7702_VALUE_DESC,'No Value') as UDA_7702_VALUE_DESC\r\n\t\t\t\t,nvl(d.UDA_7704_VALUE_NO,'0') as UDA_7704_VALUE_NO\r\n\t\t\t\t,nvl(d.UDA_7704_VALUE_DESC,'No Value') as UDA_7704_VALUE_DESC\r\n\t\t\t\t,nvl(a.VITALITY_UDA_VALUE_NO,-1) as VITALITY_UDA_VALUE_NO,\r\n\t\t\t\tnvl(a.wrewards_swipe_ind,0) as wrewards_swipe_ind, nvl(a.myschool_swipe_ind,0) as myschool_swipe_ind,\r\n\t\t\t\ta.VMP_IND,\r\n\t\t\t\ta.TRAN_DATE||'-'||a.LOCATION_NO||'-'||a.TILL_NO||'-'||a.TRAN_NO as basket_id,'1900-01-01' as LAST_UPDATED_DATE\r\n\t\t\t\t--b.LOYALTY_PROMOTION_NO,  --p2 not there in excel sheet\r\n\t\t\t\t--b.WFS_PROMOTION_NO,      --p2  not there in excel sheet\r\n\t\t\t\t--b.STAFF_PROMOTION_NO,    --p2  not there in excel sheet\r\n\t\t\t\t--b.FRANCHISE_PROMOTION_NO ,--p2  not there in excel sheet\r\n\t\tFROM #WNS_CUST_BASKET_ITEM_TEMP a\r\n\t\tLEFT JOIN #wns_nm_fnd_item b\r\n\t\t\t\tON A.ITEM_NO = B.ITEM_NO\r\n\t\tleft join development.wns_hs_Item_Colour_Family c\r\n\t\t\t\tON A.ITEM_NO = c.ITEM_NO\r\n\t\tleft join #wns_kr_uda_info d\r\n\t\t\t\tON A.ITEM_NO = d.ITEM_NO\r\n\t\tleft join #wns_kr_Tran_discount_selling_vat_exc E\r\n\t\t\t\tON A.TRAN_DATE = E.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = E.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = E.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = E.TRAN_NO)$[vLimit];\r\n\r\nDROP TABLE IF EXISTS #WNS_CUST_BASKET_ITEM_TEMP ;\r\nDROP TABLE IF EXISTS #wns_nm_fnd_item ;\r\nDROP TABLE IF EXISTS #wns_kr_uda_info;\r\nDROP TABLE IF EXISTS #wns_kr_Tran_discount_selling_vat_exc;\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT E - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT F - Combining One time run Base table with Base_Table_One_Day_Data(formed above)                                  *****************/\r\n/******************************************************************************************************************************************/\r\nDROP TABLE IF EXISTS DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay]\r\nAS\r\n(SELECT * FROM DEVELOPMENT.$[vCBI])  --One Time run base table  DEVELOPMENT.CUST_BASKET_ITEM_{3}\r\nUNION ALL\r\n(SELECT * FROM DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName])  --daily run base table\r\n;\r\n\r\n\r\n-- Drop previous week's Base Table\r\nTRUNCATE DEVELOPMENT.$[vCBI];\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT G - Mapping updated UCIDs and other details in the consolidated base table formed in Script F                                  *****************/\r\n/******************************************************************************************************************************************/\r\ndrop table if exists DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay];\r\nCreate Table DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay]\r\ndiststyle all as\r\n(select perm_ucid_hashed, ucid_type\r\n\tfrom DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tgroup by 1,2\r\n) $[vLimit];\r\n\r\n--Execution time: 22.88s\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay] AS\r\n      select\r\n\t\t\tb.tran_date, b.location_no, b.till_no, b.tran_no, B.perm_ucid_hashed as ucid,c.BIRTH_DATE,\r\n\t\t\tc.AGE_YEARS\t,\r\n\t\t\tcase when c.gender='u' or c.gender is null then 'NO VALUE' else c.gender end as gender,\r\n\t\t\tcase when c.derived_race='RACE UNKNOWN' or c.derived_race is null then 'NO VALUE' else c.derived_race end as derived_race,\r\n\t\t\td.ACQUISITION_DATE,f.ucid_type\r\n\t\t\tfrom\r\n\t\t\tdevelopment.CUST_BASKET_MAPPING b    -- for current ucid only we need to merge all this.\r\n\t\t\tleft join\r\n\t\t\tDEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] c   -- for demographic  we will add age_band here.\r\n\t\t\ton b.perm_ucid_hashed = c.ucid\r\n\t\t\tleft join\r\n\t\t\tDEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName] d -- for aqusiotion date only\r\n\t\t\ton b.perm_ucid_hashed = d.ucid\r\n\t\t\tleft join DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay] f  -- using ucid_types we will merge this also. not needed we can take this up from WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName]\r\n\t\t\ton b.perm_ucid_hashed = f.perm_ucid_hashed $[vLimit];\r\n--Execution time: 32.83s\r\ndrop table if exists DEVELOPMENT.wns_kr_cust_card_mapping_$[vFinYearWeekNoDay];\r\n\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] AS\r\nSELECT *,\r\n(a.tran_date -cast(BIRTH_DATE as date))/365 AS AGE_TD  ,\r\n--- add age_fy this is a year wise age and fixed for each year.\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no ) as age_fy,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO ) as age_fh,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO ) as age_fq,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO,b.fin_month_no ) as age_fm,\r\nmax(AGE_TD) over (partition by ucid,b.fin_year_no,b.FIN_HALF_NO,b.FIN_QUARTER_NO,b.fin_month_no,b.FIN_WEEK_NO ) as age_fw\r\nFROM DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay] A\r\nLEFT JOIN (SELECT DISTINCT FIN_YEAR_NO, FIN_HALF_NO, FIN_QUARTER_NO, FIN_MONTH_NO, FIN_WEEK_NO ,CALENDAR_DATE FROM ANALYTICS.FND_CALENDAR) B\r\nON A.TRAN_DATE=B.CALENDAR_DATE\r\n;\r\ndelete from DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] where FIN_YEAR_NO<=2017;\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_$[vFinYearWeekNoDay];\r\n--Execution time: 42.19s\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\nCREATE TABLE DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay] AS\r\nSELECT A.*,j.TIER_FY,j.TIER_FH,j.TIER_Fq,j.TIER_FM\r\nFROM DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay] A\r\nLEFT JOIN  development.wns_adj_tier_wise$[vDayName] j    -- for tier only we need to merge this also\r\nON A.fin_year_no = j.fin_year_no\r\nAND A.fin_month_no = j.fin_month_no\r\nAND A.ucid = j.ucid\r\n;\r\ncreate table development.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay]\r\nDISTKEY(TRAN_DATE) COMPOUND SORTKEY(TRAN_DATE, LOCATION_NO, TILL_NO, TRAN_NO) as\r\nselect A.*,c.effective_from_date\r\nfrom DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay] A\r\n  left join (\tselect\r\n\t                        CAST (location_no as SMALLINT) as location_no,\r\n\t                        CAST (till_no as SMALLINT) as till_no,\r\n\t                        CAST (tran_no as INTEGER ) as tran_no,\r\n\t                        tran_date,effective_from_date,effective_to_date\r\n\t                        from development.cust_basket_mapping_tracking\r\n\t                        where effective_to_date is null and tran_date>='2017-06-26'\r\n\t                    ) c\r\n        \t\tON A.TRAN_DATE = c.TRAN_DATE\r\n\t\t\t\t\tAND A.LOCATION_NO = c.LOCATION_NO\r\n\t\t\t\t\tAND A.TILL_NO = c.TILL_NO\r\n\t\t\t\t\tAND A.TRAN_NO = c.TRAN_NO\r\n$[vLimit];\r\n\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_$[vFinYearWeekNoDay];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\n--Execution time: 37.92s\r\n/******************************************************************************************************************************************/\r\n/* END OF SCRIPT G - Mapping updated UCIDs and other details in the consolidated base table formed in Script F                                  *****************/\r\n/******************************************************************************************************************************************/\r\n\r\n\r\n\r\nINSERT INTO DEVELOPMENT.$[vCBI]\r\n\t (\r\n\t\tSELECT a.tran_date, a.location_no, a.till_no, a.tran_no,\r\n\t\t\t\ta.tran_time,a.tran_ind,a.tran_type,a.tran_qty,\r\n\t\t\t\ta.tran_selling ,a.tran_selling_vat_excl ,--p2\r\n\t\t\t\ta.discount_selling,a.DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.fin_year_no, a.fin_half_no, a.fin_quarter_no, a.fin_month_no,\r\n\t\t\t\ta.fin_week_no, a.fin_day_no,a.season_no,a.weekday_weekend_code,\r\n\t\t\t\ta.TIME_OF_DAY_CODE,a.item_seq_no,\r\n\t\t\t\ta.item_no, a.item_level1_no, a.ITEM_SHORT_DESC,a.item_tran_type,\r\n\t\t\t\ta.item_tran_qty,a.item_tran_selling,a.ITEM_TRAN_SELLING_VAT_EXCL,\r\n\t\t\t\ta.item_discount_selling,a.ITEM_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.WASTE_DISCOUNT_PERC,a.vat_rate_perc,\r\n\t\t\t\ta.colour_family,a.BUSINESS_UNIT_NO,a.BUSINESS_UNIT_NAME,a.GROUP_NO,a.GROUP_NAME,\r\n\t\t\t\ta.SUBGROUP_NO,a.SUBGROUP_NAME, a.DEPARTMENT_NO,a.DEPARTMENT_NAME,a.CLASS_NO,a.CLASS_NAME,a.SUBCLASS_NO,a.SUBCLASS_NAME,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY1 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY2 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY3 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY4 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY5 ,\r\n\t\t\t\ta.ALTERNATE_PRODUCT_HIERARCHY6,\r\n\t\t\t\ta.SALES_CHANNEL_CODE,\r\n\t\t\t\ta.area_no,a.area_name,a.region_no,a.region_name,a.location_name,a.alternate_location_hierarchy1,\r\n\t\t\t\ta.alternate_location_hierarchy2, a.alternate_location_hierarchy3 , a.alternate_location_hierarchy4,\r\n\t\t\t\ta.alternate_location_hierarchy5 , a.alternate_location_hierarchy6,\r\n\t\t\t\ta.discount_code,a.RMS_PROMOTION_NO,a.ATG_PROMOTION_NO,a.ATG_LOYALTY_PROMOTION_NO,a.EOL_PROMOTION_NO,\r\n\t\t\t\ta.rms_discount_selling,  a.RMS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.loyalty_discount_selling, a.LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.atg_discount_selling,  a.ATG_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.atg_loyalty_discount_selling, a.ATG_LOYALTY_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.eol_discount_selling, a.EOL_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.wfs_discount_selling,  a.WFS_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.staff_discount_selling, a.STAFF_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.VOUCHER_DISCOUNT_SELLING,\r\n                a.VOUCHER_DISCOUNT_SELLING_VAT_EXCL,\r\n\t\t\t\ta.other_discount_selling,a.OTHER_DISCOUNT_SELLING_VAT_EXCL,--p2\r\n\t\t\t\ta.MARKDOWN_SEQ_NO,a.store_card_tender_count,a.store_card_tran_tender_selling,\r\n\t\t\t\ta.credit_card_tender_count, a.credit_card_tran_tender_selling,\r\n\t\t\t\ta.gift_card_tender_count, a.gift_card_tran_tender_selling,\r\n\t\t\t\ta.alien_card_tender_count, a.alien_card_tran_tender_selling,\r\n\t\t\t\ta.cash_tender_ind, a.cash_tran_tender_selling,\r\n\t\t\t\ta.other_tender_count, a.other_tran_tender_selling,\r\n\t\t\t\t--a.voucher_no,\r\n\t\t\t\ta.voucher_tender_count, a.voucher_tran_tender_selling,\r\n\t\t\t\tnvl(b.ucid ,'No Value') as ucid,\r\n\t\t\t\t--case when b.ucid_type in ('KNOWN') AND e.customer_current_tier_code IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t--\twhen b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t--\tWHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t--\tWHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\t--\telse 'CASH'\r\n\t\t\t\t--\tEND AS CUSTOMER_COHORT,--p2\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fy IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FY,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fh IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FH,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fq IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FQ,\r\n\t\t\t\tcase when  b.ucid_type in ('KNOWN') AND b.tier_fm IN (3,4) THEN 'WREWARDS Known VIP'\r\n\t\t\t\t\t  when b.ucid_type in ('KNOWN') THEN 'WREWARDS Known Base'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('ORPHAN') THEN 'WREWARDS Orphan'\r\n\t\t\t\t\t  WHEN b.ucid_type in ('NON-REWARDS') THEN 'Non-Rewards'\r\n\t\t\t\telse 'CASH'\r\n\t\t\t\tEND AS CUSTOMER_COHORT_FM,\r\n\t           'No Value' as customer_cohort_fw,\r\n\t\t\t\tnvl(b.age_td,0) as age,\r\n\t\t\t\tcase when b.age_fy between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fy between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fy between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fy between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fy>=55 then '55+' else 'No Value' end as AGE_BAND_FY,--p2\r\n                case when b.age_fh between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fh between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fh between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fh between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fh>=55 then '55+' else 'No Value' end as AGE_BAND_FH,--p2\r\n                case when b.age_fq between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fq between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fq between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fq between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fq>=55 then '55+' else 'No Value' end as AGE_BAND_FQ,--p2\r\n\t\t\t\tcase when b.age_fm between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fm between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fm between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fm between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fm>=55 then '55+' else 'No Value' end as AGE_BAND_FM,--p2\r\n\t\t\t\tcase when b.age_fw between 18 and 24 then '18-24'\r\n\t\t\t\t\t when b.age_fw between 25 and 34 then '25-34'\r\n\t\t\t\t\t when b.age_fw between 35 and 44 then '35-44'\r\n\t\t\t\t\t when b.age_fw between 45 and 54 then '45-54'\r\n\t\t\t\t\t when b.age_fw>=55 then '55+' else 'No Value' end as AGE_BAND_FW,--p2\r\n\t\t\t\tcase when b.gender='u' or b.gender is null then 'NO VALUE' else b.gender end as gender,\r\n\t\t\t\tcase when b.derived_race='RACE UNKNOWN' or b.derived_race is null then 'NO VALUE' else b.derived_race end as derived_race,\r\n\t\t\t\tcase WHEN b.ACQUISITION_DATE IS NULL THEN '1999-01-01'\r\n\t\t\t\t\t WHEN b.ACQUISITION_DATE<'1999-01-01' THEN '1999-01-01' -- THE FIRST DATE IN CUST_BASKET IS 1999-06-04\r\n\t                 WHEN b.ACQUISITION_DATE>=(CURRENT_DATE+1) THEN CURRENT_DATE\r\n\t\t\t\tELSE b.ACQUISITION_DATE END AS acquisition_date,\r\n\t\t\t\ta.HOUSEHOLD_INCOME_BAND_FY, a.MACRO_SEGMENT_FY , a.MICRO_SEGMENT_FY ,\r\n\t\t\t\ta.EMPLOYEE_STATUS_CODE, -- @adj sep\r\n\t\t\t\ta.store_card_count,             --p2\r\n\t\t\t\ta.wrewards_card_count,          --p2\r\n\t\t\t\ta.myschool_card_count,          --p2\r\n\t\t\t\ta.credit_card_count,            --p2\r\n\t\t\t\ta.littleworld_membership_count, --p2\r\n\t\t\t\ta.vitality_membership_count,    --p2\r\n\t\t\t\ta.non_rewards_card_count       --p2\r\n\t\t\t\t,nvl(a.UDA_104_VALUE_NO,'0') as UDA_104_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_104_VALUE_DESC,'No Value') as UDA_104_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_300_VALUE_NO,'0') as UDA_300_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_300_VALUE_DESC,'No Value') as UDA_300_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_306_VALUE_NO,'0') as UDA_306_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_306_VALUE_DESC,'No Value') as UDA_306_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_310_VALUE_NO,'0') as UDA_310_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_310_VALUE_DESC,'No Value') as UDA_310_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_316_VALUE_NO,'0') as UDA_316_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_316_VALUE_DESC,'No Value') as UDA_316_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_320_VALUE_NO,'0') as UDA_320_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_320_VALUE_DESC,'No Value') as UDA_320_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_327_7703_7707_7708_VALUE_NO,'0') as UDA_327_7703_7707_7708_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_327_7703_7707_7708_VALUE_DESC,'No Value') as UDA_327_7703_7707_7708_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_2301_VALUE_NO,'0') as UDA_2301_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_2301_VALUE_DESC,'No Value') as UDA_2301_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_7702_VALUE_NO,'0') as UDA_7702_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_7702_VALUE_DESC,'No Value') as UDA_7702_VALUE_DESC\r\n\t\t\t\t,nvl(a.UDA_7704_VALUE_NO,'0') as UDA_7704_VALUE_NO\r\n\t\t\t\t,nvl(a.UDA_7704_VALUE_DESC,'No Value') as UDA_7704_VALUE_DESC\r\n\t\t\t\t,a.VITALITY_UDA_VALUE_NO,a.wrewards_swipe_ind, a.myschool_swipe_ind,a.VMP_IND,\r\n\t\t\t\ta.basket_id,b.effective_from_date as LAST_UPDATED_DATE\r\n\t\t\t\t--a.LOYALTY_PROMOTION_NO,  --p2 not there in excel sheet\r\n\t\t\t\t--a.WFS_PROMOTION_NO,      --p2  not there in excel sheet\r\n\t\t\t\t--a.STAFF_PROMOTION_NO,    --p2  not there in excel sheet\r\n\t\t\t\t--a.FRANCHISE_PROMOTION_NO ,--p2  not there in excel sheet\r\n\t\tfrom\r\n\t\t\tDEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay] a\r\n\t\t\tleft join\r\n\t\t\tdevelopment.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay] b    --BC UCID gets updated (TTCI)\r\n\t\t\ton a.tran_date = b.tran_date\r\n\t\t\tand a.location_no = b.location_no\r\n\t\t\tand a.till_no = b.till_no\r\n\t\t\tand a.tran_no = b.tran_no\r\n\t\t   \t)$[vLimit];\r\n\r\n\r\nDROP TABLE IF EXISTS development.wns_adj_tier_wise$[vDayName];\r\nDROP TABLE IF EXISTS #wns_kr_cust_card_mapping;\r\nDROP TABLE IF EXISTS #wns_kr_tier_year_wise;\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_WNS_SD_TIER_UCID_LEVEL_$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_DD_CA_UCID_LEVEL_CUST_ACQ_mapping$[vDayName];\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO_$[vDayName] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.CUST_BASKET_ITEM_$[vDayName] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.TEMP_CONS_CUST_BASKET_ITEM_$[vFinYearWeekNoDay] ;\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_$[vFinYearWeekNoDay];\r\nDROP TABLE IF EXISTS development.WNS_ADJ_TRAN_DEMO_AQUI_TYPE_CAL_TIER_LUD_$[vFinYearWeekNoDay];\r\ngrant select on table DEVELOPMENT.$[vCBI] to public ;"}, "error": "Database Error in model bar_table_test_cbt (models/example/bar_table_test_cbt.sql)\n  syntax error at or near \"WbVarDef\"\n  LINE 25: WbVarDef vlast_updated_date  = '2020-01-01' ;   --{0}\n           ^\n  compiled SQL at target/run/my_new_project/models/example/bar_table_test_cbt.sql", "status": "ERROR", "execution_time": 1.6303982734680176, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find top 100 customers with the most number of orders\n*/\n\n{{ config(materialized='table') }}\n\nselect c_custkey, c_nationkey, count(*) total_order\nfrom customer c left join orders o on c.c_custkey = o.o_custkey\ngroup by c_custkey, c_nationkey\norder by total_order desc\nlimit 110", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "mycustom"], "unique_id": "model.my_new_project.mycustom", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/mycustom.sql", "original_file_path": "models/example/mycustom.sql", "name": "mycustom", "resource_type": "model", "alias": "mycustom", "checksum": {"name": "sha256", "checksum": "44eb50ee9ae3464b4de61320c5efc8f416bb104c0f88d0439e7936233d63a920"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.drop_relation_if_exists"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/mycustom.sql", "deferred": false, "compiled_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find top 100 customers with the most number of orders\n*/\n\n\n\nselect c_custkey, c_nationkey, count(*) total_order\nfrom customer c left join orders o on c.c_custkey = o.o_custkey\ngroup by c_custkey, c_nationkey\norder by total_order desc\nlimit 110", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find top 100 customers with the most number of orders\n*/\n\n\n\nselect c_custkey, c_nationkey, count(*) total_order\nfrom customer c left join orders o on c.c_custkey = o.o_custkey\ngroup by c_custkey, c_nationkey\norder by total_order desc\nlimit 110"}, "error": null, "status": "SELECT", "execution_time": 16.436021089553833, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-01-08T14:09:49.749670Z", "completed_at": "2021-01-08T14:09:49.769195Z"}, {"name": "execute", "started_at": "2021-01-08T14:09:49.769442Z", "completed_at": "2021-01-08T14:10:06.108951Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))));", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "wns_nm_DD_DEMOGOG_STAGING"], "unique_id": "model.my_new_project.wns_nm_DD_DEMOGOG_STAGING", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/wns_nm_DD_DEMOGOG_STAGING.sql", "original_file_path": "models/example/wns_nm_DD_DEMOGOG_STAGING.sql", "name": "wns_nm_DD_DEMOGOG_STAGING", "resource_type": "model", "alias": "wns_nm_DD_DEMOGOG_STAGING", "checksum": {"name": "sha256", "checksum": "7a0cc9dc71b18b20bd8e86046f98c2d9d749f39813600a1ef012706d49f8aa1b"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/wns_nm_DD_DEMOGOG_STAGING.sql", "deferred": false, "compiled_sql": "CREATE TABLE wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))));", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))));"}, "error": "Database Error in model wns_nm_DD_DEMOGOG_STAGING (models/example/wns_nm_DD_DEMOGOG_STAGING.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE wns_nm_DD_DEMOGOG_STAGING AS (\n              ^\n  compiled SQL at target/run/my_new_project/models/example/wns_nm_DD_DEMOGOG_STAGING.sql", "status": "ERROR", "execution_time": 1.3988189697265625, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM wns_nm_DD_UCID_HHI_INFO A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY);", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "wns_nm_DD_UCID_HHI_DEMO_TEMP1"], "unique_id": "model.my_new_project.wns_nm_DD_UCID_HHI_DEMO_TEMP1", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/wns_nm_DD_UCID_HHI_DEMO_TEMP1.sql", "original_file_path": "models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1.sql", "name": "wns_nm_DD_UCID_HHI_DEMO_TEMP1", "resource_type": "model", "alias": "wns_nm_DD_UCID_HHI_DEMO_TEMP1", "checksum": {"name": "sha256", "checksum": "33e996bb32e20ad77025b150c63bc89864fe6d43ba49c41f8a04fd4c803475ee"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1.sql", "deferred": false, "compiled_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM wns_nm_DD_UCID_HHI_INFO A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY);", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM wns_nm_DD_UCID_HHI_INFO A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY);"}, "error": "Database Error in model wns_nm_DD_UCID_HHI_DEMO_TEMP1 (models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\n              ^\n  compiled SQL at target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1.sql", "status": "ERROR", "execution_time": 1.4428420066833496, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO);", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "wns_nm_DD_UCID_HHI_DEMO_TEMP1_2"], "unique_id": "model.my_new_project.wns_nm_DD_UCID_HHI_DEMO_TEMP1_2", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/wns_nm_DD_UCID_HHI_DEMO_TEMP1_2.sql", "original_file_path": "models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1_2.sql", "name": "wns_nm_DD_UCID_HHI_DEMO_TEMP1_2", "resource_type": "model", "alias": "wns_nm_DD_UCID_HHI_DEMO_TEMP1_2", "checksum": {"name": "sha256", "checksum": "ee0af2289e0537941558ff54afa8a8abc84a025d5b4062f31733df8f6984b6bd"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1_2.sql", "deferred": false, "compiled_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO);", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO);"}, "error": "Database Error in model wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 (models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1_2.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\n              ^\n  compiled SQL at target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP1_2.sql", "status": "ERROR", "execution_time": 1.380889892578125, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID);", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "wns_nm_DD_UCID_HHI_DEMO_TEMP2"], "unique_id": "model.my_new_project.wns_nm_DD_UCID_HHI_DEMO_TEMP2", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/wns_nm_DD_UCID_HHI_DEMO_TEMP2.sql", "original_file_path": "models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP2.sql", "name": "wns_nm_DD_UCID_HHI_DEMO_TEMP2", "resource_type": "model", "alias": "wns_nm_DD_UCID_HHI_DEMO_TEMP2", "checksum": {"name": "sha256", "checksum": "8b0842ba4c6b4c5ffbd16b461655b287e32c334bb77e9d9cc104ffb8f3f1076f"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP2.sql", "deferred": false, "compiled_sql": "CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID);", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID);"}, "error": "Database Error in model wns_nm_DD_UCID_HHI_DEMO_TEMP2 (models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP2.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\n              ^\n  compiled SQL at target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_DEMO_TEMP2.sql", "status": "ERROR", "execution_time": 1.4064066410064697, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID);", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "wns_nm_DD_UCID_HHI_DEMO_TEMP3"], "unique_id": "model.my_new_project.wns_nm_DD_UCID_HHI_DEMO_TEMP3", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "wns_nm_DD_UCID_HHI_DEMO_TEMP3.sql", "original_file_path": "models/wns_nm_DD_UCID_HHI_DEMO_TEMP3.sql", "name": "wns_nm_DD_UCID_HHI_DEMO_TEMP3", "resource_type": "model", "alias": "wns_nm_DD_UCID_HHI_DEMO_TEMP3", "checksum": {"name": "sha256", "checksum": "5cb5ac590d3adc46ea6813e17d97bf42507e00edd395693afe144d2b07d80b56"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/wns_nm_DD_UCID_HHI_DEMO_TEMP3.sql", "deferred": false, "compiled_sql": "CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID);", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID);"}, "error": "Database Error in model wns_nm_DD_UCID_HHI_DEMO_TEMP3 (models/wns_nm_DD_UCID_HHI_DEMO_TEMP3.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE  wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\n              ^\n  compiled SQL at target/run/my_new_project/models/wns_nm_DD_UCID_HHI_DEMO_TEMP3.sql", "status": "ERROR", "execution_time": 1.3910470008850098, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_INFO AS (\r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM wns_nm_DD_TT_UCID_REFTABLE\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE);\r\n-- Execution time: 16.48s", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "wns_nm_DD_UCID_HHI_INFO"], "unique_id": "model.my_new_project.wns_nm_DD_UCID_HHI_INFO", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/wns_nm_DD_UCID_HHI_INFO.sql", "original_file_path": "models/example/wns_nm_DD_UCID_HHI_INFO.sql", "name": "wns_nm_DD_UCID_HHI_INFO", "resource_type": "model", "alias": "wns_nm_DD_UCID_HHI_INFO", "checksum": {"name": "sha256", "checksum": "f0b285eca2736c710187efa89455c8fb40225d879abe29ca38b004f2a9ef7833"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_INFO.sql", "deferred": false, "compiled_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_INFO AS (\r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM wns_nm_DD_TT_UCID_REFTABLE\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE);\r\n-- Execution time: 16.48s", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "CREATE TABLE wns_nm_DD_UCID_HHI_INFO AS (\r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM wns_nm_DD_TT_UCID_REFTABLE\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE);\r\n-- Execution time: 16.48s"}, "error": "Database Error in model wns_nm_DD_UCID_HHI_INFO (models/example/wns_nm_DD_UCID_HHI_INFO.sql)\n  syntax error at or near \"CREATE\"\n  LINE 5:     CREATE TABLE wns_nm_DD_UCID_HHI_INFO AS (\n              ^\n  compiled SQL at target/run/my_new_project/models/example/wns_nm_DD_UCID_HHI_INFO.sql", "status": "ERROR", "execution_time": 1.3884296417236328, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find 3 nations with the most active customers\n*/\n\n{{ config(materialized='table') }}\n\nselect n_name, n_comment, count(*) as active_buyers\nfrom nation n left join {{ ref('top_customers') }} c on n.n_nationkey = c.c_nationkey\ngroup by n_name, n_comment\norder by active_buyers desc\nlimit 5", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "top_nations"], "unique_id": "model.my_new_project.top_nations", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/top_nations.sql", "original_file_path": "models/example/top_nations.sql", "name": "top_nations", "resource_type": "model", "alias": "top_nations", "checksum": {"name": "sha256", "checksum": "0d66b5d0a40f2d241a990ba75bed385ebfd86ca05d0261895c8bc2d3b09c3656"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["top_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.drop_relation_if_exists"], "nodes": ["model.my_new_project.top_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/top_nations.sql", "deferred": false, "compiled_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find 3 nations with the most active customers\n*/\n\n\n\nselect n_name, n_comment, count(*) as active_buyers\nfrom nation n left join \"dev\".\"development\".\"top_customers\" c on n.n_nationkey = c.c_nationkey\ngroup by n_name, n_comment\norder by active_buyers desc\nlimit 5", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find 3 nations with the most active customers\n*/\n\n\n\nselect n_name, n_comment, count(*) as active_buyers\nfrom nation n left join \"dev\".\"development\".\"top_customers\" c on n.n_nationkey = c.c_nationkey\ngroup by n_name, n_comment\norder by active_buyers desc\nlimit 5"}, "error": null, "status": "SELECT", "execution_time": 2.3798513412475586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-01-08T14:10:14.610163Z", "completed_at": "2021-01-08T14:10:14.629064Z"}, {"name": "execute", "started_at": "2021-01-08T14:10:14.629289Z", "completed_at": "2021-01-08T14:10:16.920167Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "/******************************************************************************************************************************************/\r\n/* SCRIPT A - Collating Demographic Details ***********************************************************************************************/\r\n/******************************************************************************************************************************************/\r\n\r\n-- CREATE A NEW REFTABLE FOR THE SEP END RUN\r\nCREATE TABLE wns_nm_DD_TT_UCID_REFTABLE AS (\r\n\tSELECT perm_ucid_hashed as ucid, SUBSCRIBER_KEY,CUSTOMER_NO,'CARDS' AS CARD_TYPE\r\n\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\tGROUP BY 1,2,3,4) ;\r\n-- Execution time: 8.44s\r\n\r\nCREATE TABLE wns_nm_DD_UCID_HHI_INFO AS (   \r\n\tSELECT A.*, B.EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE\r\n\tFROM (\r\n\t\tSELECT UCID,SUBSCRIBER_KEY,CUSTOMER_NO,CARD_TYPE\r\n\t\tFROM {{ ref('wns_nm_DD_TT_UCID_REFTABLE') }}\r\n\t\tGROUP BY 1,2,3,4) A\r\n\tLEFT JOIN (\r\n\t\tSELECT CUSTOMER_NO, EA_CODE\r\n\t\tFROM ANALYTICS.FND_CUSTOMER\r\n\t\tGROUP BY 1,2) B\r\n\tON A.CUSTOMER_NO=B.CUSTOMER_NO\r\n\tLEFT JOIN (\r\n\t\tSELECT EA_CODE,RACE_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,AVERAGE_ADULT_AGE\r\n\t\tFROM DEVELOPMENT.FND_LST_EA_CODES\r\n\t\tGROUP BY 1,2,3,4,5) C\r\n\tON B.EA_CODE=C.EA_CODE);\r\n-- Execution time: 16.48s\r\n\r\n--ADDING ALL THE REQUIRED INFORMATION IN ONE TABLE(HHI+DEMOGRAPHICS)\r\nCREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1 AS (\r\n\tSELECT A.*,GENDER AS GENDER,BIRTH_DATE,DERIVED_RACE,AGE_DAYS,AGE_YEARS,LAST_UPDATED_DATE AS INFO_CHANGED_DATE, CURRENT_DATE AS CREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_INFO_$[vDayName] A\r\n\tLEFT JOIN (\r\n\t\tSELECT A.*,\r\n\t\t\t\tUPPER(DERIVED_RACE)  AS DERIVED_RACE,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE) AS AGE_DAYS,\r\n\t\t\t\t(CURRENT_DATE -A.BIRTH_DATE)/365 AS AGE_YEARS\r\n\t\tFROM ANALYTICS.FND_CUSTOMER_MASTER A\r\n\t\tLEFT JOIN DEVELOPMENT.FND_CUST_DERIVED_RACE_REF B\r\n\t\t\tON UPPER(A.LAST_NAME)=UPPER(B.SURNAME)) B\r\n\t\tON A.SUBSCRIBER_KEY=B.MASTER_SUBSCRIBER_KEY)$[vLimit];\r\n-- Execution time: 35.36s\r\n\r\n--CREATING TABLE TO DERIVE AGE AND GENDER FROM ID INFORMATION\r\nCREATE TABLE wns_nm_DD_DEMOGOG_STAGING AS (\r\n\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,GENDER,TRUNC(DOB) AS DOB,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB)) AS AGE,\r\n\t\t\t(CURRENT_DATE-TRUNC(DOB))/365 AS AGE_YEARS\r\n\tFROM (\r\n\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,\r\n\t\t\t\tCASE WHEN GEND_IND BETWEEN 0000 AND 4999 THEN 'F'\r\n\t\t\t\t\t WHEN GEND_IND BETWEEN 5000 AND 9999 THEN 'M'\r\n\t\t\t\t\t ELSE 'UNKNOWN' END AS GENDER,\r\n\t\t\t\tCASE WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 2000 AND 2019 THEN BIRTH_DATE\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE)BETWEEN 1900 AND 1919 THEN  DATEADD(YEAR,100,BIRTH_DATE)\r\n\t\t\t\t\t WHEN DATE_PART_YEAR(BIRTH_DATE) BETWEEN 1920 AND 1999 THEN BIRTH_DATE\r\n\t\t\t\t\t ELSE DATEADD(YEAR,-100,BIRTH_DATE) END AS DOB\r\n\t\tFROM (\r\n\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,CARD_ID,TRUNC(TO_DATE(LEFT(CARD_ID,6),'YYMMDD'))AS BIRTH_DATE,SUBSTRING(CARD_ID,7,4) AS GEND_IND\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SUBSCRIBER_KEY,CUSTOMER_NO,MAX(CARD_ID) AS CARD_ID\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT SUBSCRIBER_KEY ,CUSTOMER_NO , CARDHOLDER_IDENTITY_NO AS CARD_ID\r\n\t\t\t\t\tFROM DEVELOPMENT.DIM_CUSTOMER_CARD_MAPPING\r\n\t\t\t\t\tWHERE CARD_ID IS NOT NULL AND CARD_ID <> -1)\r\n\t\t\t\t\tGROUP BY 1,2))))$[vLimit];\r\n-- Execution time: 8.34s\r\n\r\n---AGE FROM ID INFORMATION\r\nCREATE TABLE wns_nm_DD_UCID_HHI_DEMO_TEMP1_2 AS (\r\n\tSELECT A.UCID, A.SUBSCRIBER_KEY , A.CUSTOMER_NO,A.CARD_TYPE,A.EA_CODE,A.INCOME_CLASS,A.HOUSEHOLD_INCOME_SUBRANGE,A.DERIVED_RACE,\r\n\t\t\tCASE WHEN B.AGE IS NULL THEN A.AGE_DAYS ELSE B.AGE END AS AGE_DAYS,\r\n\t\t\tCASE WHEN B.AGE_YEARS IS NULL THEN A.AGE_YEARS ELSE B.AGE_YEARS END AS AGE_YEARS,\r\n\t\t\tCASE WHEN B.GENDER IS NULL THEN A.GENDER ELSE B.GENDER END AS GENDER,\r\n\t\t\tCASE WHEN B.DOB IS NULL THEN A.BIRTH_DATE ELSE B.DOB END AS BIRTH_DATE,\r\n\t\t\tINFO_CHANGED_DATE,\r\n\t\t\tCREATED_DATE\r\n\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1 A\r\n\tLEFT JOIN #wns_nm_DD_DEMOGOG_STAGING B\r\n\t\tON A.SUBSCRIBER_KEY=B.SUBSCRIBER_KEY\r\n\t\t\tAND A.CUSTOMER_NO=B.CUSTOMER_NO)$[vLimit];\r\n-- Execution time: 21.33s\r\n\r\n--------REMOVING DUPLICATES AT UCID, SUBSCRIBER_KEY LEVEL\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP2 AS\r\n\tSELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, SUBSCRIBER_KEY, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP1_2\r\n\t\t\t\tGROUP BY 1,2)\r\n\t\t\tWHERE CNT>1)\r\n\t\t\tAND CUSTOMER_NO IS NOT NULL\r\n\t\tGROUP BY UCID,SUBSCRIBER_KEY,CARD_TYPE,EA_CODE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,\r\n\t\t\t\tDERIVED_RACE,BIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 47.39s\r\n\r\n--------REMOVING DUPLICATES AT UCID\r\nCREATE TABLE  #wns_nm_DD_UCID_HHI_DEMO_TEMP3 AS\r\n\tSELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\tFROM\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT=1)\r\n\t\tORDER BY UCID)\r\n\t\tUNION\r\n\t\t(SELECT UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\tWHERE UCID IN (\r\n\t\t\tSELECT UCID FROM (\r\n\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP2\r\n\t\t\t\tGROUP BY 1)\r\n\t\t\tWHERE CNT>1)\r\n\t\tAND SUBSCRIBER_KEY IS NOT NULL\r\n\t\tGROUP BY UCID,CARD_TYPE,INCOME_CLASS,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tORDER BY UCID)$[vLimit];\r\n-- Execution time: 15.12s\r\n\r\n--FINAL TABLE -- CONSIDERING THE UCID WITH LATEST MODIFIED INFORMATION\r\nDROP TABLE IF EXISTS DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO;\r\nCREATE TABLE DEVELOPMENT.WNS_NM_SD_DIM_CUSTOMER_DEMO\r\n\tDISTSTYLE ALL AS\r\n\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\tBIRTH_DATE,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\tFROM (\r\n\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3 WHERE UCID IN (\r\n\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\tWHERE CNT=1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE)\r\n\t\t\t\tUNION\r\n\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT UCID, CARD_TYPE, INCOME_CLASS, HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,\r\n\t\t\t\t\t\t\tBIRTH_DATE,AGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE,\r\n\t\t\t\t\tROW_NUMBER() OVER(PARTITION BY UCID ORDER BY INFO_CHANGED_DATE DESC,DERIVED_RACE DESC,AGE_DAYS ASC,GENDER ASC) AS RN\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT * FROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\tWHERE UCID IN (\r\n\t\t\t\t\t\t\tSELECT UCID FROM (\r\n\t\t\t\t\t\t\t\tSELECT UCID, COUNT(*)AS CNT\r\n\t\t\t\t\t\t\t\tFROM #wns_nm_DD_UCID_HHI_DEMO_TEMP3\r\n\t\t\t\t\t\t\t\tGROUP BY 1)\r\n\t\t\t\t\t\t\tWHERE CNT>1) -- AND ( INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tAND (INCOME_CLASS <>-1 AND INCOME_CLASS<>' ' AND INCOME_CLASS IS NOT NULL )\r\n\t\t\t\t\t\tORDER BY UCID,HOUSEHOLD_INCOME_SUBRANGE,DERIVED_RACE,BIRTH_DATE,\r\n\t\t\t\t\t\t\t\tAGE_DAYS,AGE_YEARS,GENDER,INFO_CHANGED_DATE,CREATED_DATE))\r\n\t\t\t\tWHERE RN=1)$[vLimit];\r\n-- Execution time: 18.21s\r\n\r\nDROP TABLE IF EXISTS wns_nm_DD_TT_UCID_REFTABLE;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_INFO;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1;\r\nDROP TABLE IF EXISTS wns_nm_DD_DEMOGOG_STAGING;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP1_2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP2;\r\nDROP TABLE IF EXISTS wns_nm_DD_UCID_HHI_DEMO_TEMP3;\r\n\r\n\r\n/******************************************************************************************************************************************/\r\n/* SCRIPT A - END                                                                                                         *****************/\r\n/******************************************************************************************************************************************/", "database": "dev", "schema": "development", "fqn": ["my_new_project", "foobar-script-a"], "unique_id": "model.my_new_project.foobar-script-a", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "foobar-script-a.sql", "original_file_path": "models/foobar-script-a.sql", "name": "foobar-script-a", "resource_type": "model", "alias": "foobar-script-a", "checksum": {"name": "sha256", "checksum": "cda8837479f1edaa04f08a5ce433a2b5a3e79c50886750b2b93659a50a2d50c3"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["wns_nm_DD_TT_UCID_REFTABLE"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.my_new_project.wns_nm_DD_TT_UCID_REFTABLE"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null, "deferred": false}, "error": null, "status": null, "execution_time": 0, "thread_id": null, "timing": [], "fail": null, "warn": null, "skip": true}, {"node": {"raw_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find 3 nations with the most active customers\n*/\n\n{{ config(materialized='table') }}\n\nselect n_name, active_buyers\nfrom {{ ref('top_nations') }}\ngroup by n_name, active_buyers\norder by active_buyers desc\nlimit 1", "compiled": true, "database": "dev", "schema": "development", "fqn": ["my_new_project", "example", "top_customers_rs"], "unique_id": "model.my_new_project.top_customers_rs", "package_name": "my_new_project", "root_path": "/usr/src/develop/user-14378/environment-17219/repository-14004/src/dbt-project", "path": "example/top_customers_rs.sql", "original_file_path": "models/example/top_customers_rs.sql", "name": "top_customers_rs", "resource_type": "model", "alias": "top_customers_rs", "checksum": {"name": "sha256", "checksum": "49a1280ec5eea20a1cf4929baa070c8929f57c1ce015d4fcabaaced665239c6a"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["top_nations"]], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.drop_relation_if_exists"], "nodes": ["model.my_new_project.top_nations"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/my_new_project/models/example/top_customers_rs.sql", "deferred": false, "compiled_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find 3 nations with the most active customers\n*/\n\n\n\nselect n_name, active_buyers\nfrom \"dev\".\"development\".\"top_nations\"\ngroup by n_name, active_buyers\norder by active_buyers desc\nlimit 1", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\n   Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n   SPDX-License-Identifier: MIT-0\n*/\n\n\n/*\n    Find 3 nations with the most active customers\n*/\n\n\n\nselect n_name, active_buyers\nfrom \"dev\".\"development\".\"top_nations\"\ngroup by n_name, active_buyers\norder by active_buyers desc\nlimit 1"}, "error": null, "status": "SELECT", "execution_time": 2.4208731651306152, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-01-08T14:10:16.995173Z", "completed_at": "2021-01-08T14:10:17.017307Z"}, {"name": "execute", "started_at": "2021-01-08T14:10:17.017557Z", "completed_at": "2021-01-08T14:10:19.346740Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-01-08T14:10:20.106352Z", "elapsed_time": 54.68129301071167}